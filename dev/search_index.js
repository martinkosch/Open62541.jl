var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = open62541","category":"page"},{"location":"#open62541","page":"Home","title":"open62541","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for open62541.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [open62541]","category":"page"},{"location":"#open62541.UA_AccessControl","page":"Home","title":"open62541.UA_AccessControl","text":"UA_AccessControl\n\n.. _access-control:\n\nAccess Control Plugin API ========================= The access control callback is used to authenticate sessions and grant access rights accordingly.\n\nThe sessionId and sessionContext can be both NULL. This is the case when, for example, a MonitoredItem (the underlying Subscription) is detached from its Session but continues to run.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ActivateSessionRequest","page":"Home","title":"open62541.UA_ActivateSessionRequest","text":"UA_ActivateSessionRequest\n\nActivateSessionRequest ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ActivateSessionResponse","page":"Home","title":"open62541.UA_ActivateSessionResponse","text":"UA_ActivateSessionResponse\n\nActivateSessionResponse ^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AddNodesItem","page":"Home","title":"open62541.UA_AddNodesItem","text":"UA_AddNodesItem\n\nAddNodesItem ^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AddNodesRequest","page":"Home","title":"open62541.UA_AddNodesRequest","text":"UA_AddNodesRequest\n\nAddNodesRequest ^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AddNodesResponse","page":"Home","title":"open62541.UA_AddNodesResponse","text":"UA_AddNodesResponse\n\nAddNodesResponse ^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AddNodesResult","page":"Home","title":"open62541.UA_AddNodesResult","text":"UA_AddNodesResult\n\nAddNodesResult ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AddReferencesItem","page":"Home","title":"open62541.UA_AddReferencesItem","text":"UA_AddReferencesItem\n\nAddReferencesItem ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AddReferencesRequest","page":"Home","title":"open62541.UA_AddReferencesRequest","text":"UA_AddReferencesRequest\n\nAddReferencesRequest ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AddReferencesResponse","page":"Home","title":"open62541.UA_AddReferencesResponse","text":"UA_AddReferencesResponse\n\nAddReferencesResponse ^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AggregateConfiguration","page":"Home","title":"open62541.UA_AggregateConfiguration","text":"UA_AggregateConfiguration\n\nAggregateConfiguration ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AggregateFilter","page":"Home","title":"open62541.UA_AggregateFilter","text":"UA_AggregateFilter\n\nAggregateFilter ^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AnonymousIdentityToken","page":"Home","title":"open62541.UA_AnonymousIdentityToken","text":"UA_AnonymousIdentityToken\n\nAnonymousIdentityToken ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ApplicationDescription","page":"Home","title":"open62541.UA_ApplicationDescription","text":"UA_ApplicationDescription\n\nApplicationDescription ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ApplicationType","page":"Home","title":"open62541.UA_ApplicationType","text":"UA_ApplicationType\n\nApplicationType ^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Argument","page":"Home","title":"open62541.UA_Argument","text":"UA_Argument\n\nArgument ^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AttributeId","page":"Home","title":"open62541.UA_AttributeId","text":"UA_AttributeId\n\nCommon Definitions ==================\n\nCommon definitions for Client, Server and PubSub.\n\n.. _attribute-id:\n\nAttribute Id –––––– Every node in an OPC UA information model contains attributes depending on the node type. Possible attributes are as follows:\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AttributeOperand","page":"Home","title":"open62541.UA_AttributeOperand","text":"UA_AttributeOperand\n\nAttributeOperand ^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AxisInformation","page":"Home","title":"open62541.UA_AxisInformation","text":"UA_AxisInformation\n\nAxisInformation ^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AxisScaleEnumeration","page":"Home","title":"open62541.UA_AxisScaleEnumeration","text":"UA_AxisScaleEnumeration\n\nAxisScaleEnumeration ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Boolean","page":"Home","title":"open62541.UA_Boolean","text":".. _types:\n\nData Types ==========\n\nThe OPC UA protocol defines 25 builtin data types and three ways of combining them into higher-order types: arrays, structures and unions. In open62541, only the builtin data types are defined manually. All other data types are generated from standard XML definitions. Their exact definitions can be looked up at https://opcfoundation.org/UA/schemas/Opc.Ua.Types.bsd.\n\nFor users that are new to open62541, take a look at the :ref:tutorial for working with data types<types-tutorial> before diving into the implementation details.\n\nBuiltin Types ––––––-\n\nBoolean ^^^^^^^ A two-state logical value (true or false).\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowseDescription","page":"Home","title":"open62541.UA_BrowseDescription","text":"UA_BrowseDescription\n\nBrowseDescription ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowseDirection","page":"Home","title":"open62541.UA_BrowseDirection","text":"UA_BrowseDirection\n\nBrowseDirection ^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowseNextRequest","page":"Home","title":"open62541.UA_BrowseNextRequest","text":"UA_BrowseNextRequest\n\nBrowseNextRequest ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowseNextResponse","page":"Home","title":"open62541.UA_BrowseNextResponse","text":"UA_BrowseNextResponse\n\nBrowseNextResponse ^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowsePath","page":"Home","title":"open62541.UA_BrowsePath","text":"UA_BrowsePath\n\nBrowsePath ^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowsePathResult","page":"Home","title":"open62541.UA_BrowsePathResult","text":"UA_BrowsePathResult\n\nBrowsePathResult ^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowsePathTarget","page":"Home","title":"open62541.UA_BrowsePathTarget","text":"UA_BrowsePathTarget\n\nBrowsePathTarget ^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowseRequest","page":"Home","title":"open62541.UA_BrowseRequest","text":"UA_BrowseRequest\n\nBrowseRequest ^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowseResponse","page":"Home","title":"open62541.UA_BrowseResponse","text":"UA_BrowseResponse\n\nBrowseResponse ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowseResult","page":"Home","title":"open62541.UA_BrowseResult","text":"UA_BrowseResult\n\nBrowseResult ^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowseResultMask","page":"Home","title":"open62541.UA_BrowseResultMask","text":"UA_BrowseResultMask\n\nBrowseResultMask ^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BuildInfo","page":"Home","title":"open62541.UA_BuildInfo","text":"UA_BuildInfo\n\nBuildInfo ^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Byte","page":"Home","title":"open62541.UA_Byte","text":"Byte ^^^^ An integer value between 0 and 255.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ByteString","page":"Home","title":"open62541.UA_ByteString","text":"ByteString ^^^^^^^^^^ A sequence of octets.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CallMethodRequest","page":"Home","title":"open62541.UA_CallMethodRequest","text":"UA_CallMethodRequest\n\nCallMethodRequest ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CallMethodResult","page":"Home","title":"open62541.UA_CallMethodResult","text":"UA_CallMethodResult\n\nCallMethodResult ^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CallRequest","page":"Home","title":"open62541.UA_CallRequest","text":"UA_CallRequest\n\nCallRequest ^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CallResponse","page":"Home","title":"open62541.UA_CallResponse","text":"UA_CallResponse\n\nCallResponse ^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CertificateVerification","page":"Home","title":"open62541.UA_CertificateVerification","text":"UA_CertificateVerification\n\nPublic Key Infrastructure Integration ===================================== This file contains interface definitions for integration in a Public Key Infrastructure (PKI). Currently only one plugin interface is defined.\n\nCertificate Verification –––––––––––– This plugin verifies that the origin of the certificate is trusted. It does not assign any access rights/roles to the holder of the certificate.\n\nUsually, implementations of the certificate verification plugin provide an initialization method that takes a trust-list and a revocation-list as input. The lifecycle of the plugin is attached to a server or client config. The clear method is called automatically when the config is destroyed.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ChannelSecurityToken","page":"Home","title":"open62541.UA_ChannelSecurityToken","text":"UA_ChannelSecurityToken\n\nChannelSecurityToken ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ClientAsyncAddNodesCallback","page":"Home","title":"open62541.UA_ClientAsyncAddNodesCallback","text":"Node Management ^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ClientAsyncOperationCallback","page":"Home","title":"open62541.UA_ClientAsyncOperationCallback","text":"Asynchronous Operations ^^^^^^^^^^^^^^^^^^^^^^^\n\nMany Services can be called with an array of operations. For example, a request to the Read Service contains an array of ReadValueId, each corresponding to a single read operation. For convenience, wrappers are provided to call single operations for the most common Services.\n\nAll async operations have a callback of the following structure: The returned StatusCode is split in two parts. The status indicates the overall success of the request and the operation. The result argument is non-NULL only if the status is no good.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ClientAsyncReadAttributeCallback","page":"Home","title":"open62541.UA_ClientAsyncReadAttributeCallback","text":"Read Attribute ^^^^^^^^^^^^^^\n\nAsynchronously read a single attribute. The attribute is unpacked from the response as the datatype of the attribute is known ahead of time. Value attributes are variants.\n\nNote that the last argument (value pointer) of the callbacks can be NULL if the status of the operation is not good.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ClientAsyncReadCallback","page":"Home","title":"open62541.UA_ClientAsyncReadCallback","text":"Async Services ^^^^^^^^^^^^^^\n\nCall OPC UA Services asynchronously with a callback. The (optional) requestId output can be used to cancel the service while it is still pending.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ClientAsyncServiceCallback","page":"Home","title":"open62541.UA_ClientAsyncServiceCallback","text":".. _client-async-services:\n\nAsynchronous Services ––––––––––- All OPC UA services are asynchronous in nature. So several service calls can be made without waiting for the individual responses. Depending on the server's priorities responses may come in a different ordering than sent.\n\nAs noted in :ref:the client overview<client> currently no means of handling asynchronous events automatically is provided. However, some synchronous function calls will trigger handling, but to ensure this happens a client should periodically call UA_Client_run_iterate explicitly.\n\nConnection and session management are also performed in UA_Client_run_iterate, so to keep a connection healthy any client need to consider how and when it is appropriate to do the call. This is especially true for the periodic renewal of a SecureChannel's SecurityToken which is designed to have a limited lifetime and will invalidate the connection if not renewed.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ClientCallback","page":"Home","title":"open62541.UA_ClientCallback","text":"Timed Callbacks –––––––- Repeated callbacks can be attached to a client and will be executed in the defined interval.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ClientConfig","page":"Home","title":"open62541.UA_ClientConfig","text":"UA_ClientConfig\n\n.. _client:\n\nClient ======\n\nThe client implementation allows remote access to all OPC UA services. For convenience, some functionality has been wrapped in :ref:high-level abstractions <client-highlevel>.\n\nHowever: At this time, the client does not yet contain its own thread or event-driven main-loop, meaning that the client will not perform any actions automatically in the background. This is especially relevant for connection/session management and subscriptions. The user will have to periodically call UA_Client_run_iterate to ensure that asynchronous events are handled, including keeping a secure connection established. See more about :ref:asynchronicity<client-async-services> and :ref:subscriptions<client-subscriptions>.\n\n.. _client-config:\n\nClient Configuration ––––––––––\n\nThe client configuration is used for setting connection parameters and additional settings used by the client. The configuration should not be modified after it is passed to a client. Currently, only one client can use a configuration at a time.\n\nExamples for configurations are provided in the plugins folder. The usual usage is as follows:\n\nCreate a client configuration with default settings as a starting point 2. Modifiy the configuration, e.g. modifying the timeout 3. Instantiate a client with it 4. After shutdown of the client, clean up the configuration (free memory)\n\nThe :ref:tutorials provide a good starting point for this.\n\nField Note\nuserIdentityToken Connection configuration ~~~~~~~~~~~~~~~~~~~~~~~~  The following configuration elements reduce the \"degrees of freedom\" the client has when connecting to a server. If no connection can be made under these restrictions, then the connection will abort with an error message.\nendpoint If either endpoint or userTokenPolicy has been set (at least one non-zero byte in either structure), then the selected Endpoint and UserTokenPolicy overwrite the settings in the basic connection configuration. The userTokenPolicy array in the EndpointDescription is ignored. The selected userTokenPolicy is set in the dedicated configuration field.  If the advanced configuration is not set, the client will write to it the selected Endpoint and UserTokenPolicy during GetEndpoints.  The information in the advanced configuration is used during reconnect when the SecureChannel was broken.\napplicationUri If the EndpointDescription has not been defined, the ApplicationURI constrains the servers considered in the FindServers service and the Endpoints considered in the GetEndpoints service.  If empty the applicationURI is not used to filter.\ncustomDataTypes Custom Data Types ~~~~~~~~~~~~~~~~~ The following is a linked list of arrays with custom data types. All data types that are accessible from here are automatically considered for the decoding of received messages. Custom data types are not cleaned up together with the configuration. So it is possible to allocate them on ROM.  See the section on :ref:generic-types. Examples for working with custom data types are provided in examplescustom_datatype.\nsecureChannelLifeTime Advanced Client Configuration ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Client_DeleteMonitoredItemCallback","page":"Home","title":"open62541.UA_Client_DeleteMonitoredItemCallback","text":"The clientHandle parameter cannot be set by the user, any value will be replaced by the client before sending the request to the server.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Client_DeleteSubscriptionCallback","page":"Home","title":"open62541.UA_Client_DeleteSubscriptionCallback","text":".. _client-subscriptions:\n\nSubscriptions ––––––-\n\nSubscriptions in OPC UA are asynchronous. That is, the client sends several PublishRequests to the server. The server returns PublishResponses with notifications. But only when a notification has been generated. The client does not wait for the responses and continues normal operations.\n\nNote the difference between Subscriptions and MonitoredItems. Subscriptions are used to report back notifications. MonitoredItems are used to generate notifications. Every MonitoredItem is attached to exactly one Subscription. And a Subscription can contain many MonitoredItems.\n\nThe client automatically processes PublishResponses (with a callback) in the background and keeps enough PublishRequests in transit. The PublishResponses may be recieved during a synchronous service call or in [UAClientrun_iterate](@ref). See more about :ref:asynchronicity<client-async-services>.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CloseSecureChannelRequest","page":"Home","title":"open62541.UA_CloseSecureChannelRequest","text":"UA_CloseSecureChannelRequest\n\nCloseSecureChannelRequest ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CloseSecureChannelResponse","page":"Home","title":"open62541.UA_CloseSecureChannelResponse","text":"UA_CloseSecureChannelResponse\n\nCloseSecureChannelResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CloseSessionRequest","page":"Home","title":"open62541.UA_CloseSessionRequest","text":"UA_CloseSessionRequest\n\nCloseSessionRequest ^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CloseSessionResponse","page":"Home","title":"open62541.UA_CloseSessionResponse","text":"UA_CloseSessionResponse\n\nCloseSessionResponse ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ComplexNumberType","page":"Home","title":"open62541.UA_ComplexNumberType","text":"UA_ComplexNumberType\n\nComplexNumberType ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Connection","page":"Home","title":"open62541.UA_Connection","text":"UA_Connection\n\n** amalgamated original file \"/srcdir/open62541/include/open62541/plugin/network.h\" ***\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ConnectionConfig","page":"Home","title":"open62541.UA_ConnectionConfig","text":"UA_ConnectionConfig\n\n.. _networking:\n\nNetworking Plugin API =====================\n\nConnection ––––– Client-server connections are represented by a UA_Connection. The connection is stateful and stores partially received messages, and so on. In addition, the connection contains function pointers to the underlying networking implementation. An example for this is the send function. So the connection encapsulates all the required networking functionality. This lets users on embedded (or otherwise exotic) systems implement their own networking plugins with a clear interface to the main open62541 library.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ContentFilter","page":"Home","title":"open62541.UA_ContentFilter","text":"UA_ContentFilter\n\nContentFilter ^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ContentFilterElement","page":"Home","title":"open62541.UA_ContentFilterElement","text":"UA_ContentFilterElement\n\nContentFilterElement ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ContentFilterElementResult","page":"Home","title":"open62541.UA_ContentFilterElementResult","text":"UA_ContentFilterElementResult\n\nContentFilterElementResult ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ContentFilterResult","page":"Home","title":"open62541.UA_ContentFilterResult","text":"UA_ContentFilterResult\n\nContentFilterResult ^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CreateMonitoredItemsRequest","page":"Home","title":"open62541.UA_CreateMonitoredItemsRequest","text":"UA_CreateMonitoredItemsRequest\n\nCreateMonitoredItemsRequest ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CreateMonitoredItemsResponse","page":"Home","title":"open62541.UA_CreateMonitoredItemsResponse","text":"UA_CreateMonitoredItemsResponse\n\nCreateMonitoredItemsResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CreateSessionRequest","page":"Home","title":"open62541.UA_CreateSessionRequest","text":"UA_CreateSessionRequest\n\nCreateSessionRequest ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CreateSessionResponse","page":"Home","title":"open62541.UA_CreateSessionResponse","text":"UA_CreateSessionResponse\n\nCreateSessionResponse ^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CreateSubscriptionRequest","page":"Home","title":"open62541.UA_CreateSubscriptionRequest","text":"UA_CreateSubscriptionRequest\n\nCreateSubscriptionRequest ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CreateSubscriptionResponse","page":"Home","title":"open62541.UA_CreateSubscriptionResponse","text":"UA_CreateSubscriptionResponse\n\nCreateSubscriptionResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DataChangeFilter","page":"Home","title":"open62541.UA_DataChangeFilter","text":"UA_DataChangeFilter\n\nDataChangeFilter ^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DataChangeNotification","page":"Home","title":"open62541.UA_DataChangeNotification","text":"UA_DataChangeNotification\n\nDataChangeNotification ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DataChangeTrigger","page":"Home","title":"open62541.UA_DataChangeTrigger","text":"UA_DataChangeTrigger\n\nDataChangeTrigger ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DataType","page":"Home","title":"open62541.UA_DataType","text":"UA_DataType\n\n.. _variant:\n\nVariant ^^^^^^^\n\nVariants may contain values of any type together with a description of the content. See the section on :ref:generic-types on how types are described. The standard mandates that variants contain built-in data types only. If the value is not of a builtin type, it is wrapped into an :ref:extensionobject. open62541 hides this wrapping transparently in the encoding layer. If the data type is unknown to the receiver, the variant contains the original ExtensionObject in binary or XML encoding.\n\nVariants may contain a scalar value or an array. For details on the handling of arrays, see the section on :ref:array-handling. Array variants can have an additional dimensionality (matrix, 3-tensor, ...) defined in an array of dimension lengths. The actual values are kept in an array of dimensions one. For users who work with higher-dimensions arrays directly, keep in mind that dimensions of higher rank are serialized first (the highest rank dimension has stride 1 and elements follow each other directly). Usually it is simplest to interact with higher-dimensional arrays via [UA_NumericRange](@ref) descriptions (see :ref:array-handling).\n\nTo differentiate between scalar / array variants, the following definition is used. [UAVariantisScalar](@ref) provides simplified access to these checks.\n\narrayLength == 0  data == NULL: undefined array of length -1 - arrayLength == 0  data == UA_EMPTY_ARRAY_SENTINEL(ref): array of length 0 - arrayLength == 0  data  UA_EMPTY_ARRAY_SENTINEL(ref): scalar value - arrayLength  0: array of the given length\n\nVariants can also be empty. Then, the pointer to the type description is NULL.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DataTypeAttributes","page":"Home","title":"open62541.UA_DataTypeAttributes","text":"UA_DataTypeAttributes\n\nDataTypeAttributes ^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DataTypeMember","page":"Home","title":"open62541.UA_DataTypeMember","text":"UA_DataTypeMember\n\n.. _generic-types:\n\nGeneric Type Handling ––––––––––-\n\nAll information about a (builtin/structured) data type is stored in a [UADataType](@ref). The array ``UATYPES`` contains the description of all standard-defined types. This type description is used for the following generic operations that work on all types:\n\nvoid T_init(T *ptr): Initialize the data type. This is synonymous with zeroing out the memory, i.e. memset(ptr 0 sizeof(T)). - T* T_new(): Allocate and return the memory for the data type. The value is already initialized. - UA_StatusCode(ref) T_copy(const T *src T *dst): Copy the content of the data type. Returns [UASTATUSCODEGOOD](@ref) or [UASTATUSCODEBADOUTOFMEMORY](@ref). - void T_clear(T *ptr): Delete the dynamically allocated content of the data type and perform a T_init to reset the type. - void T_delete(T *ptr): Delete the content of the data type and the memory for the data type itself.\n\nSpecializations, such as UA_Int32_new(ref)() are derived from the generic type operations as static inline functions.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DataTypeNode","page":"Home","title":"open62541.UA_DataTypeNode","text":"UA_DataTypeNode\n\n.. _datatypenode:\n\nDataTypeNode ––––––\n\nDataTypes represent simple and structured data types. DataTypes may contain arrays. But they always describe the structure of a single instance. In open62541, DataTypeNodes in the information model hierarchy are matched to [UA_DataType](@ref) type descriptions for :ref:generic-types via their NodeId.\n\nAbstract DataTypes (e.g. Number) cannot be the type of actual values. They are used to constrain values to possible child DataTypes (e.g. UInt32).\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DataValue","page":"Home","title":"open62541.UA_DataValue","text":"UA_DataValue\n\n.. _datavalue:\n\nDataValue ^^^^^^^^^ A data value with an associated status code and timestamps.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DateTime","page":"Home","title":"open62541.UA_DateTime","text":".. _datetime:\n\nDateTime ^^^^^^^^ An instance in time. A DateTime value is encoded as a 64-bit signed integer which represents the number of 100 nanosecond intervals since January 1, 1601 (UTC).\n\nThe methods providing an interface to the system clock are architecture- specific. Usually, they provide a UTC clock that includes leap seconds. The OPC UA standard allows the use of International Atomic Time (TAI) for the DateTime instead. But this is still unusual and not implemented for most SDKs. Currently (2019), UTC and TAI are 37 seconds apart due to leap seconds.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeadbandType","page":"Home","title":"open62541.UA_DeadbandType","text":"UA_DeadbandType\n\nDeadbandType ^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteMonitoredItemsRequest","page":"Home","title":"open62541.UA_DeleteMonitoredItemsRequest","text":"UA_DeleteMonitoredItemsRequest\n\nDeleteMonitoredItemsRequest ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteMonitoredItemsResponse","page":"Home","title":"open62541.UA_DeleteMonitoredItemsResponse","text":"UA_DeleteMonitoredItemsResponse\n\nDeleteMonitoredItemsResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteNodesItem","page":"Home","title":"open62541.UA_DeleteNodesItem","text":"UA_DeleteNodesItem\n\nDeleteNodesItem ^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteNodesRequest","page":"Home","title":"open62541.UA_DeleteNodesRequest","text":"UA_DeleteNodesRequest\n\nDeleteNodesRequest ^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteNodesResponse","page":"Home","title":"open62541.UA_DeleteNodesResponse","text":"UA_DeleteNodesResponse\n\nDeleteNodesResponse ^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteRawModifiedDetails","page":"Home","title":"open62541.UA_DeleteRawModifiedDetails","text":"UA_DeleteRawModifiedDetails\n\nDeleteRawModifiedDetails ^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteReferencesItem","page":"Home","title":"open62541.UA_DeleteReferencesItem","text":"UA_DeleteReferencesItem\n\nDeleteReferencesItem ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteReferencesRequest","page":"Home","title":"open62541.UA_DeleteReferencesRequest","text":"UA_DeleteReferencesRequest\n\nDeleteReferencesRequest ^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteReferencesResponse","page":"Home","title":"open62541.UA_DeleteReferencesResponse","text":"UA_DeleteReferencesResponse\n\nDeleteReferencesResponse ^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteSubscriptionsRequest","page":"Home","title":"open62541.UA_DeleteSubscriptionsRequest","text":"UA_DeleteSubscriptionsRequest\n\nDeleteSubscriptionsRequest ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteSubscriptionsResponse","page":"Home","title":"open62541.UA_DeleteSubscriptionsResponse","text":"UA_DeleteSubscriptionsResponse\n\nDeleteSubscriptionsResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DiagnosticInfo","page":"Home","title":"open62541.UA_DiagnosticInfo","text":"UA_DiagnosticInfo\n\nDiagnosticInfo ^^^^^^^^^^^^^^ A structure that contains detailed error and diagnostic information associated with a StatusCode.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Double","page":"Home","title":"open62541.UA_Double","text":"Double ^^^^^^ An IEEE double precision (64 bit) floating point value.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DoubleComplexNumberType","page":"Home","title":"open62541.UA_DoubleComplexNumberType","text":"UA_DoubleComplexNumberType\n\nDoubleComplexNumberType ^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Duration","page":"Home","title":"open62541.UA_Duration","text":"Duration ^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EUInformation","page":"Home","title":"open62541.UA_EUInformation","text":"UA_EUInformation\n\nEUInformation ^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ElementOperand","page":"Home","title":"open62541.UA_ElementOperand","text":"UA_ElementOperand\n\nElementOperand ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EndpointDescription","page":"Home","title":"open62541.UA_EndpointDescription","text":"UA_EndpointDescription\n\nEndpointDescription ^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EnumDefinition","page":"Home","title":"open62541.UA_EnumDefinition","text":"UA_EnumDefinition\n\nEnumDefinition ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EnumField","page":"Home","title":"open62541.UA_EnumField","text":"UA_EnumField\n\nEnumField ^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EnumValueType","page":"Home","title":"open62541.UA_EnumValueType","text":"UA_EnumValueType\n\nEnumValueType ^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EventFieldList","page":"Home","title":"open62541.UA_EventFieldList","text":"UA_EventFieldList\n\nEventFieldList ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EventFilter","page":"Home","title":"open62541.UA_EventFilter","text":"UA_EventFilter\n\nEventFilter ^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EventFilterResult","page":"Home","title":"open62541.UA_EventFilterResult","text":"UA_EventFilterResult\n\nEventFilterResult ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EventNotificationList","page":"Home","title":"open62541.UA_EventNotificationList","text":"UA_EventNotificationList\n\nEventNotificationList ^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ExpandedNodeId","page":"Home","title":"open62541.UA_ExpandedNodeId","text":"UA_ExpandedNodeId\n\nExpandedNodeId ^^^^^^^^^^^^^^ A NodeId that allows the namespace URI to be specified instead of an index.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ExtensionObjectEncoding","page":"Home","title":"open62541.UA_ExtensionObjectEncoding","text":"UA_ExtensionObjectEncoding\n\n.. _extensionobject:\n\nExtensionObject ^^^^^^^^^^^^^^^\n\nExtensionObjects may contain scalars of any data type. Even those that are unknown to the receiver. See the section on :ref:generic-types on how types are described. If the received data type is unknown, the encoded string and target NodeId is stored instead of the decoded value.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ExternalValueCallback","page":"Home","title":"open62541.UA_ExternalValueCallback","text":"UA_ExternalValueCallback\n\n.. _value-callback:\n\nValue Callback ~~~~~~~~~~~~~~ Value Callbacks can be attached to variable and variable type nodes. If not NULL, they are called before reading and after writing respectively.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_FilterOperator","page":"Home","title":"open62541.UA_FilterOperator","text":"UA_FilterOperator\n\nFilterOperator ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_FindServersRequest","page":"Home","title":"open62541.UA_FindServersRequest","text":"UA_FindServersRequest\n\nFindServersRequest ^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_FindServersResponse","page":"Home","title":"open62541.UA_FindServersResponse","text":"UA_FindServersResponse\n\nFindServersResponse ^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Float","page":"Home","title":"open62541.UA_Float","text":"Float ^^^^^ An IEEE single precision (32 bit) floating point value.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_GetEndpointsRequest","page":"Home","title":"open62541.UA_GetEndpointsRequest","text":"UA_GetEndpointsRequest\n\nGetEndpointsRequest ^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_GetEndpointsResponse","page":"Home","title":"open62541.UA_GetEndpointsResponse","text":"UA_GetEndpointsResponse\n\nGetEndpointsResponse ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_GlobalNodeLifecycle","page":"Home","title":"open62541.UA_GlobalNodeLifecycle","text":"UA_GlobalNodeLifecycle\n\n.. _information-modelling:\n\nInformation Modelling =====================\n\nInformation modelling in OPC UA combines concepts from object-orientation and semantic modelling. At the core, an OPC UA information model is a graph made up of\n\nNodes: There are eight possible Node types (variable, object, method, ...) - References: Typed and directed relations between two nodes\n\nEvery node is identified by a unique (within the server) :ref:nodeid. Reference are triples of the form (source-nodeid referencetype-nodeid target-nodeid). An example reference between nodes is a hasTypeDefinition reference between a Variable and its VariableType. Some ReferenceTypes are hierarchic and must not form directed loops. See the section on :ref:ReferenceTypes <referencetypenode> for more details on possible references and their semantics.\n\nWarning!! The structures defined in this section are only relevant for the developers of custom Nodestores. The interaction with the information model is possible only via the OPC UA :ref:services. So the following sections are purely informational so that users may have a clear mental model of the underlying representation.\n\n.. _node-lifecycle:\n\nNode Lifecycle: Constructors, Destructors and Node Contexts –––––––––––––––––––––––––––––-\n\nTo finalize the instantiation of a node, a (user-defined) constructor callback is executed. There can be both a global constructor for all nodes and node-type constructor specific to the TypeDefinition of the new node (attached to an ObjectTypeNode or VariableTypeNode).\n\nIn the hierarchy of ObjectTypes and VariableTypes, only the constructor of the (lowest) type defined for the new node is executed. Note that every Object and Variable can have only one isTypeOf reference. But type-nodes can technically have several hasSubType references to implement multiple inheritance. Issues of (multiple) inheritance in the constructor need to be solved by the user.\n\nWhen a node is destroyed, the node-type destructor is called before the global destructor. So the overall node lifecycle is as follows:\n\nGlobal Constructor (set in the server config) 2. Node-Type Constructor (for VariableType or ObjectTypes) 3. (Usage-period of the Node) 4. Node-Type Destructor 5. Global Destructor\n\nThe constructor and destructor callbacks can be set to NULL and are not used in that case. If the node-type constructor fails, the global destructor will be called before removing the node. The destructors are assumed to never fail.\n\nEvery node carries a user-context and a constructor-context pointer. The user-context is used to attach custom data to a node. But the (user-defined) constructors and destructors may replace the user-context pointer if they wish to do so. The initial value for the constructor-context is NULL. When the AddNodes service is used over the network, the user-context pointer of the new node is also initially set to NULL.\n\nGlobal Node Lifecycle ~~~~~~~~~~~~~~~~~~~~~~ Global constructor and destructor callbacks used for every node type. To be set in the server config.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Guid","page":"Home","title":"open62541.UA_Guid","text":"UA_Guid\n\nGuid ^^^^ A 16 byte value that can be used as a globally unique identifier.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_HistoryData","page":"Home","title":"open62541.UA_HistoryData","text":"UA_HistoryData\n\nHistoryData ^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_HistoryEvent","page":"Home","title":"open62541.UA_HistoryEvent","text":"UA_HistoryEvent\n\nHistoryEvent ^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_HistoryEventFieldList","page":"Home","title":"open62541.UA_HistoryEventFieldList","text":"UA_HistoryEventFieldList\n\nHistoryEventFieldList ^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_HistoryModifiedData","page":"Home","title":"open62541.UA_HistoryModifiedData","text":"UA_HistoryModifiedData\n\nHistoryModifiedData ^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_HistoryReadRequest","page":"Home","title":"open62541.UA_HistoryReadRequest","text":"UA_HistoryReadRequest\n\nHistoryReadRequest ^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_HistoryReadResponse","page":"Home","title":"open62541.UA_HistoryReadResponse","text":"UA_HistoryReadResponse\n\nHistoryReadResponse ^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_HistoryReadResult","page":"Home","title":"open62541.UA_HistoryReadResult","text":"UA_HistoryReadResult\n\nHistoryReadResult ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_HistoryReadValueId","page":"Home","title":"open62541.UA_HistoryReadValueId","text":"UA_HistoryReadValueId\n\nHistoryReadValueId ^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_HistoryUpdateRequest","page":"Home","title":"open62541.UA_HistoryUpdateRequest","text":"UA_HistoryUpdateRequest\n\nHistoryUpdateRequest ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_HistoryUpdateResponse","page":"Home","title":"open62541.UA_HistoryUpdateResponse","text":"UA_HistoryUpdateResponse\n\nHistoryUpdateResponse ^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_HistoryUpdateResult","page":"Home","title":"open62541.UA_HistoryUpdateResult","text":"UA_HistoryUpdateResult\n\nHistoryUpdateResult ^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_HistoryUpdateType","page":"Home","title":"open62541.UA_HistoryUpdateType","text":"UA_HistoryUpdateType\n\nHistoryUpdateType ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Int16","page":"Home","title":"open62541.UA_Int16","text":"Int16 ^^^^^ An integer value between -32 768 and 32 767.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Int32","page":"Home","title":"open62541.UA_Int32","text":"Int32 ^^^^^ An integer value between -2 147 483 648 and 2 147 483 647.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Int64","page":"Home","title":"open62541.UA_Int64","text":"Int64 ^^^^^ An integer value between -9 223 372 036 854 775 808 and 9 223 372 036 854 775 807.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_IssuedIdentityToken","page":"Home","title":"open62541.UA_IssuedIdentityToken","text":"UA_IssuedIdentityToken\n\nIssuedIdentityToken ^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_KeyValuePair","page":"Home","title":"open62541.UA_KeyValuePair","text":"UA_KeyValuePair\n\nKeyValuePair ^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_LiteralOperand","page":"Home","title":"open62541.UA_LiteralOperand","text":"UA_LiteralOperand\n\nLiteralOperand ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_LocaleId","page":"Home","title":"open62541.UA_LocaleId","text":"LocaleId ^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_LocalizedText","page":"Home","title":"open62541.UA_LocalizedText","text":"UA_LocalizedText\n\nLocalizedText ^^^^^^^^^^^^^ Human readable text with an optional locale identifier.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_LogLevel","page":"Home","title":"open62541.UA_LogLevel","text":"UA_LogLevel\n\nLogging Plugin API ==================\n\nServers and clients define a logger in their configuration. The logger is a plugin. A default plugin that logs to stdout is provided as an example. The logger plugin is stateful and can point to custom data. So it is possible to keep open file handlers in the logger context.\n\nEvery log message consists of a log level, a log category and a string message content. The timestamp of the log message is created within the logger.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MessageSecurityMode","page":"Home","title":"open62541.UA_MessageSecurityMode","text":"UA_MessageSecurityMode\n\nMessageSecurityMode ^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MethodAttributes","page":"Home","title":"open62541.UA_MethodAttributes","text":"UA_MethodAttributes\n\nMethodAttributes ^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MethodCallback","page":"Home","title":"open62541.UA_MethodCallback","text":".. _methodnode:\n\nMethodNode –––––\n\nMethods define callable functions and are invoked using the :ref:Call <method-services> service. MethodNodes may have special properties (variable children with a hasProperty reference) with the :ref:qualifiedname (0 InputArguments) and (0 OutputArguments). The input and output arguments are both described via an array of [UA_Argument](@ref). While the Call service uses a generic array of :ref:variant for input and output, the actual argument values are checked to match the signature of the MethodNode.\n\nNote that the same MethodNode may be referenced from several objects (and object types). For this, the NodeId of the method and of the object providing context is part of a Call request message.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ModificationInfo","page":"Home","title":"open62541.UA_ModificationInfo","text":"UA_ModificationInfo\n\nModificationInfo ^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ModifyMonitoredItemsRequest","page":"Home","title":"open62541.UA_ModifyMonitoredItemsRequest","text":"UA_ModifyMonitoredItemsRequest\n\nModifyMonitoredItemsRequest ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ModifyMonitoredItemsResponse","page":"Home","title":"open62541.UA_ModifyMonitoredItemsResponse","text":"UA_ModifyMonitoredItemsResponse\n\nModifyMonitoredItemsResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ModifySubscriptionRequest","page":"Home","title":"open62541.UA_ModifySubscriptionRequest","text":"UA_ModifySubscriptionRequest\n\nModifySubscriptionRequest ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ModifySubscriptionResponse","page":"Home","title":"open62541.UA_ModifySubscriptionResponse","text":"UA_ModifySubscriptionResponse\n\nModifySubscriptionResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MonitoredItemCreateRequest","page":"Home","title":"open62541.UA_MonitoredItemCreateRequest","text":"UA_MonitoredItemCreateRequest\n\nMonitoredItemCreateRequest ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MonitoredItemCreateResult","page":"Home","title":"open62541.UA_MonitoredItemCreateResult","text":"UA_MonitoredItemCreateResult\n\nMonitoredItemCreateResult ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MonitoredItemModifyRequest","page":"Home","title":"open62541.UA_MonitoredItemModifyRequest","text":"UA_MonitoredItemModifyRequest\n\nMonitoredItemModifyRequest ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MonitoredItemModifyResult","page":"Home","title":"open62541.UA_MonitoredItemModifyResult","text":"UA_MonitoredItemModifyResult\n\nMonitoredItemModifyResult ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MonitoredItemNotification","page":"Home","title":"open62541.UA_MonitoredItemNotification","text":"UA_MonitoredItemNotification\n\nMonitoredItemNotification ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MonitoringMode","page":"Home","title":"open62541.UA_MonitoringMode","text":"UA_MonitoringMode\n\nMonitoringMode ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MonitoringParameters","page":"Home","title":"open62541.UA_MonitoringParameters","text":"UA_MonitoringParameters\n\nMonitoringParameters ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NetworkStatistics","page":"Home","title":"open62541.UA_NetworkStatistics","text":"UA_NetworkStatistics\n\nStatistic counters –––––––––\n\nThe stack manages statistic counters for the following layers:\n\nNetwork - Secure channel - Session\n\nThe session layer counters are matching the counters of the ServerDiagnosticsSummaryDataType that are defined in the OPC UA Part 5 specification. Counters of the other layers are not specified by OPC UA but are harmonized with the session layer counters if possible.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Node","page":"Home","title":"open62541.UA_Node","text":"UA_Node\n\nNode Union –––––\n\nA union that represents any kind of node. The node head can always be used. Check the NodeClass before accessing specific content.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NodeAttributes","page":"Home","title":"open62541.UA_NodeAttributes","text":"UA_NodeAttributes\n\nNodeAttributes ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NodeAttributesMask","page":"Home","title":"open62541.UA_NodeAttributesMask","text":"UA_NodeAttributesMask\n\nNodeAttributesMask ^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NodeClass","page":"Home","title":"open62541.UA_NodeClass","text":"UA_NodeClass\n\nNodeClass ^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NodeHead","page":"Home","title":"open62541.UA_NodeHead","text":"UA_NodeHead\n\nNode Pointer ============\n\nThe \"native\" format for reference between nodes is the ExpandedNodeId. That is, references can also point to external servers. In practice, most references point to local nodes using numerical NodeIds from the standard-defined namespace zero. In order to save space (and time), pointer-tagging is used for compressed \"NodePointer\" representations. Numerical NodeIds are immediately contained in the pointer. Full NodeIds and ExpandedNodeIds are behind a pointer indirection. If the Nodestore supports it, a NodePointer can also be an actual pointer to the target node.\n\nDepending on the processor architecture, some numerical NodeIds don't fit into an immediate encoding and are kept as pointers. ExpandedNodeIds may be internally translated to \"normal\" NodeIds. Use the provided functions to generate NodePointers that fit the assumptions for the local architecture.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NodeIdType","page":"Home","title":"open62541.UA_NodeIdType","text":"UA_NodeIdType\n\n.. _nodeid:\n\nNodeId ^^^^^^ An identifier for a node in the address space of an OPC UA Server.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NodeTypeLifecycle","page":"Home","title":"open62541.UA_NodeTypeLifecycle","text":"UA_NodeTypeLifecycle\n\nNode Type Lifecycle ~~~~~~~~~~~~~~~~~~~ Constructor and destructors for specific object and variable types.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NodestoreVisitor","page":"Home","title":"open62541.UA_NodestoreVisitor","text":"Nodestore Plugin API ––––––––––\n\nThe following definitions are used for implementing custom node storage backends. Most users will want to use the default nodestore and don't need to work with the nodestore API.\n\nOutside of custom nodestore implementations, users should not manually edit nodes. Please use the OPC UA services for that. Otherwise, all consistency checks are omitted. This can crash the application eventually.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NotificationMessage","page":"Home","title":"open62541.UA_NotificationMessage","text":"UA_NotificationMessage\n\nNotificationMessage ^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NumericRangeDimension","page":"Home","title":"open62541.UA_NumericRangeDimension","text":"UA_NumericRangeDimension\n\n.. _numericrange:\n\nNumericRange ^^^^^^^^^^^^\n\nNumericRanges are used to indicate subsets of a (multidimensional) array. They no official data type in the OPC UA standard and are transmitted only with a string encoding, such as \"1:2,0:3,5\". The colon separates min/max index and the comma separates dimensions. A single value indicates a range with a single element (min==max).\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ObjectAttributes","page":"Home","title":"open62541.UA_ObjectAttributes","text":"UA_ObjectAttributes\n\nObjectAttributes ^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ObjectNode","page":"Home","title":"open62541.UA_ObjectNode","text":"UA_ObjectNode\n\nObjectNode –––––\n\nObjects are used to represent systems, system components, real-world objects and software objects. Objects are instances of an :ref:object type<objecttypenode> and may contain variables, methods and further objects.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ObjectTypeAttributes","page":"Home","title":"open62541.UA_ObjectTypeAttributes","text":"UA_ObjectTypeAttributes\n\nObjectTypeAttributes ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ObjectTypeNode","page":"Home","title":"open62541.UA_ObjectTypeNode","text":"UA_ObjectTypeNode\n\n.. _objecttypenode:\n\nObjectTypeNode –––––––\n\nObjectTypes provide definitions for Objects. Abstract objects cannot be instantiated. See :ref:node-lifecycle for the use of constructor and destructor callbacks.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_OpenSecureChannelRequest","page":"Home","title":"open62541.UA_OpenSecureChannelRequest","text":"UA_OpenSecureChannelRequest\n\nOpenSecureChannelRequest ^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_OpenSecureChannelResponse","page":"Home","title":"open62541.UA_OpenSecureChannelResponse","text":"UA_OpenSecureChannelResponse\n\nOpenSecureChannelResponse ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Order","page":"Home","title":"open62541.UA_Order","text":"UA_Order\n\nOrder ––-\n\nThe Order enum is used to establish an absolute ordering between elements.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_PerformUpdateType","page":"Home","title":"open62541.UA_PerformUpdateType","text":"UA_PerformUpdateType\n\nPerformUpdateType ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_PublishRequest","page":"Home","title":"open62541.UA_PublishRequest","text":"UA_PublishRequest\n\nPublishRequest ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_PublishResponse","page":"Home","title":"open62541.UA_PublishResponse","text":"UA_PublishResponse\n\nPublishResponse ^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_QualifiedName","page":"Home","title":"open62541.UA_QualifiedName","text":"UA_QualifiedName\n\n.. _qualifiedname:\n\nQualifiedName ^^^^^^^^^^^^^ A name qualified by a namespace.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Range","page":"Home","title":"open62541.UA_Range","text":"UA_Range\n\nRange ^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReadAtTimeDetails","page":"Home","title":"open62541.UA_ReadAtTimeDetails","text":"UA_ReadAtTimeDetails\n\nReadAtTimeDetails ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReadEventDetails","page":"Home","title":"open62541.UA_ReadEventDetails","text":"UA_ReadEventDetails\n\nReadEventDetails ^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReadProcessedDetails","page":"Home","title":"open62541.UA_ReadProcessedDetails","text":"UA_ReadProcessedDetails\n\nReadProcessedDetails ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReadRawModifiedDetails","page":"Home","title":"open62541.UA_ReadRawModifiedDetails","text":"UA_ReadRawModifiedDetails\n\nReadRawModifiedDetails ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReadRequest","page":"Home","title":"open62541.UA_ReadRequest","text":"UA_ReadRequest\n\nReadRequest ^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReadResponse","page":"Home","title":"open62541.UA_ReadResponse","text":"UA_ReadResponse\n\nReadResponse ^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReadValueId","page":"Home","title":"open62541.UA_ReadValueId","text":"UA_ReadValueId\n\nReadValueId ^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RedundancySupport","page":"Home","title":"open62541.UA_RedundancySupport","text":"UA_RedundancySupport\n\nRedundancySupport ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReferenceDescription","page":"Home","title":"open62541.UA_ReferenceDescription","text":"UA_ReferenceDescription\n\nReferenceDescription ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReferenceTarget","page":"Home","title":"open62541.UA_ReferenceTarget","text":"UA_ReferenceTarget\n\nBase Node Attributes ––––––––––\n\nNodes contain attributes according to their node type. The base node attributes are common to all node types. In the OPC UA :ref:services, attributes are referred to via the :ref:nodeid of the containing node and an integer :ref:attribute-id.\n\nInternally, open62541 uses [UANode](@ref) in places where the exact node type is not known or not important. The nodeClass attribute is used to ensure the correctness of casting from [UANode](@ref) to a specific node type.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReferenceTypeAttributes","page":"Home","title":"open62541.UA_ReferenceTypeAttributes","text":"UA_ReferenceTypeAttributes\n\nReferenceTypeAttributes ^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReferenceTypeNode","page":"Home","title":"open62541.UA_ReferenceTypeNode","text":"UA_ReferenceTypeNode\n\n.. _referencetypenode:\n\nReferenceTypeNode ––––––––-\n\nEach reference between two nodes is typed with a ReferenceType that gives meaning to the relation. The OPC UA standard defines a set of ReferenceTypes as a mandatory part of OPC UA information models.\n\nAbstract ReferenceTypes cannot be used in actual references and are only used to structure the ReferenceTypes hierarchy - Symmetric references have the same meaning from the perspective of the source and target node\n\nThe figure below shows the hierarchy of the standard ReferenceTypes (arrows indicate a hasSubType relation). Refer to Part 3 of the OPC UA specification for the full semantics of each ReferenceType.\n\n.. graphviz::\n\ndigraph tree {\n\nnode [height=0, shape=box, fillcolor=\"#E5E5E5\", concentrate=true]\n\nreferences [label=\"References\\n(Abstract, Symmetric)\"] hierarchical_references [label=\"HierarchicalReferences\\n(Abstract)\"] references -> hierarchical_references\n\nnonhierarchical_references [label=\"NonHierarchicalReferences\\n(Abstract, Symmetric)\"] references -> nonhierarchical_references\n\nhaschild [label=\"HasChild\\n(Abstract)\"] hierarchical_references -> haschild\n\naggregates [label=\"Aggregates\\n(Abstract)\"] haschild -> aggregates\n\norganizes [label=\"Organizes\"] hierarchical_references -> organizes\n\nhascomponent [label=\"HasComponent\"] aggregates -> hascomponent\n\nhasorderedcomponent [label=\"HasOrderedComponent\"] hascomponent -> hasorderedcomponent\n\nhasproperty [label=\"HasProperty\"] aggregates -> hasproperty\n\nhassubtype [label=\"HasSubtype\"] haschild -> hassubtype\n\nhasmodellingrule [label=\"HasModellingRule\"] nonhierarchical_references -> hasmodellingrule\n\nhastypedefinition [label=\"HasTypeDefinition\"] nonhierarchical_references -> hastypedefinition\n\nhasencoding [label=\"HasEncoding\"] nonhierarchical_references -> hasencoding\n\nhasdescription [label=\"HasDescription\"] nonhierarchical_references -> hasdescription\n\nhaseventsource [label=\"HasEventSource\"] hierarchical_references -> haseventsource\n\nhasnotifier [label=\"HasNotifier\"] hierarchical_references -> hasnotifier\n\ngeneratesevent [label=\"GeneratesEvent\"] nonhierarchical_references -> generatesevent\n\nalwaysgeneratesevent [label=\"AlwaysGeneratesEvent\"] generatesevent -> alwaysgeneratesevent\n\n{rank=same hierarchical_references nonhierarchical_references} {rank=same generatesevent haseventsource hasmodellingrule hasencoding hassubtype} {rank=same alwaysgeneratesevent hasproperty}\n\n}\n\nThe ReferenceType hierarchy can be extended with user-defined ReferenceTypes. Many Companion Specifications for OPC UA define new ReferenceTypes to be used in their domain of interest.\n\nFor the following example of custom ReferenceTypes, we attempt to model the structure of a technical system. For this, we introduce two custom ReferenceTypes. First, the hierarchical contains ReferenceType indicates that a system (represented by an OPC UA object) contains a component (or subsystem). This gives rise to a tree-structure of containment relations. For example, the motor (object) is contained in the car and the crankshaft is contained in the motor. Second, the symmetric connectedTo ReferenceType indicates that two components are connected. For example, the motor's crankshaft is connected to the gear box. Connections are independent of the containment hierarchy and can induce a general graph-structure. Further subtypes of connectedTo could be used to differentiate between physical, electrical and information related connections. A client can then learn the layout of a (physical) system represented in an OPC UA information model based on a common understanding of just two custom reference types.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RegisterNodesRequest","page":"Home","title":"open62541.UA_RegisterNodesRequest","text":"UA_RegisterNodesRequest\n\nRegisterNodesRequest ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RegisterNodesResponse","page":"Home","title":"open62541.UA_RegisterNodesResponse","text":"UA_RegisterNodesResponse\n\nRegisterNodesResponse ^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RelativePath","page":"Home","title":"open62541.UA_RelativePath","text":"UA_RelativePath\n\nRelativePath ^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RelativePathElement","page":"Home","title":"open62541.UA_RelativePathElement","text":"UA_RelativePathElement\n\nRelativePathElement ^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RepublishRequest","page":"Home","title":"open62541.UA_RepublishRequest","text":"UA_RepublishRequest\n\nRepublishRequest ^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RepublishResponse","page":"Home","title":"open62541.UA_RepublishResponse","text":"UA_RepublishResponse\n\nRepublishResponse ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RequestHeader","page":"Home","title":"open62541.UA_RequestHeader","text":"UA_RequestHeader\n\nRequestHeader ^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ResponseHeader","page":"Home","title":"open62541.UA_ResponseHeader","text":"UA_ResponseHeader\n\nResponseHeader ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RuleHandling","page":"Home","title":"open62541.UA_RuleHandling","text":"UA_RuleHandling\n\n.. _rule-handling:\n\nRule Handling ––––––-\n\nThe RuleHanding settings define how error cases that result from rules in the OPC UA specification shall be handled. The rule handling can be softened, e.g. to workaround misbehaving implementations or to mitigate the impact of additional rules that are introduced in later versions of the OPC UA specification.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SByte","page":"Home","title":"open62541.UA_SByte","text":"SByte ^^^^^ An integer value between -128 and 127.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SecureChannelState","page":"Home","title":"open62541.UA_SecureChannelState","text":"UA_SecureChannelState\n\nConnection State ––––––––\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SecurityPolicySignatureAlgorithm","page":"Home","title":"open62541.UA_SecurityPolicySignatureAlgorithm","text":"UA_SecurityPolicySignatureAlgorithm\n\nSecurityPolicy Interface Definition –––––––––––––––––-\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SecurityTokenRequestType","page":"Home","title":"open62541.UA_SecurityTokenRequestType","text":"UA_SecurityTokenRequestType\n\nSecurityTokenRequestType ^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Server","page":"Home","title":"open62541.UA_Server","text":"Forward Declarations –––––––––– Opaque pointers used by the plugins.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ServerConfig","page":"Home","title":"open62541.UA_ServerConfig","text":"UA_ServerConfig\n\n.. _server:\n\nServer ======\n\n.. _server-configuration:\n\nServer Configuration –––––––––– The configuration structure is passed to the server during initialization. The server expects that the configuration is not modified during runtime. Currently, only one server can use a configuration at a time. During shutdown, the server will clean up the parts of the configuration that are modified at runtime through the provided API.\n\nExamples for configurations are provided in the plugins folder. The usual usage is as follows:\n\nCreate a server configuration with default settings as a starting point 2. Modifiy the configuration, e.g. by adding a server certificate 3. Instantiate a server with it 4. After shutdown of the server, clean up the configuration (free memory)\n\nThe :ref:tutorials provide a good starting point for this.\n\nField Note\nbuildInfo Server Description ^^^^^^^^^^^^^^^^^^ The description must be internally consistent. The ApplicationUri set in the ApplicationDescription must match the URI set in the server certificate.\nshutdownDelay Timeouts and Delays ^^^^^^^^^^^^^^^^^^^\nverifyRequestTimestamp Rule Handling ^^^^^^^^^^^^^ Override the handling of standard-defined behavior. These settings are used to balance the following contradicting requirements:  - Strict conformance with the standard (for certification). - Ensure interoperability with old/non-conforming implementations encountered in the wild.  The defaults are set for compatibility with the largest number of OPC UA vendors (with log warnings activated). Cf. Postel's Law \"be conservative in what you send, be liberal in what you accept\".  See the section :ref:rule-handling for the possible settings.\ncustomDataTypes Custom Data Types ^^^^^^^^^^^^^^^^^ The following is a linked list of arrays with custom data types. All data types that are accessible from here are automatically considered for the decoding of received messages. Custom data types are not cleaned up together with the configuration. So it is possible to allocate them on ROM.  See the section on :ref:generic-types. Examples for working with custom data types are provided in examplescustom_datatype.\nnetworkLayersSize Networking ^^^^^^^^^^\nsecurityPoliciesSize Security and Encryption ^^^^^^^^^^^^^^^^^^^^^^^\naccessControl See the section for :ref:access-control handling<access-control>.\nnodestore Nodes and Node Lifecycle ^^^^^^^^^^^^^^^^^^^^^^^^ See the section for :ref:node lifecycle handling<node-lifecycle>.\nmodellingRulesOnInstances Copy the HasModellingRule reference in instances from the type definition in UA_Server_addObjectNode and UA_Server_addVariableNode.  Part 3 - 6.4.4: [...] it is not required that newly created or referenced instances based on InstanceDeclarations have a ModellingRule, however, it is allowed that they have any ModellingRule independent of the ModellingRule of their InstanceDeclaration\nmaxSecureChannels Limits ^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ServerDiagnosticsSummaryDataType","page":"Home","title":"open62541.UA_ServerDiagnosticsSummaryDataType","text":"UA_ServerDiagnosticsSummaryDataType\n\nServerDiagnosticsSummaryDataType ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ServerState","page":"Home","title":"open62541.UA_ServerState","text":"UA_ServerState\n\nServerState ^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ServerStatistics","page":"Home","title":"open62541.UA_ServerStatistics","text":"UA_ServerStatistics\n\nStatistics –––––\n\nStatistic counters keeping track of the current state of the stack. Counters are structured per OPC UA communication layer.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ServerStatusDataType","page":"Home","title":"open62541.UA_ServerStatusDataType","text":"UA_ServerStatusDataType\n\nServerStatusDataType ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ServiceFault","page":"Home","title":"open62541.UA_ServiceFault","text":"UA_ServiceFault\n\nServiceFault ^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SetMonitoringModeRequest","page":"Home","title":"open62541.UA_SetMonitoringModeRequest","text":"UA_SetMonitoringModeRequest\n\nSetMonitoringModeRequest ^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SetMonitoringModeResponse","page":"Home","title":"open62541.UA_SetMonitoringModeResponse","text":"UA_SetMonitoringModeResponse\n\nSetMonitoringModeResponse ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SetPublishingModeRequest","page":"Home","title":"open62541.UA_SetPublishingModeRequest","text":"UA_SetPublishingModeRequest\n\nSetPublishingModeRequest ^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SetPublishingModeResponse","page":"Home","title":"open62541.UA_SetPublishingModeResponse","text":"UA_SetPublishingModeResponse\n\nSetPublishingModeResponse ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SetTriggeringRequest","page":"Home","title":"open62541.UA_SetTriggeringRequest","text":"UA_SetTriggeringRequest\n\nSetTriggeringRequest ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SetTriggeringResponse","page":"Home","title":"open62541.UA_SetTriggeringResponse","text":"UA_SetTriggeringResponse\n\nSetTriggeringResponse ^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SignatureData","page":"Home","title":"open62541.UA_SignatureData","text":"UA_SignatureData\n\nSignatureData ^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SignedSoftwareCertificate","page":"Home","title":"open62541.UA_SignedSoftwareCertificate","text":"UA_SignedSoftwareCertificate\n\nSignedSoftwareCertificate ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SimpleAttributeOperand","page":"Home","title":"open62541.UA_SimpleAttributeOperand","text":"UA_SimpleAttributeOperand\n\nSimpleAttributeOperand ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_StatusChangeNotification","page":"Home","title":"open62541.UA_StatusChangeNotification","text":"UA_StatusChangeNotification\n\nStatusChangeNotification ^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_StatusCode","page":"Home","title":"open62541.UA_StatusCode","text":".. _statuscode:\n\nStatusCode ^^^^^^^^^^ A numeric identifier for an error or condition that is associated with a value or an operation. See the section :ref:statuscodes for the meaning of a specific code.\n\nEach StatusCode has one of three \"severity\" bit-flags: Good, Uncertain, Bad. An additional reason is indicated by the SubCode bitfield.\n\nA StatusCode with severity Good means that the value is of good quality. - A StatusCode with severity Uncertain means that the quality of the value is uncertain for reasons indicated by the SubCode. - A StatusCode with severity Bad means that the value is not usable for reasons indicated by the SubCode.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_String","page":"Home","title":"open62541.UA_String","text":"UA_String\n\nString ^^^^^^ A sequence of Unicode characters. Strings are just an array of UA_Byte.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_StructureDefinition","page":"Home","title":"open62541.UA_StructureDefinition","text":"UA_StructureDefinition\n\nStructureDefinition ^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_StructureField","page":"Home","title":"open62541.UA_StructureField","text":"UA_StructureField\n\nStructureField ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_StructureType","page":"Home","title":"open62541.UA_StructureType","text":"UA_StructureType\n\nStructureType ^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SubscriptionAcknowledgement","page":"Home","title":"open62541.UA_SubscriptionAcknowledgement","text":"UA_SubscriptionAcknowledgement\n\nSubscriptionAcknowledgement ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_TimeZoneDataType","page":"Home","title":"open62541.UA_TimeZoneDataType","text":"UA_TimeZoneDataType\n\nTimeZoneDataType ^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_TimestampsToReturn","page":"Home","title":"open62541.UA_TimestampsToReturn","text":"UA_TimestampsToReturn\n\nTimestampsToReturn ^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_TransferResult","page":"Home","title":"open62541.UA_TransferResult","text":"UA_TransferResult\n\nTransferResult ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_TransferSubscriptionsRequest","page":"Home","title":"open62541.UA_TransferSubscriptionsRequest","text":"UA_TransferSubscriptionsRequest\n\nTransferSubscriptionsRequest ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_TransferSubscriptionsResponse","page":"Home","title":"open62541.UA_TransferSubscriptionsResponse","text":"UA_TransferSubscriptionsResponse\n\nTransferSubscriptionsResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_TranslateBrowsePathsToNodeIdsRequest","page":"Home","title":"open62541.UA_TranslateBrowsePathsToNodeIdsRequest","text":"UA_TranslateBrowsePathsToNodeIdsRequest\n\nTranslateBrowsePathsToNodeIdsRequest ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_TranslateBrowsePathsToNodeIdsResponse","page":"Home","title":"open62541.UA_TranslateBrowsePathsToNodeIdsResponse","text":"UA_TranslateBrowsePathsToNodeIdsResponse\n\nTranslateBrowsePathsToNodeIdsResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UInt16","page":"Home","title":"open62541.UA_UInt16","text":"UInt16 ^^^^^^ An integer value between 0 and 65 535.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UInt32","page":"Home","title":"open62541.UA_UInt32","text":"UInt32 ^^^^^^ An integer value between 0 and 4 294 967 295.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UInt64","page":"Home","title":"open62541.UA_UInt64","text":"UInt64 ^^^^^^ An integer value between 0 and 18 446 744 073 709 551 615.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UnregisterNodesRequest","page":"Home","title":"open62541.UA_UnregisterNodesRequest","text":"UA_UnregisterNodesRequest\n\nUnregisterNodesRequest ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UnregisterNodesResponse","page":"Home","title":"open62541.UA_UnregisterNodesResponse","text":"UA_UnregisterNodesResponse\n\nUnregisterNodesResponse ^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UpdateDataDetails","page":"Home","title":"open62541.UA_UpdateDataDetails","text":"UA_UpdateDataDetails\n\nUpdateDataDetails ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UserIdentityToken","page":"Home","title":"open62541.UA_UserIdentityToken","text":"UA_UserIdentityToken\n\nUserIdentityToken ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UserNameIdentityToken","page":"Home","title":"open62541.UA_UserNameIdentityToken","text":"UA_UserNameIdentityToken\n\nUserNameIdentityToken ^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UserTokenPolicy","page":"Home","title":"open62541.UA_UserTokenPolicy","text":"UA_UserTokenPolicy\n\nUserTokenPolicy ^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UserTokenType","page":"Home","title":"open62541.UA_UserTokenType","text":"UA_UserTokenType\n\nUserTokenType ^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UsernamePasswordLogin","page":"Home","title":"open62541.UA_UsernamePasswordLogin","text":"UA_UsernamePasswordLogin\n\n** amalgamated original file \"/srcdir/open62541/plugins/include/open62541/plugin/accesscontrol_default.h\" ***\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UtcTime","page":"Home","title":"open62541.UA_UtcTime","text":"UtcTime ^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ValueSource","page":"Home","title":"open62541.UA_ValueSource","text":"UA_ValueSource\n\nVariableNode ––––––\n\nVariables store values in a :ref:datavalue together with metadata for introspection. Most notably, the attributes data type, value rank and array dimensions constrain the possible values the variable can take on.\n\nVariables come in two flavours: properties and datavariables. Properties are related to a parent with a hasProperty reference and may not have child nodes themselves. Datavariables may contain properties (hasProperty) and also datavariables (hasComponents).\n\nAll variables are instances of some :ref:variabletypenode in return constraining the possible data type, value rank and array dimensions attributes.\n\nData Type ~~~~~~~~~\n\nThe (scalar) data type of the variable is constrained to be of a specific type or one of its children in the type hierarchy. The data type is given as a NodeId pointing to a :ref:datatypenode in the type hierarchy. See the Section :ref:datatypenode for more details.\n\nIf the data type attribute points to UInt32, then the value attribute must be of that exact type since UInt32 does not have children in the type hierarchy. If the data type attribute points Number, then the type of the value attribute may still be UInt32, but also Float or Byte.\n\nConsistency between the data type attribute in the variable and its :ref:VariableTypeNode is ensured.\n\nValue Rank ~~~~~~~~~~\n\nThis attribute indicates whether the value attribute of the variable is an array and how many dimensions the array has. It may have the following values:\n\nn = 1: the value is an array with the specified number of dimensions - n = 0: the value is an array with one or more dimensions - n = -1: the value is a scalar - n = -2: the value can be a scalar or an array with any number of dimensions - n = -3: the value can be a scalar or a one dimensional array\n\nConsistency between the value rank attribute in the variable and its :ref:variabletypenode is ensured.\n\nArray Dimensions ~~~~~~~~~~~~~~~~\n\nIf the value rank permits the value to be a (multi-dimensional) array, the exact length in each dimensions can be further constrained with this attribute.\n\nFor positive lengths, the variable value is guaranteed to be of the same length in this dimension. - The dimension length zero is a wildcard and the actual value may have any length in this dimension.\n\nConsistency between the array dimensions attribute in the variable and its :ref:variabletypenode is ensured.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_VariableAttributes","page":"Home","title":"open62541.UA_VariableAttributes","text":"UA_VariableAttributes\n\nVariableAttributes ^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_VariableTypeAttributes","page":"Home","title":"open62541.UA_VariableTypeAttributes","text":"UA_VariableTypeAttributes\n\nVariableTypeAttributes ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_VariableTypeNode","page":"Home","title":"open62541.UA_VariableTypeNode","text":"UA_VariableTypeNode\n\n.. _variabletypenode:\n\nVariableTypeNode ––––––––\n\nVariableTypes are used to provide type definitions for variables. VariableTypes constrain the data type, value rank and array dimensions attributes of variable instances. Furthermore, instantiating from a specific variable type may provide semantic information. For example, an instance from MotorTemperatureVariableType is more meaningful than a float variable instantiated from BaseDataVariable.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ViewAttributes","page":"Home","title":"open62541.UA_ViewAttributes","text":"UA_ViewAttributes\n\nViewAttributes ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ViewDescription","page":"Home","title":"open62541.UA_ViewDescription","text":"UA_ViewDescription\n\nViewDescription ^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ViewNode","page":"Home","title":"open62541.UA_ViewNode","text":"UA_ViewNode\n\nViewNode ––––\n\nEach View defines a subset of the Nodes in the AddressSpace. Views can be used when browsing an information model to focus on a subset of nodes and references only. ViewNodes can be created and be interacted with. But their use in the :ref:Browse<view-services> service is currently unsupported in open62541.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_WriteRequest","page":"Home","title":"open62541.UA_WriteRequest","text":"UA_WriteRequest\n\nWriteRequest ^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_WriteResponse","page":"Home","title":"open62541.UA_WriteResponse","text":"UA_WriteResponse\n\nWriteResponse ^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_WriteValue","page":"Home","title":"open62541.UA_WriteValue","text":"UA_WriteValue\n\nWriteValue ^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_X509IdentityToken","page":"Home","title":"open62541.UA_X509IdentityToken","text":"UA_X509IdentityToken\n\nX509IdentityToken ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_XVType","page":"Home","title":"open62541.UA_XVType","text":"UA_XVType\n\nXVType ^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_XmlElement","page":"Home","title":"open62541.UA_XmlElement","text":"XmlElement ^^^^^^^^^^ An XML element.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ACCESSLEVEL-Tuple{}","page":"Home","title":"open62541.UA_ACCESSLEVEL","text":"UA_ACCESSLEVEL(; read = false, write = false, historyread = false, \n        historywrite = false, semanticchange = false, statuswrite = false, \n        timestampwrite = false)::UInt8\n\ncalculates a UInt8 number expressing how the value of a variable can be accessed. Default is to disallow all operations. The meaning of the keywords is explained here: https://reference.opcfoundation.org/Core/Part3/v105/docs/8.57\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ActivateSessionRequest_clear-Tuple{Ptr{UA_ActivateSessionRequest}}","page":"Home","title":"open62541.UA_ActivateSessionRequest_clear","text":"UA_ActivateSessionRequest_clear\"(x::Ptr{UA_ActivateSessionRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_ActivateSessionRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ActivateSessionRequest_copy-Tuple{UA_ActivateSessionRequest, Ptr{UA_ActivateSessionRequest}}","page":"Home","title":"open62541.UA_ActivateSessionRequest_copy","text":"UA_ActivateSessionRequest_copy\"(src::Ptr{UA_ActivateSessionRequest}, dst::Ptr{UA_ActivateSessionRequest})::UA_STATUSCODE\nUA_ActivateSessionRequest_copy\"(src::UA_ActivateSessionRequest, dst::Ptr{UA_ActivateSessionRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ActivateSessionRequest_delete-Tuple{Ptr{UA_ActivateSessionRequest}}","page":"Home","title":"open62541.UA_ActivateSessionRequest_delete","text":"UA_ActivateSessionRequest_delete(x::Ptr{UA_ActivateSessionRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ActivateSessionRequest_deleteMembers-Tuple{Ptr{UA_ActivateSessionRequest}}","page":"Home","title":"open62541.UA_ActivateSessionRequest_deleteMembers","text":"UA_ActivateSessionRequest_deleteMembers(x::Ptr{UA_ActivateSessionRequest})\n\n(deprecated, use UA_ActivateSessionRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ActivateSessionRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ActivateSessionRequest_init-Tuple{Ptr{UA_ActivateSessionRequest}}","page":"Home","title":"open62541.UA_ActivateSessionRequest_init","text":"UA_ActivateSessionRequest_init\"(x::Ptr{UA_ActivateSessionRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ActivateSessionRequest_new-Tuple{}","page":"Home","title":"open62541.UA_ActivateSessionRequest_new","text":"UA_ActivateSessionRequest_new\"()::Ptr{UA_ActivateSessionRequest}\n\ncreates and initializes a UA_ActivateSessionRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ActivateSessionRequest_delete(x::Ptr{UA_ActivateSessionRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ActivateSessionResponse_clear-Tuple{Ptr{UA_ActivateSessionResponse}}","page":"Home","title":"open62541.UA_ActivateSessionResponse_clear","text":"UA_ActivateSessionResponse_clear\"(x::Ptr{UA_ActivateSessionResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_ActivateSessionResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ActivateSessionResponse_copy-Tuple{UA_ActivateSessionResponse, Ptr{UA_ActivateSessionResponse}}","page":"Home","title":"open62541.UA_ActivateSessionResponse_copy","text":"UA_ActivateSessionResponse_copy\"(src::Ptr{UA_ActivateSessionResponse}, dst::Ptr{UA_ActivateSessionResponse})::UA_STATUSCODE\nUA_ActivateSessionResponse_copy\"(src::UA_ActivateSessionResponse, dst::Ptr{UA_ActivateSessionResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ActivateSessionResponse_delete-Tuple{Ptr{UA_ActivateSessionResponse}}","page":"Home","title":"open62541.UA_ActivateSessionResponse_delete","text":"UA_ActivateSessionResponse_delete(x::Ptr{UA_ActivateSessionResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ActivateSessionResponse_deleteMembers-Tuple{Ptr{UA_ActivateSessionResponse}}","page":"Home","title":"open62541.UA_ActivateSessionResponse_deleteMembers","text":"UA_ActivateSessionResponse_deleteMembers(x::Ptr{UA_ActivateSessionResponse})\n\n(deprecated, use UA_ActivateSessionResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ActivateSessionResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ActivateSessionResponse_init-Tuple{Ptr{UA_ActivateSessionResponse}}","page":"Home","title":"open62541.UA_ActivateSessionResponse_init","text":"UA_ActivateSessionResponse_init\"(x::Ptr{UA_ActivateSessionResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ActivateSessionResponse_new-Tuple{}","page":"Home","title":"open62541.UA_ActivateSessionResponse_new","text":"UA_ActivateSessionResponse_new\"()::Ptr{UA_ActivateSessionResponse}\n\ncreates and initializes a UA_ActivateSessionResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ActivateSessionResponse_delete(x::Ptr{UA_ActivateSessionResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesItem_clear-Tuple{Ptr{UA_AddNodesItem}}","page":"Home","title":"open62541.UA_AddNodesItem_clear","text":"UA_AddNodesItem_clear\"(x::Ptr{UA_AddNodesItem})\n\ndeletes the dynamically allocated content of the object x and calls UA_AddNodesItem_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesItem_copy-Tuple{UA_AddNodesItem, Ptr{UA_AddNodesItem}}","page":"Home","title":"open62541.UA_AddNodesItem_copy","text":"UA_AddNodesItem_copy\"(src::Ptr{UA_AddNodesItem}, dst::Ptr{UA_AddNodesItem})::UA_STATUSCODE\nUA_AddNodesItem_copy\"(src::UA_AddNodesItem, dst::Ptr{UA_AddNodesItem})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesItem_delete-Tuple{Ptr{UA_AddNodesItem}}","page":"Home","title":"open62541.UA_AddNodesItem_delete","text":"UA_AddNodesItem_delete(x::Ptr{UA_AddNodesItem})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesItem_deleteMembers-Tuple{Ptr{UA_AddNodesItem}}","page":"Home","title":"open62541.UA_AddNodesItem_deleteMembers","text":"UA_AddNodesItem_deleteMembers(x::Ptr{UA_AddNodesItem})\n\n(deprecated, use UA_AddNodesItem_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_AddNodesItem_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesItem_init-Tuple{Ptr{UA_AddNodesItem}}","page":"Home","title":"open62541.UA_AddNodesItem_init","text":"UA_AddNodesItem_init\"(x::Ptr{UA_AddNodesItem})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesItem_new-Tuple{}","page":"Home","title":"open62541.UA_AddNodesItem_new","text":"UA_AddNodesItem_new\"()::Ptr{UA_AddNodesItem}\n\ncreates and initializes a UA_AddNodesItem object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_AddNodesItem_delete(x::Ptr{UA_AddNodesItem})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesRequest_clear-Tuple{Ptr{UA_AddNodesRequest}}","page":"Home","title":"open62541.UA_AddNodesRequest_clear","text":"UA_AddNodesRequest_clear\"(x::Ptr{UA_AddNodesRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_AddNodesRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesRequest_copy-Tuple{UA_AddNodesRequest, Ptr{UA_AddNodesRequest}}","page":"Home","title":"open62541.UA_AddNodesRequest_copy","text":"UA_AddNodesRequest_copy\"(src::Ptr{UA_AddNodesRequest}, dst::Ptr{UA_AddNodesRequest})::UA_STATUSCODE\nUA_AddNodesRequest_copy\"(src::UA_AddNodesRequest, dst::Ptr{UA_AddNodesRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesRequest_delete-Tuple{Ptr{UA_AddNodesRequest}}","page":"Home","title":"open62541.UA_AddNodesRequest_delete","text":"UA_AddNodesRequest_delete(x::Ptr{UA_AddNodesRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesRequest_deleteMembers-Tuple{Ptr{UA_AddNodesRequest}}","page":"Home","title":"open62541.UA_AddNodesRequest_deleteMembers","text":"UA_AddNodesRequest_deleteMembers(x::Ptr{UA_AddNodesRequest})\n\n(deprecated, use UA_AddNodesRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_AddNodesRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesRequest_init-Tuple{Ptr{UA_AddNodesRequest}}","page":"Home","title":"open62541.UA_AddNodesRequest_init","text":"UA_AddNodesRequest_init\"(x::Ptr{UA_AddNodesRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesRequest_new-Tuple{}","page":"Home","title":"open62541.UA_AddNodesRequest_new","text":"UA_AddNodesRequest_new\"()::Ptr{UA_AddNodesRequest}\n\ncreates and initializes a UA_AddNodesRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_AddNodesRequest_delete(x::Ptr{UA_AddNodesRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesResponse_clear-Tuple{Ptr{UA_AddNodesResponse}}","page":"Home","title":"open62541.UA_AddNodesResponse_clear","text":"UA_AddNodesResponse_clear\"(x::Ptr{UA_AddNodesResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_AddNodesResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesResponse_copy-Tuple{UA_AddNodesResponse, Ptr{UA_AddNodesResponse}}","page":"Home","title":"open62541.UA_AddNodesResponse_copy","text":"UA_AddNodesResponse_copy\"(src::Ptr{UA_AddNodesResponse}, dst::Ptr{UA_AddNodesResponse})::UA_STATUSCODE\nUA_AddNodesResponse_copy\"(src::UA_AddNodesResponse, dst::Ptr{UA_AddNodesResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesResponse_delete-Tuple{Ptr{UA_AddNodesResponse}}","page":"Home","title":"open62541.UA_AddNodesResponse_delete","text":"UA_AddNodesResponse_delete(x::Ptr{UA_AddNodesResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesResponse_deleteMembers-Tuple{Ptr{UA_AddNodesResponse}}","page":"Home","title":"open62541.UA_AddNodesResponse_deleteMembers","text":"UA_AddNodesResponse_deleteMembers(x::Ptr{UA_AddNodesResponse})\n\n(deprecated, use UA_AddNodesResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_AddNodesResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesResponse_init-Tuple{Ptr{UA_AddNodesResponse}}","page":"Home","title":"open62541.UA_AddNodesResponse_init","text":"UA_AddNodesResponse_init\"(x::Ptr{UA_AddNodesResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesResponse_new-Tuple{}","page":"Home","title":"open62541.UA_AddNodesResponse_new","text":"UA_AddNodesResponse_new\"()::Ptr{UA_AddNodesResponse}\n\ncreates and initializes a UA_AddNodesResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_AddNodesResponse_delete(x::Ptr{UA_AddNodesResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesResult_clear-Tuple{Ptr{UA_AddNodesResult}}","page":"Home","title":"open62541.UA_AddNodesResult_clear","text":"UA_AddNodesResult_clear\"(x::Ptr{UA_AddNodesResult})\n\ndeletes the dynamically allocated content of the object x and calls UA_AddNodesResult_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesResult_copy-Tuple{UA_AddNodesResult, Ptr{UA_AddNodesResult}}","page":"Home","title":"open62541.UA_AddNodesResult_copy","text":"UA_AddNodesResult_copy\"(src::Ptr{UA_AddNodesResult}, dst::Ptr{UA_AddNodesResult})::UA_STATUSCODE\nUA_AddNodesResult_copy\"(src::UA_AddNodesResult, dst::Ptr{UA_AddNodesResult})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesResult_delete-Tuple{Ptr{UA_AddNodesResult}}","page":"Home","title":"open62541.UA_AddNodesResult_delete","text":"UA_AddNodesResult_delete(x::Ptr{UA_AddNodesResult})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesResult_deleteMembers-Tuple{Ptr{UA_AddNodesResult}}","page":"Home","title":"open62541.UA_AddNodesResult_deleteMembers","text":"UA_AddNodesResult_deleteMembers(x::Ptr{UA_AddNodesResult})\n\n(deprecated, use UA_AddNodesResult_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_AddNodesResult_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesResult_init-Tuple{Ptr{UA_AddNodesResult}}","page":"Home","title":"open62541.UA_AddNodesResult_init","text":"UA_AddNodesResult_init\"(x::Ptr{UA_AddNodesResult})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddNodesResult_new-Tuple{}","page":"Home","title":"open62541.UA_AddNodesResult_new","text":"UA_AddNodesResult_new\"()::Ptr{UA_AddNodesResult}\n\ncreates and initializes a UA_AddNodesResult object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_AddNodesResult_delete(x::Ptr{UA_AddNodesResult})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesItem_clear-Tuple{Ptr{UA_AddReferencesItem}}","page":"Home","title":"open62541.UA_AddReferencesItem_clear","text":"UA_AddReferencesItem_clear\"(x::Ptr{UA_AddReferencesItem})\n\ndeletes the dynamically allocated content of the object x and calls UA_AddReferencesItem_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesItem_copy-Tuple{UA_AddReferencesItem, Ptr{UA_AddReferencesItem}}","page":"Home","title":"open62541.UA_AddReferencesItem_copy","text":"UA_AddReferencesItem_copy\"(src::Ptr{UA_AddReferencesItem}, dst::Ptr{UA_AddReferencesItem})::UA_STATUSCODE\nUA_AddReferencesItem_copy\"(src::UA_AddReferencesItem, dst::Ptr{UA_AddReferencesItem})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesItem_delete-Tuple{Ptr{UA_AddReferencesItem}}","page":"Home","title":"open62541.UA_AddReferencesItem_delete","text":"UA_AddReferencesItem_delete(x::Ptr{UA_AddReferencesItem})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesItem_deleteMembers-Tuple{Ptr{UA_AddReferencesItem}}","page":"Home","title":"open62541.UA_AddReferencesItem_deleteMembers","text":"UA_AddReferencesItem_deleteMembers(x::Ptr{UA_AddReferencesItem})\n\n(deprecated, use UA_AddReferencesItem_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_AddReferencesItem_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesItem_init-Tuple{Ptr{UA_AddReferencesItem}}","page":"Home","title":"open62541.UA_AddReferencesItem_init","text":"UA_AddReferencesItem_init\"(x::Ptr{UA_AddReferencesItem})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesItem_new-Tuple{}","page":"Home","title":"open62541.UA_AddReferencesItem_new","text":"UA_AddReferencesItem_new\"()::Ptr{UA_AddReferencesItem}\n\ncreates and initializes a UA_AddReferencesItem object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_AddReferencesItem_delete(x::Ptr{UA_AddReferencesItem})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesRequest_clear-Tuple{Ptr{UA_AddReferencesRequest}}","page":"Home","title":"open62541.UA_AddReferencesRequest_clear","text":"UA_AddReferencesRequest_clear\"(x::Ptr{UA_AddReferencesRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_AddReferencesRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesRequest_copy-Tuple{UA_AddReferencesRequest, Ptr{UA_AddReferencesRequest}}","page":"Home","title":"open62541.UA_AddReferencesRequest_copy","text":"UA_AddReferencesRequest_copy\"(src::Ptr{UA_AddReferencesRequest}, dst::Ptr{UA_AddReferencesRequest})::UA_STATUSCODE\nUA_AddReferencesRequest_copy\"(src::UA_AddReferencesRequest, dst::Ptr{UA_AddReferencesRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesRequest_delete-Tuple{Ptr{UA_AddReferencesRequest}}","page":"Home","title":"open62541.UA_AddReferencesRequest_delete","text":"UA_AddReferencesRequest_delete(x::Ptr{UA_AddReferencesRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesRequest_deleteMembers-Tuple{Ptr{UA_AddReferencesRequest}}","page":"Home","title":"open62541.UA_AddReferencesRequest_deleteMembers","text":"UA_AddReferencesRequest_deleteMembers(x::Ptr{UA_AddReferencesRequest})\n\n(deprecated, use UA_AddReferencesRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_AddReferencesRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesRequest_init-Tuple{Ptr{UA_AddReferencesRequest}}","page":"Home","title":"open62541.UA_AddReferencesRequest_init","text":"UA_AddReferencesRequest_init\"(x::Ptr{UA_AddReferencesRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesRequest_new-Tuple{}","page":"Home","title":"open62541.UA_AddReferencesRequest_new","text":"UA_AddReferencesRequest_new\"()::Ptr{UA_AddReferencesRequest}\n\ncreates and initializes a UA_AddReferencesRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_AddReferencesRequest_delete(x::Ptr{UA_AddReferencesRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesResponse_clear-Tuple{Ptr{UA_AddReferencesResponse}}","page":"Home","title":"open62541.UA_AddReferencesResponse_clear","text":"UA_AddReferencesResponse_clear\"(x::Ptr{UA_AddReferencesResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_AddReferencesResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesResponse_copy-Tuple{UA_AddReferencesResponse, Ptr{UA_AddReferencesResponse}}","page":"Home","title":"open62541.UA_AddReferencesResponse_copy","text":"UA_AddReferencesResponse_copy\"(src::Ptr{UA_AddReferencesResponse}, dst::Ptr{UA_AddReferencesResponse})::UA_STATUSCODE\nUA_AddReferencesResponse_copy\"(src::UA_AddReferencesResponse, dst::Ptr{UA_AddReferencesResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesResponse_delete-Tuple{Ptr{UA_AddReferencesResponse}}","page":"Home","title":"open62541.UA_AddReferencesResponse_delete","text":"UA_AddReferencesResponse_delete(x::Ptr{UA_AddReferencesResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesResponse_deleteMembers-Tuple{Ptr{UA_AddReferencesResponse}}","page":"Home","title":"open62541.UA_AddReferencesResponse_deleteMembers","text":"UA_AddReferencesResponse_deleteMembers(x::Ptr{UA_AddReferencesResponse})\n\n(deprecated, use UA_AddReferencesResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_AddReferencesResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesResponse_init-Tuple{Ptr{UA_AddReferencesResponse}}","page":"Home","title":"open62541.UA_AddReferencesResponse_init","text":"UA_AddReferencesResponse_init\"(x::Ptr{UA_AddReferencesResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AddReferencesResponse_new-Tuple{}","page":"Home","title":"open62541.UA_AddReferencesResponse_new","text":"UA_AddReferencesResponse_new\"()::Ptr{UA_AddReferencesResponse}\n\ncreates and initializes a UA_AddReferencesResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_AddReferencesResponse_delete(x::Ptr{UA_AddReferencesResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AggregateConfiguration_clear-Tuple{Ptr{UA_AggregateConfiguration}}","page":"Home","title":"open62541.UA_AggregateConfiguration_clear","text":"UA_AggregateConfiguration_clear\"(x::Ptr{UA_AggregateConfiguration})\n\ndeletes the dynamically allocated content of the object x and calls UA_AggregateConfiguration_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AggregateConfiguration_copy-Tuple{UA_AggregateConfiguration, Ptr{UA_AggregateConfiguration}}","page":"Home","title":"open62541.UA_AggregateConfiguration_copy","text":"UA_AggregateConfiguration_copy\"(src::Ptr{UA_AggregateConfiguration}, dst::Ptr{UA_AggregateConfiguration})::UA_STATUSCODE\nUA_AggregateConfiguration_copy\"(src::UA_AggregateConfiguration, dst::Ptr{UA_AggregateConfiguration})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AggregateConfiguration_delete-Tuple{Ptr{UA_AggregateConfiguration}}","page":"Home","title":"open62541.UA_AggregateConfiguration_delete","text":"UA_AggregateConfiguration_delete(x::Ptr{UA_AggregateConfiguration})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AggregateConfiguration_deleteMembers-Tuple{Ptr{UA_AggregateConfiguration}}","page":"Home","title":"open62541.UA_AggregateConfiguration_deleteMembers","text":"UA_AggregateConfiguration_deleteMembers(x::Ptr{UA_AggregateConfiguration})\n\n(deprecated, use UA_AggregateConfiguration_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_AggregateConfiguration_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AggregateConfiguration_init-Tuple{Ptr{UA_AggregateConfiguration}}","page":"Home","title":"open62541.UA_AggregateConfiguration_init","text":"UA_AggregateConfiguration_init\"(x::Ptr{UA_AggregateConfiguration})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AggregateConfiguration_new-Tuple{}","page":"Home","title":"open62541.UA_AggregateConfiguration_new","text":"UA_AggregateConfiguration_new\"()::Ptr{UA_AggregateConfiguration}\n\ncreates and initializes a UA_AggregateConfiguration object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_AggregateConfiguration_delete(x::Ptr{UA_AggregateConfiguration})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AggregateFilter_clear-Tuple{Ptr{UA_AggregateFilter}}","page":"Home","title":"open62541.UA_AggregateFilter_clear","text":"UA_AggregateFilter_clear\"(x::Ptr{UA_AggregateFilter})\n\ndeletes the dynamically allocated content of the object x and calls UA_AggregateFilter_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AggregateFilter_copy-Tuple{UA_AggregateFilter, Ptr{UA_AggregateFilter}}","page":"Home","title":"open62541.UA_AggregateFilter_copy","text":"UA_AggregateFilter_copy\"(src::Ptr{UA_AggregateFilter}, dst::Ptr{UA_AggregateFilter})::UA_STATUSCODE\nUA_AggregateFilter_copy\"(src::UA_AggregateFilter, dst::Ptr{UA_AggregateFilter})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AggregateFilter_delete-Tuple{Ptr{UA_AggregateFilter}}","page":"Home","title":"open62541.UA_AggregateFilter_delete","text":"UA_AggregateFilter_delete(x::Ptr{UA_AggregateFilter})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AggregateFilter_deleteMembers-Tuple{Ptr{UA_AggregateFilter}}","page":"Home","title":"open62541.UA_AggregateFilter_deleteMembers","text":"UA_AggregateFilter_deleteMembers(x::Ptr{UA_AggregateFilter})\n\n(deprecated, use UA_AggregateFilter_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_AggregateFilter_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AggregateFilter_init-Tuple{Ptr{UA_AggregateFilter}}","page":"Home","title":"open62541.UA_AggregateFilter_init","text":"UA_AggregateFilter_init\"(x::Ptr{UA_AggregateFilter})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AggregateFilter_new-Tuple{}","page":"Home","title":"open62541.UA_AggregateFilter_new","text":"UA_AggregateFilter_new\"()::Ptr{UA_AggregateFilter}\n\ncreates and initializes a UA_AggregateFilter object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_AggregateFilter_delete(x::Ptr{UA_AggregateFilter})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AnonymousIdentityToken_clear-Tuple{Ptr{UA_AnonymousIdentityToken}}","page":"Home","title":"open62541.UA_AnonymousIdentityToken_clear","text":"UA_AnonymousIdentityToken_clear\"(x::Ptr{UA_AnonymousIdentityToken})\n\ndeletes the dynamically allocated content of the object x and calls UA_AnonymousIdentityToken_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AnonymousIdentityToken_copy-Tuple{UA_AnonymousIdentityToken, Ptr{UA_AnonymousIdentityToken}}","page":"Home","title":"open62541.UA_AnonymousIdentityToken_copy","text":"UA_AnonymousIdentityToken_copy\"(src::Ptr{UA_AnonymousIdentityToken}, dst::Ptr{UA_AnonymousIdentityToken})::UA_STATUSCODE\nUA_AnonymousIdentityToken_copy\"(src::UA_AnonymousIdentityToken, dst::Ptr{UA_AnonymousIdentityToken})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AnonymousIdentityToken_delete-Tuple{Ptr{UA_AnonymousIdentityToken}}","page":"Home","title":"open62541.UA_AnonymousIdentityToken_delete","text":"UA_AnonymousIdentityToken_delete(x::Ptr{UA_AnonymousIdentityToken})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AnonymousIdentityToken_deleteMembers-Tuple{Ptr{UA_AnonymousIdentityToken}}","page":"Home","title":"open62541.UA_AnonymousIdentityToken_deleteMembers","text":"UA_AnonymousIdentityToken_deleteMembers(x::Ptr{UA_AnonymousIdentityToken})\n\n(deprecated, use UA_AnonymousIdentityToken_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_AnonymousIdentityToken_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AnonymousIdentityToken_init-Tuple{Ptr{UA_AnonymousIdentityToken}}","page":"Home","title":"open62541.UA_AnonymousIdentityToken_init","text":"UA_AnonymousIdentityToken_init\"(x::Ptr{UA_AnonymousIdentityToken})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AnonymousIdentityToken_new-Tuple{}","page":"Home","title":"open62541.UA_AnonymousIdentityToken_new","text":"UA_AnonymousIdentityToken_new\"()::Ptr{UA_AnonymousIdentityToken}\n\ncreates and initializes a UA_AnonymousIdentityToken object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_AnonymousIdentityToken_delete(x::Ptr{UA_AnonymousIdentityToken})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ApplicationDescription_clear-Tuple{Ptr{UA_ApplicationDescription}}","page":"Home","title":"open62541.UA_ApplicationDescription_clear","text":"UA_ApplicationDescription_clear\"(x::Ptr{UA_ApplicationDescription})\n\ndeletes the dynamically allocated content of the object x and calls UA_ApplicationDescription_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ApplicationDescription_copy-Tuple{UA_ApplicationDescription, Ptr{UA_ApplicationDescription}}","page":"Home","title":"open62541.UA_ApplicationDescription_copy","text":"UA_ApplicationDescription_copy\"(src::Ptr{UA_ApplicationDescription}, dst::Ptr{UA_ApplicationDescription})::UA_STATUSCODE\nUA_ApplicationDescription_copy\"(src::UA_ApplicationDescription, dst::Ptr{UA_ApplicationDescription})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ApplicationDescription_delete-Tuple{Ptr{UA_ApplicationDescription}}","page":"Home","title":"open62541.UA_ApplicationDescription_delete","text":"UA_ApplicationDescription_delete(x::Ptr{UA_ApplicationDescription})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ApplicationDescription_deleteMembers-Tuple{Ptr{UA_ApplicationDescription}}","page":"Home","title":"open62541.UA_ApplicationDescription_deleteMembers","text":"UA_ApplicationDescription_deleteMembers(x::Ptr{UA_ApplicationDescription})\n\n(deprecated, use UA_ApplicationDescription_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ApplicationDescription_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ApplicationDescription_init-Tuple{Ptr{UA_ApplicationDescription}}","page":"Home","title":"open62541.UA_ApplicationDescription_init","text":"UA_ApplicationDescription_init\"(x::Ptr{UA_ApplicationDescription})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ApplicationDescription_new-Tuple{}","page":"Home","title":"open62541.UA_ApplicationDescription_new","text":"UA_ApplicationDescription_new\"()::Ptr{UA_ApplicationDescription}\n\ncreates and initializes a UA_ApplicationDescription object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ApplicationDescription_delete(x::Ptr{UA_ApplicationDescription})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ApplicationType_clear-Tuple{Ptr{UA_ApplicationType}}","page":"Home","title":"open62541.UA_ApplicationType_clear","text":"UA_ApplicationType_clear\"(x::Ptr{UA_ApplicationType})\n\ndeletes the dynamically allocated content of the object x and calls UA_ApplicationType_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ApplicationType_copy-Tuple{UA_ApplicationType, Ptr{UA_ApplicationType}}","page":"Home","title":"open62541.UA_ApplicationType_copy","text":"UA_ApplicationType_copy\"(src::Ptr{UA_ApplicationType}, dst::Ptr{UA_ApplicationType})::UA_STATUSCODE\nUA_ApplicationType_copy\"(src::UA_ApplicationType, dst::Ptr{UA_ApplicationType})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ApplicationType_delete-Tuple{Ptr{UA_ApplicationType}}","page":"Home","title":"open62541.UA_ApplicationType_delete","text":"UA_ApplicationType_delete(x::Ptr{UA_ApplicationType})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ApplicationType_deleteMembers-Tuple{Ptr{UA_ApplicationType}}","page":"Home","title":"open62541.UA_ApplicationType_deleteMembers","text":"UA_ApplicationType_deleteMembers(x::Ptr{UA_ApplicationType})\n\n(deprecated, use UA_ApplicationType_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ApplicationType_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ApplicationType_init-Tuple{Ptr{UA_ApplicationType}}","page":"Home","title":"open62541.UA_ApplicationType_init","text":"UA_ApplicationType_init\"(x::Ptr{UA_ApplicationType})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ApplicationType_new-Tuple{}","page":"Home","title":"open62541.UA_ApplicationType_new","text":"UA_ApplicationType_new\"()::Ptr{UA_ApplicationType}\n\ncreates and initializes a UA_ApplicationType object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ApplicationType_delete(x::Ptr{UA_ApplicationType})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Argument_clear-Tuple{Ptr{UA_Argument}}","page":"Home","title":"open62541.UA_Argument_clear","text":"UA_Argument_clear\"(x::Ptr{UA_Argument})\n\ndeletes the dynamically allocated content of the object x and calls UA_Argument_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Argument_copy-Tuple{UA_Argument, Ptr{UA_Argument}}","page":"Home","title":"open62541.UA_Argument_copy","text":"UA_Argument_copy\"(src::Ptr{UA_Argument}, dst::Ptr{UA_Argument})::UA_STATUSCODE\nUA_Argument_copy\"(src::UA_Argument, dst::Ptr{UA_Argument})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Argument_delete-Tuple{Ptr{UA_Argument}}","page":"Home","title":"open62541.UA_Argument_delete","text":"UA_Argument_delete(x::Ptr{UA_Argument})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Argument_deleteMembers-Tuple{Ptr{UA_Argument}}","page":"Home","title":"open62541.UA_Argument_deleteMembers","text":"UA_Argument_deleteMembers(x::Ptr{UA_Argument})\n\n(deprecated, use UA_Argument_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_Argument_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Argument_init-Tuple{Ptr{UA_Argument}}","page":"Home","title":"open62541.UA_Argument_init","text":"UA_Argument_init\"(x::Ptr{UA_Argument})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Argument_new-Tuple{}","page":"Home","title":"open62541.UA_Argument_new","text":"UA_Argument_new\"()::Ptr{UA_Argument}\n\ncreates and initializes a UA_Argument object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_Argument_delete(x::Ptr{UA_Argument})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AttributeOperand_clear-Tuple{Ptr{UA_AttributeOperand}}","page":"Home","title":"open62541.UA_AttributeOperand_clear","text":"UA_AttributeOperand_clear\"(x::Ptr{UA_AttributeOperand})\n\ndeletes the dynamically allocated content of the object x and calls UA_AttributeOperand_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AttributeOperand_copy-Tuple{UA_AttributeOperand, Ptr{UA_AttributeOperand}}","page":"Home","title":"open62541.UA_AttributeOperand_copy","text":"UA_AttributeOperand_copy\"(src::Ptr{UA_AttributeOperand}, dst::Ptr{UA_AttributeOperand})::UA_STATUSCODE\nUA_AttributeOperand_copy\"(src::UA_AttributeOperand, dst::Ptr{UA_AttributeOperand})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AttributeOperand_delete-Tuple{Ptr{UA_AttributeOperand}}","page":"Home","title":"open62541.UA_AttributeOperand_delete","text":"UA_AttributeOperand_delete(x::Ptr{UA_AttributeOperand})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AttributeOperand_deleteMembers-Tuple{Ptr{UA_AttributeOperand}}","page":"Home","title":"open62541.UA_AttributeOperand_deleteMembers","text":"UA_AttributeOperand_deleteMembers(x::Ptr{UA_AttributeOperand})\n\n(deprecated, use UA_AttributeOperand_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_AttributeOperand_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AttributeOperand_init-Tuple{Ptr{UA_AttributeOperand}}","page":"Home","title":"open62541.UA_AttributeOperand_init","text":"UA_AttributeOperand_init\"(x::Ptr{UA_AttributeOperand})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AttributeOperand_new-Tuple{}","page":"Home","title":"open62541.UA_AttributeOperand_new","text":"UA_AttributeOperand_new\"()::Ptr{UA_AttributeOperand}\n\ncreates and initializes a UA_AttributeOperand object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_AttributeOperand_delete(x::Ptr{UA_AttributeOperand})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AxisInformation_clear-Tuple{Ptr{UA_AxisInformation}}","page":"Home","title":"open62541.UA_AxisInformation_clear","text":"UA_AxisInformation_clear\"(x::Ptr{UA_AxisInformation})\n\ndeletes the dynamically allocated content of the object x and calls UA_AxisInformation_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AxisInformation_copy-Tuple{UA_AxisInformation, Ptr{UA_AxisInformation}}","page":"Home","title":"open62541.UA_AxisInformation_copy","text":"UA_AxisInformation_copy\"(src::Ptr{UA_AxisInformation}, dst::Ptr{UA_AxisInformation})::UA_STATUSCODE\nUA_AxisInformation_copy\"(src::UA_AxisInformation, dst::Ptr{UA_AxisInformation})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AxisInformation_delete-Tuple{Ptr{UA_AxisInformation}}","page":"Home","title":"open62541.UA_AxisInformation_delete","text":"UA_AxisInformation_delete(x::Ptr{UA_AxisInformation})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AxisInformation_deleteMembers-Tuple{Ptr{UA_AxisInformation}}","page":"Home","title":"open62541.UA_AxisInformation_deleteMembers","text":"UA_AxisInformation_deleteMembers(x::Ptr{UA_AxisInformation})\n\n(deprecated, use UA_AxisInformation_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_AxisInformation_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AxisInformation_init-Tuple{Ptr{UA_AxisInformation}}","page":"Home","title":"open62541.UA_AxisInformation_init","text":"UA_AxisInformation_init\"(x::Ptr{UA_AxisInformation})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AxisInformation_new-Tuple{}","page":"Home","title":"open62541.UA_AxisInformation_new","text":"UA_AxisInformation_new\"()::Ptr{UA_AxisInformation}\n\ncreates and initializes a UA_AxisInformation object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_AxisInformation_delete(x::Ptr{UA_AxisInformation})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AxisScaleEnumeration_clear-Tuple{Ptr{UA_AxisScaleEnumeration}}","page":"Home","title":"open62541.UA_AxisScaleEnumeration_clear","text":"UA_AxisScaleEnumeration_clear\"(x::Ptr{UA_AxisScaleEnumeration})\n\ndeletes the dynamically allocated content of the object x and calls UA_AxisScaleEnumeration_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AxisScaleEnumeration_copy-Tuple{UA_AxisScaleEnumeration, Ptr{UA_AxisScaleEnumeration}}","page":"Home","title":"open62541.UA_AxisScaleEnumeration_copy","text":"UA_AxisScaleEnumeration_copy\"(src::Ptr{UA_AxisScaleEnumeration}, dst::Ptr{UA_AxisScaleEnumeration})::UA_STATUSCODE\nUA_AxisScaleEnumeration_copy\"(src::UA_AxisScaleEnumeration, dst::Ptr{UA_AxisScaleEnumeration})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AxisScaleEnumeration_delete-Tuple{Ptr{UA_AxisScaleEnumeration}}","page":"Home","title":"open62541.UA_AxisScaleEnumeration_delete","text":"UA_AxisScaleEnumeration_delete(x::Ptr{UA_AxisScaleEnumeration})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AxisScaleEnumeration_deleteMembers-Tuple{Ptr{UA_AxisScaleEnumeration}}","page":"Home","title":"open62541.UA_AxisScaleEnumeration_deleteMembers","text":"UA_AxisScaleEnumeration_deleteMembers(x::Ptr{UA_AxisScaleEnumeration})\n\n(deprecated, use UA_AxisScaleEnumeration_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_AxisScaleEnumeration_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AxisScaleEnumeration_init-Tuple{Ptr{UA_AxisScaleEnumeration}}","page":"Home","title":"open62541.UA_AxisScaleEnumeration_init","text":"UA_AxisScaleEnumeration_init\"(x::Ptr{UA_AxisScaleEnumeration})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_AxisScaleEnumeration_new-Tuple{}","page":"Home","title":"open62541.UA_AxisScaleEnumeration_new","text":"UA_AxisScaleEnumeration_new\"()::Ptr{UA_AxisScaleEnumeration}\n\ncreates and initializes a UA_AxisScaleEnumeration object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_AxisScaleEnumeration_delete(x::Ptr{UA_AxisScaleEnumeration})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BYTESTRING-Tuple{AbstractString}","page":"Home","title":"open62541.UA_BYTESTRING","text":"UA_BYTESTRING(s::AbstractString)::Ptr{UA_String}\n\ncreates a UA_ByteString object from s. Memory is allocated by C and needs to be cleaned up with UAByteStringdelete(x::Ptr{UA_ByteString})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BYTESTRING_ALLOC-Tuple{AbstractString}","page":"Home","title":"open62541.UA_BYTESTRING_ALLOC","text":"UA_BYTESTRING_ALLOC(s::AbstractString)::Ptr{UA_String}\n\ncreates a UA_ByteString object from s. Memory is allocated by C and needs to be cleaned up with UAByteStringdelete(x::Ptr{UA_ByteString})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Boolean_clear-Tuple{Ptr{Bool}}","page":"Home","title":"open62541.UA_Boolean_clear","text":"Bool_clear\"(x::Ptr{Bool})\n\ndeletes the dynamically allocated content of the object x and calls Bool_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Boolean_copy-Tuple{Bool, Ptr{Bool}}","page":"Home","title":"open62541.UA_Boolean_copy","text":"Bool_copy\"(src::Ptr{Bool}, dst::Ptr{Bool})::UA_STATUSCODE\nBool_copy\"(src::Bool, dst::Ptr{Bool})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Boolean_delete-Tuple{Ptr{Bool}}","page":"Home","title":"open62541.UA_Boolean_delete","text":"Bool_delete(x::Ptr{Bool})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Boolean_deleteMembers-Tuple{Ptr{Bool}}","page":"Home","title":"open62541.UA_Boolean_deleteMembers","text":"Bool_deleteMembers(x::Ptr{Bool})\n\n(deprecated, use Bool_clear(x) instead) deletes the dynamically allocated content of the object x and calls Bool_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Boolean_init-Tuple{Ptr{Bool}}","page":"Home","title":"open62541.UA_Boolean_init","text":"Bool_init\"(x::Ptr{Bool})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Boolean_new-Tuple{}","page":"Home","title":"open62541.UA_Boolean_new","text":"Bool_new\"()::Ptr{Bool}\n\ncreates and initializes a Bool object whose memory is allocated by C. After use, it needs to be  cleaned up with Bool_delete(x::Ptr{Bool})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseDescription_clear-Tuple{Ptr{UA_BrowseDescription}}","page":"Home","title":"open62541.UA_BrowseDescription_clear","text":"UA_BrowseDescription_clear\"(x::Ptr{UA_BrowseDescription})\n\ndeletes the dynamically allocated content of the object x and calls UA_BrowseDescription_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseDescription_copy-Tuple{UA_BrowseDescription, Ptr{UA_BrowseDescription}}","page":"Home","title":"open62541.UA_BrowseDescription_copy","text":"UA_BrowseDescription_copy\"(src::Ptr{UA_BrowseDescription}, dst::Ptr{UA_BrowseDescription})::UA_STATUSCODE\nUA_BrowseDescription_copy\"(src::UA_BrowseDescription, dst::Ptr{UA_BrowseDescription})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseDescription_delete-Tuple{Ptr{UA_BrowseDescription}}","page":"Home","title":"open62541.UA_BrowseDescription_delete","text":"UA_BrowseDescription_delete(x::Ptr{UA_BrowseDescription})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseDescription_deleteMembers-Tuple{Ptr{UA_BrowseDescription}}","page":"Home","title":"open62541.UA_BrowseDescription_deleteMembers","text":"UA_BrowseDescription_deleteMembers(x::Ptr{UA_BrowseDescription})\n\n(deprecated, use UA_BrowseDescription_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_BrowseDescription_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseDescription_init-Tuple{Ptr{UA_BrowseDescription}}","page":"Home","title":"open62541.UA_BrowseDescription_init","text":"UA_BrowseDescription_init\"(x::Ptr{UA_BrowseDescription})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseDescription_new-Tuple{}","page":"Home","title":"open62541.UA_BrowseDescription_new","text":"UA_BrowseDescription_new\"()::Ptr{UA_BrowseDescription}\n\ncreates and initializes a UA_BrowseDescription object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_BrowseDescription_delete(x::Ptr{UA_BrowseDescription})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseDirection_clear-Tuple{Ptr{UA_BrowseDirection}}","page":"Home","title":"open62541.UA_BrowseDirection_clear","text":"UA_BrowseDirection_clear\"(x::Ptr{UA_BrowseDirection})\n\ndeletes the dynamically allocated content of the object x and calls UA_BrowseDirection_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseDirection_copy-Tuple{UA_BrowseDirection, Ptr{UA_BrowseDirection}}","page":"Home","title":"open62541.UA_BrowseDirection_copy","text":"UA_BrowseDirection_copy\"(src::Ptr{UA_BrowseDirection}, dst::Ptr{UA_BrowseDirection})::UA_STATUSCODE\nUA_BrowseDirection_copy\"(src::UA_BrowseDirection, dst::Ptr{UA_BrowseDirection})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseDirection_delete-Tuple{Ptr{UA_BrowseDirection}}","page":"Home","title":"open62541.UA_BrowseDirection_delete","text":"UA_BrowseDirection_delete(x::Ptr{UA_BrowseDirection})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseDirection_deleteMembers-Tuple{Ptr{UA_BrowseDirection}}","page":"Home","title":"open62541.UA_BrowseDirection_deleteMembers","text":"UA_BrowseDirection_deleteMembers(x::Ptr{UA_BrowseDirection})\n\n(deprecated, use UA_BrowseDirection_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_BrowseDirection_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseDirection_init-Tuple{Ptr{UA_BrowseDirection}}","page":"Home","title":"open62541.UA_BrowseDirection_init","text":"UA_BrowseDirection_init\"(x::Ptr{UA_BrowseDirection})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseDirection_new-Tuple{}","page":"Home","title":"open62541.UA_BrowseDirection_new","text":"UA_BrowseDirection_new\"()::Ptr{UA_BrowseDirection}\n\ncreates and initializes a UA_BrowseDirection object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_BrowseDirection_delete(x::Ptr{UA_BrowseDirection})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseNextRequest_clear-Tuple{Ptr{UA_BrowseNextRequest}}","page":"Home","title":"open62541.UA_BrowseNextRequest_clear","text":"UA_BrowseNextRequest_clear\"(x::Ptr{UA_BrowseNextRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_BrowseNextRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseNextRequest_copy-Tuple{UA_BrowseNextRequest, Ptr{UA_BrowseNextRequest}}","page":"Home","title":"open62541.UA_BrowseNextRequest_copy","text":"UA_BrowseNextRequest_copy\"(src::Ptr{UA_BrowseNextRequest}, dst::Ptr{UA_BrowseNextRequest})::UA_STATUSCODE\nUA_BrowseNextRequest_copy\"(src::UA_BrowseNextRequest, dst::Ptr{UA_BrowseNextRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseNextRequest_delete-Tuple{Ptr{UA_BrowseNextRequest}}","page":"Home","title":"open62541.UA_BrowseNextRequest_delete","text":"UA_BrowseNextRequest_delete(x::Ptr{UA_BrowseNextRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseNextRequest_deleteMembers-Tuple{Ptr{UA_BrowseNextRequest}}","page":"Home","title":"open62541.UA_BrowseNextRequest_deleteMembers","text":"UA_BrowseNextRequest_deleteMembers(x::Ptr{UA_BrowseNextRequest})\n\n(deprecated, use UA_BrowseNextRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_BrowseNextRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseNextRequest_init-Tuple{Ptr{UA_BrowseNextRequest}}","page":"Home","title":"open62541.UA_BrowseNextRequest_init","text":"UA_BrowseNextRequest_init\"(x::Ptr{UA_BrowseNextRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseNextRequest_new-Tuple{}","page":"Home","title":"open62541.UA_BrowseNextRequest_new","text":"UA_BrowseNextRequest_new\"()::Ptr{UA_BrowseNextRequest}\n\ncreates and initializes a UA_BrowseNextRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_BrowseNextRequest_delete(x::Ptr{UA_BrowseNextRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseNextResponse_clear-Tuple{Ptr{UA_BrowseNextResponse}}","page":"Home","title":"open62541.UA_BrowseNextResponse_clear","text":"UA_BrowseNextResponse_clear\"(x::Ptr{UA_BrowseNextResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_BrowseNextResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseNextResponse_copy-Tuple{UA_BrowseNextResponse, Ptr{UA_BrowseNextResponse}}","page":"Home","title":"open62541.UA_BrowseNextResponse_copy","text":"UA_BrowseNextResponse_copy\"(src::Ptr{UA_BrowseNextResponse}, dst::Ptr{UA_BrowseNextResponse})::UA_STATUSCODE\nUA_BrowseNextResponse_copy\"(src::UA_BrowseNextResponse, dst::Ptr{UA_BrowseNextResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseNextResponse_delete-Tuple{Ptr{UA_BrowseNextResponse}}","page":"Home","title":"open62541.UA_BrowseNextResponse_delete","text":"UA_BrowseNextResponse_delete(x::Ptr{UA_BrowseNextResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseNextResponse_deleteMembers-Tuple{Ptr{UA_BrowseNextResponse}}","page":"Home","title":"open62541.UA_BrowseNextResponse_deleteMembers","text":"UA_BrowseNextResponse_deleteMembers(x::Ptr{UA_BrowseNextResponse})\n\n(deprecated, use UA_BrowseNextResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_BrowseNextResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseNextResponse_init-Tuple{Ptr{UA_BrowseNextResponse}}","page":"Home","title":"open62541.UA_BrowseNextResponse_init","text":"UA_BrowseNextResponse_init\"(x::Ptr{UA_BrowseNextResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseNextResponse_new-Tuple{}","page":"Home","title":"open62541.UA_BrowseNextResponse_new","text":"UA_BrowseNextResponse_new\"()::Ptr{UA_BrowseNextResponse}\n\ncreates and initializes a UA_BrowseNextResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_BrowseNextResponse_delete(x::Ptr{UA_BrowseNextResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePathResult_clear-Tuple{Ptr{UA_BrowsePathResult}}","page":"Home","title":"open62541.UA_BrowsePathResult_clear","text":"UA_BrowsePathResult_clear\"(x::Ptr{UA_BrowsePathResult})\n\ndeletes the dynamically allocated content of the object x and calls UA_BrowsePathResult_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePathResult_copy-Tuple{UA_BrowsePathResult, Ptr{UA_BrowsePathResult}}","page":"Home","title":"open62541.UA_BrowsePathResult_copy","text":"UA_BrowsePathResult_copy\"(src::Ptr{UA_BrowsePathResult}, dst::Ptr{UA_BrowsePathResult})::UA_STATUSCODE\nUA_BrowsePathResult_copy\"(src::UA_BrowsePathResult, dst::Ptr{UA_BrowsePathResult})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePathResult_delete-Tuple{Ptr{UA_BrowsePathResult}}","page":"Home","title":"open62541.UA_BrowsePathResult_delete","text":"UA_BrowsePathResult_delete(x::Ptr{UA_BrowsePathResult})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePathResult_deleteMembers-Tuple{Ptr{UA_BrowsePathResult}}","page":"Home","title":"open62541.UA_BrowsePathResult_deleteMembers","text":"UA_BrowsePathResult_deleteMembers(x::Ptr{UA_BrowsePathResult})\n\n(deprecated, use UA_BrowsePathResult_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_BrowsePathResult_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePathResult_init-Tuple{Ptr{UA_BrowsePathResult}}","page":"Home","title":"open62541.UA_BrowsePathResult_init","text":"UA_BrowsePathResult_init\"(x::Ptr{UA_BrowsePathResult})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePathResult_new-Tuple{}","page":"Home","title":"open62541.UA_BrowsePathResult_new","text":"UA_BrowsePathResult_new\"()::Ptr{UA_BrowsePathResult}\n\ncreates and initializes a UA_BrowsePathResult object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_BrowsePathResult_delete(x::Ptr{UA_BrowsePathResult})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePathTarget_clear-Tuple{Ptr{UA_BrowsePathTarget}}","page":"Home","title":"open62541.UA_BrowsePathTarget_clear","text":"UA_BrowsePathTarget_clear\"(x::Ptr{UA_BrowsePathTarget})\n\ndeletes the dynamically allocated content of the object x and calls UA_BrowsePathTarget_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePathTarget_copy-Tuple{UA_BrowsePathTarget, Ptr{UA_BrowsePathTarget}}","page":"Home","title":"open62541.UA_BrowsePathTarget_copy","text":"UA_BrowsePathTarget_copy\"(src::Ptr{UA_BrowsePathTarget}, dst::Ptr{UA_BrowsePathTarget})::UA_STATUSCODE\nUA_BrowsePathTarget_copy\"(src::UA_BrowsePathTarget, dst::Ptr{UA_BrowsePathTarget})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePathTarget_delete-Tuple{Ptr{UA_BrowsePathTarget}}","page":"Home","title":"open62541.UA_BrowsePathTarget_delete","text":"UA_BrowsePathTarget_delete(x::Ptr{UA_BrowsePathTarget})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePathTarget_deleteMembers-Tuple{Ptr{UA_BrowsePathTarget}}","page":"Home","title":"open62541.UA_BrowsePathTarget_deleteMembers","text":"UA_BrowsePathTarget_deleteMembers(x::Ptr{UA_BrowsePathTarget})\n\n(deprecated, use UA_BrowsePathTarget_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_BrowsePathTarget_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePathTarget_init-Tuple{Ptr{UA_BrowsePathTarget}}","page":"Home","title":"open62541.UA_BrowsePathTarget_init","text":"UA_BrowsePathTarget_init\"(x::Ptr{UA_BrowsePathTarget})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePathTarget_new-Tuple{}","page":"Home","title":"open62541.UA_BrowsePathTarget_new","text":"UA_BrowsePathTarget_new\"()::Ptr{UA_BrowsePathTarget}\n\ncreates and initializes a UA_BrowsePathTarget object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_BrowsePathTarget_delete(x::Ptr{UA_BrowsePathTarget})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePath_clear-Tuple{Ptr{UA_BrowsePath}}","page":"Home","title":"open62541.UA_BrowsePath_clear","text":"UA_BrowsePath_clear\"(x::Ptr{UA_BrowsePath})\n\ndeletes the dynamically allocated content of the object x and calls UA_BrowsePath_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePath_copy-Tuple{UA_BrowsePath, Ptr{UA_BrowsePath}}","page":"Home","title":"open62541.UA_BrowsePath_copy","text":"UA_BrowsePath_copy\"(src::Ptr{UA_BrowsePath}, dst::Ptr{UA_BrowsePath})::UA_STATUSCODE\nUA_BrowsePath_copy\"(src::UA_BrowsePath, dst::Ptr{UA_BrowsePath})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePath_delete-Tuple{Ptr{UA_BrowsePath}}","page":"Home","title":"open62541.UA_BrowsePath_delete","text":"UA_BrowsePath_delete(x::Ptr{UA_BrowsePath})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePath_deleteMembers-Tuple{Ptr{UA_BrowsePath}}","page":"Home","title":"open62541.UA_BrowsePath_deleteMembers","text":"UA_BrowsePath_deleteMembers(x::Ptr{UA_BrowsePath})\n\n(deprecated, use UA_BrowsePath_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_BrowsePath_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePath_init-Tuple{Ptr{UA_BrowsePath}}","page":"Home","title":"open62541.UA_BrowsePath_init","text":"UA_BrowsePath_init\"(x::Ptr{UA_BrowsePath})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowsePath_new-Tuple{}","page":"Home","title":"open62541.UA_BrowsePath_new","text":"UA_BrowsePath_new\"()::Ptr{UA_BrowsePath}\n\ncreates and initializes a UA_BrowsePath object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_BrowsePath_delete(x::Ptr{UA_BrowsePath})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseRequest_clear-Tuple{Ptr{UA_BrowseRequest}}","page":"Home","title":"open62541.UA_BrowseRequest_clear","text":"UA_BrowseRequest_clear\"(x::Ptr{UA_BrowseRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_BrowseRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseRequest_copy-Tuple{UA_BrowseRequest, Ptr{UA_BrowseRequest}}","page":"Home","title":"open62541.UA_BrowseRequest_copy","text":"UA_BrowseRequest_copy\"(src::Ptr{UA_BrowseRequest}, dst::Ptr{UA_BrowseRequest})::UA_STATUSCODE\nUA_BrowseRequest_copy\"(src::UA_BrowseRequest, dst::Ptr{UA_BrowseRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseRequest_delete-Tuple{Ptr{UA_BrowseRequest}}","page":"Home","title":"open62541.UA_BrowseRequest_delete","text":"UA_BrowseRequest_delete(x::Ptr{UA_BrowseRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseRequest_deleteMembers-Tuple{Ptr{UA_BrowseRequest}}","page":"Home","title":"open62541.UA_BrowseRequest_deleteMembers","text":"UA_BrowseRequest_deleteMembers(x::Ptr{UA_BrowseRequest})\n\n(deprecated, use UA_BrowseRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_BrowseRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseRequest_init-Tuple{Ptr{UA_BrowseRequest}}","page":"Home","title":"open62541.UA_BrowseRequest_init","text":"UA_BrowseRequest_init\"(x::Ptr{UA_BrowseRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseRequest_new-Tuple{}","page":"Home","title":"open62541.UA_BrowseRequest_new","text":"UA_BrowseRequest_new\"()::Ptr{UA_BrowseRequest}\n\ncreates and initializes a UA_BrowseRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_BrowseRequest_delete(x::Ptr{UA_BrowseRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResponse_clear-Tuple{Ptr{UA_BrowseResponse}}","page":"Home","title":"open62541.UA_BrowseResponse_clear","text":"UA_BrowseResponse_clear\"(x::Ptr{UA_BrowseResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_BrowseResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResponse_copy-Tuple{UA_BrowseResponse, Ptr{UA_BrowseResponse}}","page":"Home","title":"open62541.UA_BrowseResponse_copy","text":"UA_BrowseResponse_copy\"(src::Ptr{UA_BrowseResponse}, dst::Ptr{UA_BrowseResponse})::UA_STATUSCODE\nUA_BrowseResponse_copy\"(src::UA_BrowseResponse, dst::Ptr{UA_BrowseResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResponse_delete-Tuple{Ptr{UA_BrowseResponse}}","page":"Home","title":"open62541.UA_BrowseResponse_delete","text":"UA_BrowseResponse_delete(x::Ptr{UA_BrowseResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResponse_deleteMembers-Tuple{Ptr{UA_BrowseResponse}}","page":"Home","title":"open62541.UA_BrowseResponse_deleteMembers","text":"UA_BrowseResponse_deleteMembers(x::Ptr{UA_BrowseResponse})\n\n(deprecated, use UA_BrowseResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_BrowseResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResponse_init-Tuple{Ptr{UA_BrowseResponse}}","page":"Home","title":"open62541.UA_BrowseResponse_init","text":"UA_BrowseResponse_init\"(x::Ptr{UA_BrowseResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResponse_new-Tuple{}","page":"Home","title":"open62541.UA_BrowseResponse_new","text":"UA_BrowseResponse_new\"()::Ptr{UA_BrowseResponse}\n\ncreates and initializes a UA_BrowseResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_BrowseResponse_delete(x::Ptr{UA_BrowseResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResultMask_clear-Tuple{Ptr{UA_BrowseResultMask}}","page":"Home","title":"open62541.UA_BrowseResultMask_clear","text":"UA_BrowseResultMask_clear\"(x::Ptr{UA_BrowseResultMask})\n\ndeletes the dynamically allocated content of the object x and calls UA_BrowseResultMask_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResultMask_copy-Tuple{UA_BrowseResultMask, Ptr{UA_BrowseResultMask}}","page":"Home","title":"open62541.UA_BrowseResultMask_copy","text":"UA_BrowseResultMask_copy\"(src::Ptr{UA_BrowseResultMask}, dst::Ptr{UA_BrowseResultMask})::UA_STATUSCODE\nUA_BrowseResultMask_copy\"(src::UA_BrowseResultMask, dst::Ptr{UA_BrowseResultMask})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResultMask_delete-Tuple{Ptr{UA_BrowseResultMask}}","page":"Home","title":"open62541.UA_BrowseResultMask_delete","text":"UA_BrowseResultMask_delete(x::Ptr{UA_BrowseResultMask})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResultMask_deleteMembers-Tuple{Ptr{UA_BrowseResultMask}}","page":"Home","title":"open62541.UA_BrowseResultMask_deleteMembers","text":"UA_BrowseResultMask_deleteMembers(x::Ptr{UA_BrowseResultMask})\n\n(deprecated, use UA_BrowseResultMask_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_BrowseResultMask_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResultMask_init-Tuple{Ptr{UA_BrowseResultMask}}","page":"Home","title":"open62541.UA_BrowseResultMask_init","text":"UA_BrowseResultMask_init\"(x::Ptr{UA_BrowseResultMask})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResultMask_new-Tuple{}","page":"Home","title":"open62541.UA_BrowseResultMask_new","text":"UA_BrowseResultMask_new\"()::Ptr{UA_BrowseResultMask}\n\ncreates and initializes a UA_BrowseResultMask object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_BrowseResultMask_delete(x::Ptr{UA_BrowseResultMask})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResult_clear-Tuple{Ptr{UA_BrowseResult}}","page":"Home","title":"open62541.UA_BrowseResult_clear","text":"UA_BrowseResult_clear\"(x::Ptr{UA_BrowseResult})\n\ndeletes the dynamically allocated content of the object x and calls UA_BrowseResult_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResult_copy-Tuple{UA_BrowseResult, Ptr{UA_BrowseResult}}","page":"Home","title":"open62541.UA_BrowseResult_copy","text":"UA_BrowseResult_copy\"(src::Ptr{UA_BrowseResult}, dst::Ptr{UA_BrowseResult})::UA_STATUSCODE\nUA_BrowseResult_copy\"(src::UA_BrowseResult, dst::Ptr{UA_BrowseResult})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResult_delete-Tuple{Ptr{UA_BrowseResult}}","page":"Home","title":"open62541.UA_BrowseResult_delete","text":"UA_BrowseResult_delete(x::Ptr{UA_BrowseResult})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResult_deleteMembers-Tuple{Ptr{UA_BrowseResult}}","page":"Home","title":"open62541.UA_BrowseResult_deleteMembers","text":"UA_BrowseResult_deleteMembers(x::Ptr{UA_BrowseResult})\n\n(deprecated, use UA_BrowseResult_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_BrowseResult_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResult_init-Tuple{Ptr{UA_BrowseResult}}","page":"Home","title":"open62541.UA_BrowseResult_init","text":"UA_BrowseResult_init\"(x::Ptr{UA_BrowseResult})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BrowseResult_new-Tuple{}","page":"Home","title":"open62541.UA_BrowseResult_new","text":"UA_BrowseResult_new\"()::Ptr{UA_BrowseResult}\n\ncreates and initializes a UA_BrowseResult object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_BrowseResult_delete(x::Ptr{UA_BrowseResult})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BuildInfo_clear-Tuple{Ptr{UA_BuildInfo}}","page":"Home","title":"open62541.UA_BuildInfo_clear","text":"UA_BuildInfo_clear\"(x::Ptr{UA_BuildInfo})\n\ndeletes the dynamically allocated content of the object x and calls UA_BuildInfo_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BuildInfo_copy-Tuple{UA_BuildInfo, Ptr{UA_BuildInfo}}","page":"Home","title":"open62541.UA_BuildInfo_copy","text":"UA_BuildInfo_copy\"(src::Ptr{UA_BuildInfo}, dst::Ptr{UA_BuildInfo})::UA_STATUSCODE\nUA_BuildInfo_copy\"(src::UA_BuildInfo, dst::Ptr{UA_BuildInfo})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BuildInfo_delete-Tuple{Ptr{UA_BuildInfo}}","page":"Home","title":"open62541.UA_BuildInfo_delete","text":"UA_BuildInfo_delete(x::Ptr{UA_BuildInfo})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BuildInfo_deleteMembers-Tuple{Ptr{UA_BuildInfo}}","page":"Home","title":"open62541.UA_BuildInfo_deleteMembers","text":"UA_BuildInfo_deleteMembers(x::Ptr{UA_BuildInfo})\n\n(deprecated, use UA_BuildInfo_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_BuildInfo_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BuildInfo_init-Tuple{Ptr{UA_BuildInfo}}","page":"Home","title":"open62541.UA_BuildInfo_init","text":"UA_BuildInfo_init\"(x::Ptr{UA_BuildInfo})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_BuildInfo_new-Tuple{}","page":"Home","title":"open62541.UA_BuildInfo_new","text":"UA_BuildInfo_new\"()::Ptr{UA_BuildInfo}\n\ncreates and initializes a UA_BuildInfo object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_BuildInfo_delete(x::Ptr{UA_BuildInfo})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ByteString_clear-Tuple{Ptr{UA_String}}","page":"Home","title":"open62541.UA_ByteString_clear","text":"UA_String_clear\"(x::Ptr{UA_String})\n\ndeletes the dynamically allocated content of the object x and calls UA_String_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ByteString_copy-Tuple{UA_String, Ptr{UA_String}}","page":"Home","title":"open62541.UA_ByteString_copy","text":"UA_String_copy\"(src::Ptr{UA_String}, dst::Ptr{UA_String})::UA_STATUSCODE\nUA_String_copy\"(src::UA_String, dst::Ptr{UA_String})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ByteString_delete-Tuple{Ptr{UA_String}}","page":"Home","title":"open62541.UA_ByteString_delete","text":"UA_String_delete(x::Ptr{UA_String})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ByteString_deleteMembers-Tuple{Ptr{UA_String}}","page":"Home","title":"open62541.UA_ByteString_deleteMembers","text":"UA_String_deleteMembers(x::Ptr{UA_String})\n\n(deprecated, use UA_String_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_String_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ByteString_equal-Tuple{Any, Any}","page":"Home","title":"open62541.UA_ByteString_equal","text":"UA_ByteString_equal(s1::Ptr{UA_ByteString}, s2::Ptr{UA_ByteString})::Bool\n\nreturns true if s1 and s2 have identical content.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ByteString_init-Tuple{Ptr{UA_String}}","page":"Home","title":"open62541.UA_ByteString_init","text":"UA_String_init\"(x::Ptr{UA_String})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ByteString_new-Tuple{}","page":"Home","title":"open62541.UA_ByteString_new","text":"UA_String_new\"()::Ptr{UA_String}\n\ncreates and initializes a UA_String object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_String_delete(x::Ptr{UA_String})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Byte_clear-Tuple{Ptr{UInt8}}","page":"Home","title":"open62541.UA_Byte_clear","text":"UInt8_clear\"(x::Ptr{UInt8})\n\ndeletes the dynamically allocated content of the object x and calls UInt8_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Byte_copy-Tuple{UInt8, Ptr{UInt8}}","page":"Home","title":"open62541.UA_Byte_copy","text":"UInt8_copy\"(src::Ptr{UInt8}, dst::Ptr{UInt8})::UA_STATUSCODE\nUInt8_copy\"(src::UInt8, dst::Ptr{UInt8})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Byte_delete-Tuple{Ptr{UInt8}}","page":"Home","title":"open62541.UA_Byte_delete","text":"UInt8_delete(x::Ptr{UInt8})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Byte_deleteMembers-Tuple{Ptr{UInt8}}","page":"Home","title":"open62541.UA_Byte_deleteMembers","text":"UInt8_deleteMembers(x::Ptr{UInt8})\n\n(deprecated, use UInt8_clear(x) instead) deletes the dynamically allocated content of the object x and calls UInt8_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Byte_init-Tuple{Ptr{UInt8}}","page":"Home","title":"open62541.UA_Byte_init","text":"UInt8_init\"(x::Ptr{UInt8})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Byte_new-Tuple{}","page":"Home","title":"open62541.UA_Byte_new","text":"UInt8_new\"()::Ptr{UInt8}\n\ncreates and initializes a UInt8 object whose memory is allocated by C. After use, it needs to be  cleaned up with UInt8_delete(x::Ptr{UInt8})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallMethodRequest_clear-Tuple{Ptr{UA_CallMethodRequest}}","page":"Home","title":"open62541.UA_CallMethodRequest_clear","text":"UA_CallMethodRequest_clear\"(x::Ptr{UA_CallMethodRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_CallMethodRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallMethodRequest_copy-Tuple{UA_CallMethodRequest, Ptr{UA_CallMethodRequest}}","page":"Home","title":"open62541.UA_CallMethodRequest_copy","text":"UA_CallMethodRequest_copy\"(src::Ptr{UA_CallMethodRequest}, dst::Ptr{UA_CallMethodRequest})::UA_STATUSCODE\nUA_CallMethodRequest_copy\"(src::UA_CallMethodRequest, dst::Ptr{UA_CallMethodRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallMethodRequest_delete-Tuple{Ptr{UA_CallMethodRequest}}","page":"Home","title":"open62541.UA_CallMethodRequest_delete","text":"UA_CallMethodRequest_delete(x::Ptr{UA_CallMethodRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallMethodRequest_deleteMembers-Tuple{Ptr{UA_CallMethodRequest}}","page":"Home","title":"open62541.UA_CallMethodRequest_deleteMembers","text":"UA_CallMethodRequest_deleteMembers(x::Ptr{UA_CallMethodRequest})\n\n(deprecated, use UA_CallMethodRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_CallMethodRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallMethodRequest_init-Tuple{Ptr{UA_CallMethodRequest}}","page":"Home","title":"open62541.UA_CallMethodRequest_init","text":"UA_CallMethodRequest_init\"(x::Ptr{UA_CallMethodRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallMethodRequest_new-Tuple{}","page":"Home","title":"open62541.UA_CallMethodRequest_new","text":"UA_CallMethodRequest_new\"()::Ptr{UA_CallMethodRequest}\n\ncreates and initializes a UA_CallMethodRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_CallMethodRequest_delete(x::Ptr{UA_CallMethodRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallMethodResult_clear-Tuple{Ptr{UA_CallMethodResult}}","page":"Home","title":"open62541.UA_CallMethodResult_clear","text":"UA_CallMethodResult_clear\"(x::Ptr{UA_CallMethodResult})\n\ndeletes the dynamically allocated content of the object x and calls UA_CallMethodResult_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallMethodResult_copy-Tuple{UA_CallMethodResult, Ptr{UA_CallMethodResult}}","page":"Home","title":"open62541.UA_CallMethodResult_copy","text":"UA_CallMethodResult_copy\"(src::Ptr{UA_CallMethodResult}, dst::Ptr{UA_CallMethodResult})::UA_STATUSCODE\nUA_CallMethodResult_copy\"(src::UA_CallMethodResult, dst::Ptr{UA_CallMethodResult})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallMethodResult_delete-Tuple{Ptr{UA_CallMethodResult}}","page":"Home","title":"open62541.UA_CallMethodResult_delete","text":"UA_CallMethodResult_delete(x::Ptr{UA_CallMethodResult})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallMethodResult_deleteMembers-Tuple{Ptr{UA_CallMethodResult}}","page":"Home","title":"open62541.UA_CallMethodResult_deleteMembers","text":"UA_CallMethodResult_deleteMembers(x::Ptr{UA_CallMethodResult})\n\n(deprecated, use UA_CallMethodResult_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_CallMethodResult_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallMethodResult_init-Tuple{Ptr{UA_CallMethodResult}}","page":"Home","title":"open62541.UA_CallMethodResult_init","text":"UA_CallMethodResult_init\"(x::Ptr{UA_CallMethodResult})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallMethodResult_new-Tuple{}","page":"Home","title":"open62541.UA_CallMethodResult_new","text":"UA_CallMethodResult_new\"()::Ptr{UA_CallMethodResult}\n\ncreates and initializes a UA_CallMethodResult object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_CallMethodResult_delete(x::Ptr{UA_CallMethodResult})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallRequest_clear-Tuple{Ptr{UA_CallRequest}}","page":"Home","title":"open62541.UA_CallRequest_clear","text":"UA_CallRequest_clear\"(x::Ptr{UA_CallRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_CallRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallRequest_copy-Tuple{UA_CallRequest, Ptr{UA_CallRequest}}","page":"Home","title":"open62541.UA_CallRequest_copy","text":"UA_CallRequest_copy\"(src::Ptr{UA_CallRequest}, dst::Ptr{UA_CallRequest})::UA_STATUSCODE\nUA_CallRequest_copy\"(src::UA_CallRequest, dst::Ptr{UA_CallRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallRequest_delete-Tuple{Ptr{UA_CallRequest}}","page":"Home","title":"open62541.UA_CallRequest_delete","text":"UA_CallRequest_delete(x::Ptr{UA_CallRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallRequest_deleteMembers-Tuple{Ptr{UA_CallRequest}}","page":"Home","title":"open62541.UA_CallRequest_deleteMembers","text":"UA_CallRequest_deleteMembers(x::Ptr{UA_CallRequest})\n\n(deprecated, use UA_CallRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_CallRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallRequest_init-Tuple{Ptr{UA_CallRequest}}","page":"Home","title":"open62541.UA_CallRequest_init","text":"UA_CallRequest_init\"(x::Ptr{UA_CallRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallRequest_new-Tuple{}","page":"Home","title":"open62541.UA_CallRequest_new","text":"UA_CallRequest_new\"()::Ptr{UA_CallRequest}\n\ncreates and initializes a UA_CallRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_CallRequest_delete(x::Ptr{UA_CallRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallResponse_clear-Tuple{Ptr{UA_CallResponse}}","page":"Home","title":"open62541.UA_CallResponse_clear","text":"UA_CallResponse_clear\"(x::Ptr{UA_CallResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_CallResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallResponse_copy-Tuple{UA_CallResponse, Ptr{UA_CallResponse}}","page":"Home","title":"open62541.UA_CallResponse_copy","text":"UA_CallResponse_copy\"(src::Ptr{UA_CallResponse}, dst::Ptr{UA_CallResponse})::UA_STATUSCODE\nUA_CallResponse_copy\"(src::UA_CallResponse, dst::Ptr{UA_CallResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallResponse_delete-Tuple{Ptr{UA_CallResponse}}","page":"Home","title":"open62541.UA_CallResponse_delete","text":"UA_CallResponse_delete(x::Ptr{UA_CallResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallResponse_deleteMembers-Tuple{Ptr{UA_CallResponse}}","page":"Home","title":"open62541.UA_CallResponse_deleteMembers","text":"UA_CallResponse_deleteMembers(x::Ptr{UA_CallResponse})\n\n(deprecated, use UA_CallResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_CallResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallResponse_init-Tuple{Ptr{UA_CallResponse}}","page":"Home","title":"open62541.UA_CallResponse_init","text":"UA_CallResponse_init\"(x::Ptr{UA_CallResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CallResponse_new-Tuple{}","page":"Home","title":"open62541.UA_CallResponse_new","text":"UA_CallResponse_new\"()::Ptr{UA_CallResponse}\n\ncreates and initializes a UA_CallResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_CallResponse_delete(x::Ptr{UA_CallResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CertificateVerification_AcceptAll-Tuple{Any}","page":"Home","title":"open62541.UA_CertificateVerification_AcceptAll","text":"UA_CertificateVerification_AcceptAll(cv)\n\n** amalgamated original file \"/srcdir/open62541/plugins/include/open62541/plugin/pki_default.h\" ***\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ChannelSecurityToken_clear-Tuple{Ptr{UA_ChannelSecurityToken}}","page":"Home","title":"open62541.UA_ChannelSecurityToken_clear","text":"UA_ChannelSecurityToken_clear\"(x::Ptr{UA_ChannelSecurityToken})\n\ndeletes the dynamically allocated content of the object x and calls UA_ChannelSecurityToken_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ChannelSecurityToken_copy-Tuple{UA_ChannelSecurityToken, Ptr{UA_ChannelSecurityToken}}","page":"Home","title":"open62541.UA_ChannelSecurityToken_copy","text":"UA_ChannelSecurityToken_copy\"(src::Ptr{UA_ChannelSecurityToken}, dst::Ptr{UA_ChannelSecurityToken})::UA_STATUSCODE\nUA_ChannelSecurityToken_copy\"(src::UA_ChannelSecurityToken, dst::Ptr{UA_ChannelSecurityToken})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ChannelSecurityToken_delete-Tuple{Ptr{UA_ChannelSecurityToken}}","page":"Home","title":"open62541.UA_ChannelSecurityToken_delete","text":"UA_ChannelSecurityToken_delete(x::Ptr{UA_ChannelSecurityToken})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ChannelSecurityToken_deleteMembers-Tuple{Ptr{UA_ChannelSecurityToken}}","page":"Home","title":"open62541.UA_ChannelSecurityToken_deleteMembers","text":"UA_ChannelSecurityToken_deleteMembers(x::Ptr{UA_ChannelSecurityToken})\n\n(deprecated, use UA_ChannelSecurityToken_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ChannelSecurityToken_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ChannelSecurityToken_init-Tuple{Ptr{UA_ChannelSecurityToken}}","page":"Home","title":"open62541.UA_ChannelSecurityToken_init","text":"UA_ChannelSecurityToken_init\"(x::Ptr{UA_ChannelSecurityToken})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ChannelSecurityToken_new-Tuple{}","page":"Home","title":"open62541.UA_ChannelSecurityToken_new","text":"UA_ChannelSecurityToken_new\"()::Ptr{UA_ChannelSecurityToken}\n\ncreates and initializes a UA_ChannelSecurityToken object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ChannelSecurityToken_delete(x::Ptr{UA_ChannelSecurityToken})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadAccessLevelAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadAccessLevelAttributeCallback_generate","text":"UA_ClientAsyncReadAccessLevelAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadAccessLevelAttributeCallback that can be supplied as callback argument to UA_Client_readAccessLevelAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, accesslevel)::UA_Byte)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadAttributeCallback_generate","text":"UA_ClientAsyncReadAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadAttributeCallback that can be supplied as callback argument to UA_Client_readAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, attribute)::UA_DataValue)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadBrowseNameAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadBrowseNameAttributeCallback_generate","text":"UA_ClientAsyncReadBrowseNameAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadBrowseNameAttributeCallback that can be supplied as callback argument to UA_Client_readBrowseNameAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, browsename)::UA_QualifiedName)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadContainsNoLoopsAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadContainsNoLoopsAttributeCallback_generate","text":"UA_ClientAsyncReadContainsNoLoopsAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadContainsNoLoopsAttributeCallback that can be supplied as callback argument to UA_Client_readContainsNoLoopsAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, containsNoLoops)::UA_Boolean)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadDataTypeAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadDataTypeAttributeCallback_generate","text":"UA_ClientAsyncReadDataTypeAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadDataTypeAttributeCallback that can be supplied as callback argument to UA_Client_readDataTypeAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, datatype)::UA_NodeId)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadDescriptionAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadDescriptionAttributeCallback_generate","text":"UA_ClientAsyncReadDescriptionAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadDescriptionAttributeCallback that can be supplied as callback argument to UA_Client_readDescriptionAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, description)::UA_LocalizedText)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadDisplayNameAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadDisplayNameAttributeCallback_generate","text":"UA_ClientAsyncReadDisplayNameAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadDisplayNameAttributeCallback that can be supplied as callback argument to UA_Client_readDisplayNameAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, displayname)::UA_LocalizedText)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadEventNotifierAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadEventNotifierAttributeCallback_generate","text":"UA_ClientAsyncReadEventNotifierAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadEventNotifierAttributeCallback that can be supplied as callback argument to UA_Client_readEventNotifierAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, eventnotifier)::UA_Byte)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadExecutableAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadExecutableAttributeCallback_generate","text":"UA_ClientAsyncReadExecutableAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadExecutableAttributeCallback that can be supplied as callback argument to UA_Client_readExecutableAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, executable)::UA_Boolean)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadHistorizingAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadHistorizingAttributeCallback_generate","text":"UA_ClientAsyncReadHistorizingAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadHistorizingAttributeCallback that can be supplied as callback argument to UA_Client_readHistorizingAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, historizing)::UA_Boolean)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadInverseNameAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadInverseNameAttributeCallback_generate","text":"UA_ClientAsyncReadInverseNameAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadInverseNameAttributeCallback that can be supplied as callback argument to UA_Client_readInverseNameAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, inversename)::UA_LocalizedText)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadIsAbstractAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadIsAbstractAttributeCallback_generate","text":"UA_ClientAsyncReadIsAbstractAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadIsAbstractAttributeCallback that can be supplied as callback argument to UA_Client_readIsAbstractAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, isabstract)::UA_Boolean)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadMinimumSamplingIntervalAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadMinimumSamplingIntervalAttributeCallback_generate","text":"UA_ClientAsyncReadMinimumSamplingIntervalAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadMinimumSamplingIntervalAttributeCallback that can be supplied as callback argument to UA_Client_readMinimumSamplingIntervalAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, minimumsamplinginterval)::UA_Double)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadNodeClassAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadNodeClassAttributeCallback_generate","text":"UA_ClientAsyncReadNodeClassAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadNodeClassAttributeCallback that can be supplied as callback argument to UA_Client_readNodeClassAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, nodeclass)::UA_NodeClass)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadSymmetricAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadSymmetricAttributeCallback_generate","text":"UA_ClientAsyncReadSymmetricAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadSymmetricAttributeCallback that can be supplied as callback argument to UA_Client_readSymmetricAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, symmetric)::UA_Boolean)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadUserAccessLevelAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadUserAccessLevelAttributeCallback_generate","text":"UA_ClientAsyncReadUserAccessLevelAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadUserAccessLevelAttributeCallback that can be supplied as callback argument to UA_Client_readUserAccessLevelAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, useraccesslevel)::UA_Byte)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadUserExecutableAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadUserExecutableAttributeCallback_generate","text":"UA_ClientAsyncReadUserExecutableAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadUserExecutableAttributeCallback that can be supplied as callback argument to UA_Client_readUserExecutableAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, userexecutable)::UA_Boolean)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadUserWriteMaskAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadUserWriteMaskAttributeCallback_generate","text":"UA_ClientAsyncReadUserWriteMaskAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadUserWriteMaskAttributeCallback that can be supplied as callback argument to UA_Client_readUserWriteMaskAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, userwritemask)::UA_UInt32)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadValueAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadValueAttributeCallback_generate","text":"UA_ClientAsyncReadValueAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadValueAttributeCallback that can be supplied as callback argument to UA_Client_readValueAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, value)::UA_DataValue)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadValueRankAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadValueRankAttributeCallback_generate","text":"UA_ClientAsyncReadValueRankAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadValueRankAttributeCallback that can be supplied as callback argument to UA_Client_readValueRankAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, valuerank)::UA_UInt32)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientAsyncReadWriteMaskAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientAsyncReadWriteMaskAttributeCallback_generate","text":"UA_ClientAsyncReadWriteMaskAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientAsyncReadWriteMaskAttributeCallback that can be supplied as callback argument to UA_Client_readWriteMaskAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, writeMask)::UA_UInt32)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientCallback_generate-Tuple{Function}","page":"Home","title":"open62541.UA_ClientCallback_generate","text":"UA_ClientCallback_generate(f::Function)\n\ncreates a UA_ClientCallback object that can be used in UA_Client_addTimedCallback or UA_Client_addRepeatedCallback.\n\nf must be a Julia function with the following signature: f(client::Ptr{UA_Client}, data::Ptr{Cvoid}))::Nothing\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ClientReadArrayDimensionsAttributeCallback_generate-Tuple{Any}","page":"Home","title":"open62541.UA_ClientReadArrayDimensionsAttributeCallback_generate","text":"UA_ClientReadArrayDimensionsAttributeCallback_generate(f::Function)\n\ncreates a UA_ClientReadArrayDimensionsAttributeCallback that can be supplied as callback argument to UA_Client_readUA_ClientReadArrayDimensionsAttribute_async. The callback will be triggered once the read operation has been carried out.\n\nf must be a Julia function with the following signature:\n\n    status::UA_StatusCode, arraydimensions)::UA_Variant)::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_addReference-NTuple{7, Any}","page":"Home","title":"open62541.UA_Client_addReference","text":"UA_Client_addReference(client, sourceNodeId, referenceTypeId, isForward, targetServerUri, targetNodeId, targetNodeClass)\n\nNode Management ^^^^^^^^^^^^^^^ See the section on :ref:server-side node management <addnodes>.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_connectUsername-Tuple{Ptr{UA_Client}, AbstractString, AbstractString, AbstractString}","page":"Home","title":"open62541.UA_Client_connectUsername","text":"UA_Client_connectUsername(client::Ptr{UA_Client}, endpointurl::AbstractString, \n    username::AbstractString, password::AbstractString)::UA_StatusCode\n\nconnects the client to the server with endpoint URL endpointurl and supplies username and password as login credentials.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_findDataType-Tuple{Any, Any}","page":"Home","title":"open62541.UA_Client_findDataType","text":"UA_Client_findDataType(client, typeId)\n\nClient Utility Functions ––––––––––––\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_getContext-Tuple{Ptr{UA_Client}}","page":"Home","title":"open62541.UA_Client_getContext","text":"UA_Client_getContext(client::Ptr{UA_Client})::Ptr{Ptr{Cvoid}}\n\nGet the client context.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_new-Tuple{}","page":"Home","title":"open62541.UA_Client_new","text":"UA_Client_new()\n\n** amalgamated original file \"/srcdir/open62541/plugins/include/open62541/client_config_default.h\" ***\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_readAccessLevelAttribute","page":"Home","title":"open62541.UA_Client_readAccessLevelAttribute","text":"UA_Client_readAccessLevelAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_Byte} = UA_Byte_new())\n\nUses the UA Client API to read the value of attribute AccessLevel from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readBrowseNameAttribute","page":"Home","title":"open62541.UA_Client_readBrowseNameAttribute","text":"UA_Client_readBrowseNameAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_QualifiedName} = UA_QualifiedName_new())\n\nUses the UA Client API to read the value of attribute BrowseName from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readContainsNoLoopsAttribute","page":"Home","title":"open62541.UA_Client_readContainsNoLoopsAttribute","text":"UA_Client_readContainsNoLoopsAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_Boolean} = UA_Boolean_new())\n\nUses the UA Client API to read the value of attribute ContainsNoLoops from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readDataTypeAttribute","page":"Home","title":"open62541.UA_Client_readDataTypeAttribute","text":"UA_Client_readDataTypeAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_NodeId} = UA_NodeId_new())\n\nUses the UA Client API to read the value of attribute DataType from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readDescriptionAttribute","page":"Home","title":"open62541.UA_Client_readDescriptionAttribute","text":"UA_Client_readDescriptionAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_LocalizedText} = UA_LocalizedText_new())\n\nUses the UA Client API to read the value of attribute Description from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readDisplayNameAttribute","page":"Home","title":"open62541.UA_Client_readDisplayNameAttribute","text":"UA_Client_readDisplayNameAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_LocalizedText} = UA_LocalizedText_new())\n\nUses the UA Client API to read the value of attribute DisplayName from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readEventNotifierAttribute","page":"Home","title":"open62541.UA_Client_readEventNotifierAttribute","text":"UA_Client_readEventNotifierAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_Byte} = UA_Byte_new())\n\nUses the UA Client API to read the value of attribute EventNotifier from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readExecutableAttribute","page":"Home","title":"open62541.UA_Client_readExecutableAttribute","text":"UA_Client_readExecutableAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_Boolean} = UA_Boolean_new())\n\nUses the UA Client API to read the value of attribute Executable from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readHistorizingAttribute","page":"Home","title":"open62541.UA_Client_readHistorizingAttribute","text":"UA_Client_readHistorizingAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_Boolean} = UA_Boolean_new())\n\nUses the UA Client API to read the value of attribute Historizing from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readInverseNameAttribute","page":"Home","title":"open62541.UA_Client_readInverseNameAttribute","text":"UA_Client_readInverseNameAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_LocalizedText} = UA_LocalizedText_new())\n\nUses the UA Client API to read the value of attribute InverseName from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readIsAbstractAttribute","page":"Home","title":"open62541.UA_Client_readIsAbstractAttribute","text":"UA_Client_readIsAbstractAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_Boolean} = UA_Boolean_new())\n\nUses the UA Client API to read the value of attribute IsAbstract from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readMinimumSamplingIntervalAttribute","page":"Home","title":"open62541.UA_Client_readMinimumSamplingIntervalAttribute","text":"UA_Client_readMinimumSamplingIntervalAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_Double} = UA_Double_new())\n\nUses the UA Client API to read the value of attribute MinimumSamplingInterval from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readNodeClassAttribute","page":"Home","title":"open62541.UA_Client_readNodeClassAttribute","text":"UA_Client_readNodeClassAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_NodeClass} = UA_NodeClass_new())\n\nUses the UA Client API to read the value of attribute NodeClass from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readNodeIdAttribute","page":"Home","title":"open62541.UA_Client_readNodeIdAttribute","text":"UA_Client_readNodeIdAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_NodeId} = UA_NodeId_new())\n\nUses the UA Client API to read the value of attribute NodeId from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readSymmetricAttribute","page":"Home","title":"open62541.UA_Client_readSymmetricAttribute","text":"UA_Client_readSymmetricAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_Boolean} = UA_Boolean_new())\n\nUses the UA Client API to read the value of attribute Symmetric from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readUserAccessLevelAttribute","page":"Home","title":"open62541.UA_Client_readUserAccessLevelAttribute","text":"UA_Client_readUserAccessLevelAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_Byte} = UA_Byte_new())\n\nUses the UA Client API to read the value of attribute UserAccessLevel from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readUserExecutableAttribute","page":"Home","title":"open62541.UA_Client_readUserExecutableAttribute","text":"UA_Client_readUserExecutableAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_Boolean} = UA_Boolean_new())\n\nUses the UA Client API to read the value of attribute UserExecutable from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readUserWriteMaskAttribute","page":"Home","title":"open62541.UA_Client_readUserWriteMaskAttribute","text":"UA_Client_readUserWriteMaskAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_UInt32} = UA_UInt32_new())\n\nUses the UA Client API to read the value of attribute UserWriteMask from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readValueAttribute","page":"Home","title":"open62541.UA_Client_readValueAttribute","text":"UA_Client_readValueAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_Variant} = UA_Variant_new())\n\nUses the UA Client API to read the value of attribute Value from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readValueRankAttribute","page":"Home","title":"open62541.UA_Client_readValueRankAttribute","text":"UA_Client_readValueRankAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_Int32} = UA_Int32_new())\n\nUses the UA Client API to read the value of attribute ValueRank from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_readWriteMaskAttribute","page":"Home","title":"open62541.UA_Client_readWriteMaskAttribute","text":"UA_Client_readWriteMaskAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               out::Ptr{UA_UInt32} = UA_UInt32_new())\n\nUses the UA Client API to read the value of attribute WriteMask from the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Client_writeAccessLevelAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{UInt8}}","page":"Home","title":"open62541.UA_Client_writeAccessLevelAttribute","text":"UA_Client_writeAccessLevelAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_Byte},Ptr{UA_Byte}, UA_Byte})\n\nUses the UA Client API to write the value new_val to the attribute AccessLevel of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeBrowseNameAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{UA_QualifiedName}}","page":"Home","title":"open62541.UA_Client_writeBrowseNameAttribute","text":"UA_Client_writeBrowseNameAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_QualifiedName},Ptr{UA_QualifiedName}, UA_QualifiedName})\n\nUses the UA Client API to write the value new_val to the attribute BrowseName of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeContainsNoLoopsAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{Bool}}","page":"Home","title":"open62541.UA_Client_writeContainsNoLoopsAttribute","text":"UA_Client_writeContainsNoLoopsAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_Boolean},Ptr{UA_Boolean}, UA_Boolean})\n\nUses the UA Client API to write the value new_val to the attribute ContainsNoLoops of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeDataTypeAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{UA_NodeId}}","page":"Home","title":"open62541.UA_Client_writeDataTypeAttribute","text":"UA_Client_writeDataTypeAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_NodeId},Ptr{UA_NodeId}, UA_NodeId})\n\nUses the UA Client API to write the value new_val to the attribute DataType of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeDescriptionAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{UA_LocalizedText}}","page":"Home","title":"open62541.UA_Client_writeDescriptionAttribute","text":"UA_Client_writeDescriptionAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_LocalizedText},Ptr{UA_LocalizedText}, UA_LocalizedText})\n\nUses the UA Client API to write the value new_val to the attribute Description of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeDisplayNameAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{UA_LocalizedText}}","page":"Home","title":"open62541.UA_Client_writeDisplayNameAttribute","text":"UA_Client_writeDisplayNameAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_LocalizedText},Ptr{UA_LocalizedText}, UA_LocalizedText})\n\nUses the UA Client API to write the value new_val to the attribute DisplayName of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeEventNotifierAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{UInt8}}","page":"Home","title":"open62541.UA_Client_writeEventNotifierAttribute","text":"UA_Client_writeEventNotifierAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_Byte},Ptr{UA_Byte}, UA_Byte})\n\nUses the UA Client API to write the value new_val to the attribute EventNotifier of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeExecutableAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{Bool}}","page":"Home","title":"open62541.UA_Client_writeExecutableAttribute","text":"UA_Client_writeExecutableAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_Boolean},Ptr{UA_Boolean}, UA_Boolean})\n\nUses the UA Client API to write the value new_val to the attribute Executable of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeHistorizingAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{Bool}}","page":"Home","title":"open62541.UA_Client_writeHistorizingAttribute","text":"UA_Client_writeHistorizingAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_Boolean},Ptr{UA_Boolean}, UA_Boolean})\n\nUses the UA Client API to write the value new_val to the attribute Historizing of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeInverseNameAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{UA_LocalizedText}}","page":"Home","title":"open62541.UA_Client_writeInverseNameAttribute","text":"UA_Client_writeInverseNameAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_LocalizedText},Ptr{UA_LocalizedText}, UA_LocalizedText})\n\nUses the UA Client API to write the value new_val to the attribute InverseName of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeIsAbstractAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{Bool}}","page":"Home","title":"open62541.UA_Client_writeIsAbstractAttribute","text":"UA_Client_writeIsAbstractAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_Boolean},Ptr{UA_Boolean}, UA_Boolean})\n\nUses the UA Client API to write the value new_val to the attribute IsAbstract of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeMinimumSamplingIntervalAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{Float64}}","page":"Home","title":"open62541.UA_Client_writeMinimumSamplingIntervalAttribute","text":"UA_Client_writeMinimumSamplingIntervalAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_Double},Ptr{UA_Double}, UA_Double})\n\nUses the UA Client API to write the value new_val to the attribute MinimumSamplingInterval of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeNodeClassAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{UA_NodeClass}}","page":"Home","title":"open62541.UA_Client_writeNodeClassAttribute","text":"UA_Client_writeNodeClassAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_NodeClass},Ptr{UA_NodeClass}, UA_NodeClass})\n\nUses the UA Client API to write the value new_val to the attribute NodeClass of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeNodeIdAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{UA_NodeId}}","page":"Home","title":"open62541.UA_Client_writeNodeIdAttribute","text":"UA_Client_writeNodeIdAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_NodeId},Ptr{UA_NodeId}, UA_NodeId})\n\nUses the UA Client API to write the value new_val to the attribute NodeId of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeSymmetricAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{Bool}}","page":"Home","title":"open62541.UA_Client_writeSymmetricAttribute","text":"UA_Client_writeSymmetricAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_Boolean},Ptr{UA_Boolean}, UA_Boolean})\n\nUses the UA Client API to write the value new_val to the attribute Symmetric of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeUserAccessLevelAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{UInt8}}","page":"Home","title":"open62541.UA_Client_writeUserAccessLevelAttribute","text":"UA_Client_writeUserAccessLevelAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_Byte},Ptr{UA_Byte}, UA_Byte})\n\nUses the UA Client API to write the value new_val to the attribute UserAccessLevel of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeUserExecutableAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{Bool}}","page":"Home","title":"open62541.UA_Client_writeUserExecutableAttribute","text":"UA_Client_writeUserExecutableAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_Boolean},Ptr{UA_Boolean}, UA_Boolean})\n\nUses the UA Client API to write the value new_val to the attribute UserExecutable of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeUserWriteMaskAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{UInt32}}","page":"Home","title":"open62541.UA_Client_writeUserWriteMaskAttribute","text":"UA_Client_writeUserWriteMaskAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_UInt32},Ptr{UA_UInt32}, UA_UInt32})\n\nUses the UA Client API to write the value new_val to the attribute UserWriteMask of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeValueAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{UA_Variant}}","page":"Home","title":"open62541.UA_Client_writeValueAttribute","text":"UA_Client_writeValueAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_Variant},Ptr{UA_Variant}, UA_Variant})\n\nUses the UA Client API to write the value new_val to the attribute Value of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeValueRankAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{Int32}}","page":"Home","title":"open62541.UA_Client_writeValueRankAttribute","text":"UA_Client_writeValueRankAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_Int32},Ptr{UA_Int32}, UA_Int32})\n\nUses the UA Client API to write the value new_val to the attribute ValueRank of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_writeWriteMaskAttribute-Tuple{Ref{UA_Client}, Ref{UA_NodeId}, Ref{UInt32}}","page":"Home","title":"open62541.UA_Client_writeWriteMaskAttribute","text":"UA_Client_writeWriteMaskAttribute(client::Union{Ref{UA_Client}, Ptr{UA_Client}, UA_Client}, \n               nodeId::Union{Ref{UA_NodeId}, Ptr{UA_NodeId}, UA_NodeId}, \n               new_val::Union{Ref{UA_UInt32},Ptr{UA_UInt32}, UA_UInt32})\n\nUses the UA Client API to write the value new_val to the attribute WriteMask of the NodeId nodeId accessed through the client client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSecureChannelRequest_clear-Tuple{Ptr{UA_CloseSecureChannelRequest}}","page":"Home","title":"open62541.UA_CloseSecureChannelRequest_clear","text":"UA_CloseSecureChannelRequest_clear\"(x::Ptr{UA_CloseSecureChannelRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_CloseSecureChannelRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSecureChannelRequest_copy-Tuple{UA_CloseSecureChannelRequest, Ptr{UA_CloseSecureChannelRequest}}","page":"Home","title":"open62541.UA_CloseSecureChannelRequest_copy","text":"UA_CloseSecureChannelRequest_copy\"(src::Ptr{UA_CloseSecureChannelRequest}, dst::Ptr{UA_CloseSecureChannelRequest})::UA_STATUSCODE\nUA_CloseSecureChannelRequest_copy\"(src::UA_CloseSecureChannelRequest, dst::Ptr{UA_CloseSecureChannelRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSecureChannelRequest_delete-Tuple{Ptr{UA_CloseSecureChannelRequest}}","page":"Home","title":"open62541.UA_CloseSecureChannelRequest_delete","text":"UA_CloseSecureChannelRequest_delete(x::Ptr{UA_CloseSecureChannelRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSecureChannelRequest_deleteMembers-Tuple{Ptr{UA_CloseSecureChannelRequest}}","page":"Home","title":"open62541.UA_CloseSecureChannelRequest_deleteMembers","text":"UA_CloseSecureChannelRequest_deleteMembers(x::Ptr{UA_CloseSecureChannelRequest})\n\n(deprecated, use UA_CloseSecureChannelRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_CloseSecureChannelRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSecureChannelRequest_init-Tuple{Ptr{UA_CloseSecureChannelRequest}}","page":"Home","title":"open62541.UA_CloseSecureChannelRequest_init","text":"UA_CloseSecureChannelRequest_init\"(x::Ptr{UA_CloseSecureChannelRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSecureChannelRequest_new-Tuple{}","page":"Home","title":"open62541.UA_CloseSecureChannelRequest_new","text":"UA_CloseSecureChannelRequest_new\"()::Ptr{UA_CloseSecureChannelRequest}\n\ncreates and initializes a UA_CloseSecureChannelRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_CloseSecureChannelRequest_delete(x::Ptr{UA_CloseSecureChannelRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSecureChannelResponse_clear-Tuple{Ptr{UA_CloseSecureChannelResponse}}","page":"Home","title":"open62541.UA_CloseSecureChannelResponse_clear","text":"UA_CloseSecureChannelResponse_clear\"(x::Ptr{UA_CloseSecureChannelResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_CloseSecureChannelResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSecureChannelResponse_copy-Tuple{UA_CloseSecureChannelResponse, Ptr{UA_CloseSecureChannelResponse}}","page":"Home","title":"open62541.UA_CloseSecureChannelResponse_copy","text":"UA_CloseSecureChannelResponse_copy\"(src::Ptr{UA_CloseSecureChannelResponse}, dst::Ptr{UA_CloseSecureChannelResponse})::UA_STATUSCODE\nUA_CloseSecureChannelResponse_copy\"(src::UA_CloseSecureChannelResponse, dst::Ptr{UA_CloseSecureChannelResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSecureChannelResponse_delete-Tuple{Ptr{UA_CloseSecureChannelResponse}}","page":"Home","title":"open62541.UA_CloseSecureChannelResponse_delete","text":"UA_CloseSecureChannelResponse_delete(x::Ptr{UA_CloseSecureChannelResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSecureChannelResponse_deleteMembers-Tuple{Ptr{UA_CloseSecureChannelResponse}}","page":"Home","title":"open62541.UA_CloseSecureChannelResponse_deleteMembers","text":"UA_CloseSecureChannelResponse_deleteMembers(x::Ptr{UA_CloseSecureChannelResponse})\n\n(deprecated, use UA_CloseSecureChannelResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_CloseSecureChannelResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSecureChannelResponse_init-Tuple{Ptr{UA_CloseSecureChannelResponse}}","page":"Home","title":"open62541.UA_CloseSecureChannelResponse_init","text":"UA_CloseSecureChannelResponse_init\"(x::Ptr{UA_CloseSecureChannelResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSecureChannelResponse_new-Tuple{}","page":"Home","title":"open62541.UA_CloseSecureChannelResponse_new","text":"UA_CloseSecureChannelResponse_new\"()::Ptr{UA_CloseSecureChannelResponse}\n\ncreates and initializes a UA_CloseSecureChannelResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_CloseSecureChannelResponse_delete(x::Ptr{UA_CloseSecureChannelResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSessionRequest_clear-Tuple{Ptr{UA_CloseSessionRequest}}","page":"Home","title":"open62541.UA_CloseSessionRequest_clear","text":"UA_CloseSessionRequest_clear\"(x::Ptr{UA_CloseSessionRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_CloseSessionRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSessionRequest_copy-Tuple{UA_CloseSessionRequest, Ptr{UA_CloseSessionRequest}}","page":"Home","title":"open62541.UA_CloseSessionRequest_copy","text":"UA_CloseSessionRequest_copy\"(src::Ptr{UA_CloseSessionRequest}, dst::Ptr{UA_CloseSessionRequest})::UA_STATUSCODE\nUA_CloseSessionRequest_copy\"(src::UA_CloseSessionRequest, dst::Ptr{UA_CloseSessionRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSessionRequest_delete-Tuple{Ptr{UA_CloseSessionRequest}}","page":"Home","title":"open62541.UA_CloseSessionRequest_delete","text":"UA_CloseSessionRequest_delete(x::Ptr{UA_CloseSessionRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSessionRequest_deleteMembers-Tuple{Ptr{UA_CloseSessionRequest}}","page":"Home","title":"open62541.UA_CloseSessionRequest_deleteMembers","text":"UA_CloseSessionRequest_deleteMembers(x::Ptr{UA_CloseSessionRequest})\n\n(deprecated, use UA_CloseSessionRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_CloseSessionRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSessionRequest_init-Tuple{Ptr{UA_CloseSessionRequest}}","page":"Home","title":"open62541.UA_CloseSessionRequest_init","text":"UA_CloseSessionRequest_init\"(x::Ptr{UA_CloseSessionRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSessionRequest_new-Tuple{}","page":"Home","title":"open62541.UA_CloseSessionRequest_new","text":"UA_CloseSessionRequest_new\"()::Ptr{UA_CloseSessionRequest}\n\ncreates and initializes a UA_CloseSessionRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_CloseSessionRequest_delete(x::Ptr{UA_CloseSessionRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSessionResponse_clear-Tuple{Ptr{UA_CloseSessionResponse}}","page":"Home","title":"open62541.UA_CloseSessionResponse_clear","text":"UA_CloseSessionResponse_clear\"(x::Ptr{UA_CloseSessionResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_CloseSessionResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSessionResponse_copy-Tuple{UA_CloseSessionResponse, Ptr{UA_CloseSessionResponse}}","page":"Home","title":"open62541.UA_CloseSessionResponse_copy","text":"UA_CloseSessionResponse_copy\"(src::Ptr{UA_CloseSessionResponse}, dst::Ptr{UA_CloseSessionResponse})::UA_STATUSCODE\nUA_CloseSessionResponse_copy\"(src::UA_CloseSessionResponse, dst::Ptr{UA_CloseSessionResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSessionResponse_delete-Tuple{Ptr{UA_CloseSessionResponse}}","page":"Home","title":"open62541.UA_CloseSessionResponse_delete","text":"UA_CloseSessionResponse_delete(x::Ptr{UA_CloseSessionResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSessionResponse_deleteMembers-Tuple{Ptr{UA_CloseSessionResponse}}","page":"Home","title":"open62541.UA_CloseSessionResponse_deleteMembers","text":"UA_CloseSessionResponse_deleteMembers(x::Ptr{UA_CloseSessionResponse})\n\n(deprecated, use UA_CloseSessionResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_CloseSessionResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSessionResponse_init-Tuple{Ptr{UA_CloseSessionResponse}}","page":"Home","title":"open62541.UA_CloseSessionResponse_init","text":"UA_CloseSessionResponse_init\"(x::Ptr{UA_CloseSessionResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CloseSessionResponse_new-Tuple{}","page":"Home","title":"open62541.UA_CloseSessionResponse_new","text":"UA_CloseSessionResponse_new\"()::Ptr{UA_CloseSessionResponse}\n\ncreates and initializes a UA_CloseSessionResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_CloseSessionResponse_delete(x::Ptr{UA_CloseSessionResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ComplexNumberType_clear-Tuple{Ptr{UA_ComplexNumberType}}","page":"Home","title":"open62541.UA_ComplexNumberType_clear","text":"UA_ComplexNumberType_clear\"(x::Ptr{UA_ComplexNumberType})\n\ndeletes the dynamically allocated content of the object x and calls UA_ComplexNumberType_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ComplexNumberType_copy-Tuple{UA_ComplexNumberType, Ptr{UA_ComplexNumberType}}","page":"Home","title":"open62541.UA_ComplexNumberType_copy","text":"UA_ComplexNumberType_copy\"(src::Ptr{UA_ComplexNumberType}, dst::Ptr{UA_ComplexNumberType})::UA_STATUSCODE\nUA_ComplexNumberType_copy\"(src::UA_ComplexNumberType, dst::Ptr{UA_ComplexNumberType})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ComplexNumberType_delete-Tuple{Ptr{UA_ComplexNumberType}}","page":"Home","title":"open62541.UA_ComplexNumberType_delete","text":"UA_ComplexNumberType_delete(x::Ptr{UA_ComplexNumberType})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ComplexNumberType_deleteMembers-Tuple{Ptr{UA_ComplexNumberType}}","page":"Home","title":"open62541.UA_ComplexNumberType_deleteMembers","text":"UA_ComplexNumberType_deleteMembers(x::Ptr{UA_ComplexNumberType})\n\n(deprecated, use UA_ComplexNumberType_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ComplexNumberType_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ComplexNumberType_init-Tuple{Ptr{UA_ComplexNumberType}}","page":"Home","title":"open62541.UA_ComplexNumberType_init","text":"UA_ComplexNumberType_init\"(x::Ptr{UA_ComplexNumberType})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ComplexNumberType_new-Tuple{}","page":"Home","title":"open62541.UA_ComplexNumberType_new","text":"UA_ComplexNumberType_new\"()::Ptr{UA_ComplexNumberType}\n\ncreates and initializes a UA_ComplexNumberType object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ComplexNumberType_delete(x::Ptr{UA_ComplexNumberType})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterElementResult_clear-Tuple{Ptr{UA_ContentFilterElementResult}}","page":"Home","title":"open62541.UA_ContentFilterElementResult_clear","text":"UA_ContentFilterElementResult_clear\"(x::Ptr{UA_ContentFilterElementResult})\n\ndeletes the dynamically allocated content of the object x and calls UA_ContentFilterElementResult_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterElementResult_copy-Tuple{UA_ContentFilterElementResult, Ptr{UA_ContentFilterElementResult}}","page":"Home","title":"open62541.UA_ContentFilterElementResult_copy","text":"UA_ContentFilterElementResult_copy\"(src::Ptr{UA_ContentFilterElementResult}, dst::Ptr{UA_ContentFilterElementResult})::UA_STATUSCODE\nUA_ContentFilterElementResult_copy\"(src::UA_ContentFilterElementResult, dst::Ptr{UA_ContentFilterElementResult})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterElementResult_delete-Tuple{Ptr{UA_ContentFilterElementResult}}","page":"Home","title":"open62541.UA_ContentFilterElementResult_delete","text":"UA_ContentFilterElementResult_delete(x::Ptr{UA_ContentFilterElementResult})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterElementResult_deleteMembers-Tuple{Ptr{UA_ContentFilterElementResult}}","page":"Home","title":"open62541.UA_ContentFilterElementResult_deleteMembers","text":"UA_ContentFilterElementResult_deleteMembers(x::Ptr{UA_ContentFilterElementResult})\n\n(deprecated, use UA_ContentFilterElementResult_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ContentFilterElementResult_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterElementResult_init-Tuple{Ptr{UA_ContentFilterElementResult}}","page":"Home","title":"open62541.UA_ContentFilterElementResult_init","text":"UA_ContentFilterElementResult_init\"(x::Ptr{UA_ContentFilterElementResult})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterElementResult_new-Tuple{}","page":"Home","title":"open62541.UA_ContentFilterElementResult_new","text":"UA_ContentFilterElementResult_new\"()::Ptr{UA_ContentFilterElementResult}\n\ncreates and initializes a UA_ContentFilterElementResult object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ContentFilterElementResult_delete(x::Ptr{UA_ContentFilterElementResult})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterElement_clear-Tuple{Ptr{UA_ContentFilterElement}}","page":"Home","title":"open62541.UA_ContentFilterElement_clear","text":"UA_ContentFilterElement_clear\"(x::Ptr{UA_ContentFilterElement})\n\ndeletes the dynamically allocated content of the object x and calls UA_ContentFilterElement_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterElement_copy-Tuple{UA_ContentFilterElement, Ptr{UA_ContentFilterElement}}","page":"Home","title":"open62541.UA_ContentFilterElement_copy","text":"UA_ContentFilterElement_copy\"(src::Ptr{UA_ContentFilterElement}, dst::Ptr{UA_ContentFilterElement})::UA_STATUSCODE\nUA_ContentFilterElement_copy\"(src::UA_ContentFilterElement, dst::Ptr{UA_ContentFilterElement})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterElement_delete-Tuple{Ptr{UA_ContentFilterElement}}","page":"Home","title":"open62541.UA_ContentFilterElement_delete","text":"UA_ContentFilterElement_delete(x::Ptr{UA_ContentFilterElement})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterElement_deleteMembers-Tuple{Ptr{UA_ContentFilterElement}}","page":"Home","title":"open62541.UA_ContentFilterElement_deleteMembers","text":"UA_ContentFilterElement_deleteMembers(x::Ptr{UA_ContentFilterElement})\n\n(deprecated, use UA_ContentFilterElement_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ContentFilterElement_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterElement_init-Tuple{Ptr{UA_ContentFilterElement}}","page":"Home","title":"open62541.UA_ContentFilterElement_init","text":"UA_ContentFilterElement_init\"(x::Ptr{UA_ContentFilterElement})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterElement_new-Tuple{}","page":"Home","title":"open62541.UA_ContentFilterElement_new","text":"UA_ContentFilterElement_new\"()::Ptr{UA_ContentFilterElement}\n\ncreates and initializes a UA_ContentFilterElement object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ContentFilterElement_delete(x::Ptr{UA_ContentFilterElement})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterResult_clear-Tuple{Ptr{UA_ContentFilterResult}}","page":"Home","title":"open62541.UA_ContentFilterResult_clear","text":"UA_ContentFilterResult_clear\"(x::Ptr{UA_ContentFilterResult})\n\ndeletes the dynamically allocated content of the object x and calls UA_ContentFilterResult_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterResult_copy-Tuple{UA_ContentFilterResult, Ptr{UA_ContentFilterResult}}","page":"Home","title":"open62541.UA_ContentFilterResult_copy","text":"UA_ContentFilterResult_copy\"(src::Ptr{UA_ContentFilterResult}, dst::Ptr{UA_ContentFilterResult})::UA_STATUSCODE\nUA_ContentFilterResult_copy\"(src::UA_ContentFilterResult, dst::Ptr{UA_ContentFilterResult})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterResult_delete-Tuple{Ptr{UA_ContentFilterResult}}","page":"Home","title":"open62541.UA_ContentFilterResult_delete","text":"UA_ContentFilterResult_delete(x::Ptr{UA_ContentFilterResult})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterResult_deleteMembers-Tuple{Ptr{UA_ContentFilterResult}}","page":"Home","title":"open62541.UA_ContentFilterResult_deleteMembers","text":"UA_ContentFilterResult_deleteMembers(x::Ptr{UA_ContentFilterResult})\n\n(deprecated, use UA_ContentFilterResult_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ContentFilterResult_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterResult_init-Tuple{Ptr{UA_ContentFilterResult}}","page":"Home","title":"open62541.UA_ContentFilterResult_init","text":"UA_ContentFilterResult_init\"(x::Ptr{UA_ContentFilterResult})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilterResult_new-Tuple{}","page":"Home","title":"open62541.UA_ContentFilterResult_new","text":"UA_ContentFilterResult_new\"()::Ptr{UA_ContentFilterResult}\n\ncreates and initializes a UA_ContentFilterResult object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ContentFilterResult_delete(x::Ptr{UA_ContentFilterResult})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilter_clear-Tuple{Ptr{UA_ContentFilter}}","page":"Home","title":"open62541.UA_ContentFilter_clear","text":"UA_ContentFilter_clear\"(x::Ptr{UA_ContentFilter})\n\ndeletes the dynamically allocated content of the object x and calls UA_ContentFilter_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilter_copy-Tuple{UA_ContentFilter, Ptr{UA_ContentFilter}}","page":"Home","title":"open62541.UA_ContentFilter_copy","text":"UA_ContentFilter_copy\"(src::Ptr{UA_ContentFilter}, dst::Ptr{UA_ContentFilter})::UA_STATUSCODE\nUA_ContentFilter_copy\"(src::UA_ContentFilter, dst::Ptr{UA_ContentFilter})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilter_delete-Tuple{Ptr{UA_ContentFilter}}","page":"Home","title":"open62541.UA_ContentFilter_delete","text":"UA_ContentFilter_delete(x::Ptr{UA_ContentFilter})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilter_deleteMembers-Tuple{Ptr{UA_ContentFilter}}","page":"Home","title":"open62541.UA_ContentFilter_deleteMembers","text":"UA_ContentFilter_deleteMembers(x::Ptr{UA_ContentFilter})\n\n(deprecated, use UA_ContentFilter_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ContentFilter_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilter_init-Tuple{Ptr{UA_ContentFilter}}","page":"Home","title":"open62541.UA_ContentFilter_init","text":"UA_ContentFilter_init\"(x::Ptr{UA_ContentFilter})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ContentFilter_new-Tuple{}","page":"Home","title":"open62541.UA_ContentFilter_new","text":"UA_ContentFilter_new\"()::Ptr{UA_ContentFilter}\n\ncreates and initializes a UA_ContentFilter object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ContentFilter_delete(x::Ptr{UA_ContentFilter})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateMonitoredItemsRequest_clear-Tuple{Ptr{UA_CreateMonitoredItemsRequest}}","page":"Home","title":"open62541.UA_CreateMonitoredItemsRequest_clear","text":"UA_CreateMonitoredItemsRequest_clear\"(x::Ptr{UA_CreateMonitoredItemsRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_CreateMonitoredItemsRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateMonitoredItemsRequest_copy-Tuple{UA_CreateMonitoredItemsRequest, Ptr{UA_CreateMonitoredItemsRequest}}","page":"Home","title":"open62541.UA_CreateMonitoredItemsRequest_copy","text":"UA_CreateMonitoredItemsRequest_copy\"(src::Ptr{UA_CreateMonitoredItemsRequest}, dst::Ptr{UA_CreateMonitoredItemsRequest})::UA_STATUSCODE\nUA_CreateMonitoredItemsRequest_copy\"(src::UA_CreateMonitoredItemsRequest, dst::Ptr{UA_CreateMonitoredItemsRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateMonitoredItemsRequest_delete-Tuple{Ptr{UA_CreateMonitoredItemsRequest}}","page":"Home","title":"open62541.UA_CreateMonitoredItemsRequest_delete","text":"UA_CreateMonitoredItemsRequest_delete(x::Ptr{UA_CreateMonitoredItemsRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateMonitoredItemsRequest_deleteMembers-Tuple{Ptr{UA_CreateMonitoredItemsRequest}}","page":"Home","title":"open62541.UA_CreateMonitoredItemsRequest_deleteMembers","text":"UA_CreateMonitoredItemsRequest_deleteMembers(x::Ptr{UA_CreateMonitoredItemsRequest})\n\n(deprecated, use UA_CreateMonitoredItemsRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_CreateMonitoredItemsRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateMonitoredItemsRequest_init-Tuple{Ptr{UA_CreateMonitoredItemsRequest}}","page":"Home","title":"open62541.UA_CreateMonitoredItemsRequest_init","text":"UA_CreateMonitoredItemsRequest_init\"(x::Ptr{UA_CreateMonitoredItemsRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateMonitoredItemsRequest_new-Tuple{}","page":"Home","title":"open62541.UA_CreateMonitoredItemsRequest_new","text":"UA_CreateMonitoredItemsRequest_new\"()::Ptr{UA_CreateMonitoredItemsRequest}\n\ncreates and initializes a UA_CreateMonitoredItemsRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_CreateMonitoredItemsRequest_delete(x::Ptr{UA_CreateMonitoredItemsRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateMonitoredItemsResponse_clear-Tuple{Ptr{UA_CreateMonitoredItemsResponse}}","page":"Home","title":"open62541.UA_CreateMonitoredItemsResponse_clear","text":"UA_CreateMonitoredItemsResponse_clear\"(x::Ptr{UA_CreateMonitoredItemsResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_CreateMonitoredItemsResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateMonitoredItemsResponse_copy-Tuple{UA_CreateMonitoredItemsResponse, Ptr{UA_CreateMonitoredItemsResponse}}","page":"Home","title":"open62541.UA_CreateMonitoredItemsResponse_copy","text":"UA_CreateMonitoredItemsResponse_copy\"(src::Ptr{UA_CreateMonitoredItemsResponse}, dst::Ptr{UA_CreateMonitoredItemsResponse})::UA_STATUSCODE\nUA_CreateMonitoredItemsResponse_copy\"(src::UA_CreateMonitoredItemsResponse, dst::Ptr{UA_CreateMonitoredItemsResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateMonitoredItemsResponse_delete-Tuple{Ptr{UA_CreateMonitoredItemsResponse}}","page":"Home","title":"open62541.UA_CreateMonitoredItemsResponse_delete","text":"UA_CreateMonitoredItemsResponse_delete(x::Ptr{UA_CreateMonitoredItemsResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateMonitoredItemsResponse_deleteMembers-Tuple{Ptr{UA_CreateMonitoredItemsResponse}}","page":"Home","title":"open62541.UA_CreateMonitoredItemsResponse_deleteMembers","text":"UA_CreateMonitoredItemsResponse_deleteMembers(x::Ptr{UA_CreateMonitoredItemsResponse})\n\n(deprecated, use UA_CreateMonitoredItemsResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_CreateMonitoredItemsResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateMonitoredItemsResponse_init-Tuple{Ptr{UA_CreateMonitoredItemsResponse}}","page":"Home","title":"open62541.UA_CreateMonitoredItemsResponse_init","text":"UA_CreateMonitoredItemsResponse_init\"(x::Ptr{UA_CreateMonitoredItemsResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateMonitoredItemsResponse_new-Tuple{}","page":"Home","title":"open62541.UA_CreateMonitoredItemsResponse_new","text":"UA_CreateMonitoredItemsResponse_new\"()::Ptr{UA_CreateMonitoredItemsResponse}\n\ncreates and initializes a UA_CreateMonitoredItemsResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_CreateMonitoredItemsResponse_delete(x::Ptr{UA_CreateMonitoredItemsResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSessionRequest_clear-Tuple{Ptr{UA_CreateSessionRequest}}","page":"Home","title":"open62541.UA_CreateSessionRequest_clear","text":"UA_CreateSessionRequest_clear\"(x::Ptr{UA_CreateSessionRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_CreateSessionRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSessionRequest_copy-Tuple{UA_CreateSessionRequest, Ptr{UA_CreateSessionRequest}}","page":"Home","title":"open62541.UA_CreateSessionRequest_copy","text":"UA_CreateSessionRequest_copy\"(src::Ptr{UA_CreateSessionRequest}, dst::Ptr{UA_CreateSessionRequest})::UA_STATUSCODE\nUA_CreateSessionRequest_copy\"(src::UA_CreateSessionRequest, dst::Ptr{UA_CreateSessionRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSessionRequest_delete-Tuple{Ptr{UA_CreateSessionRequest}}","page":"Home","title":"open62541.UA_CreateSessionRequest_delete","text":"UA_CreateSessionRequest_delete(x::Ptr{UA_CreateSessionRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSessionRequest_deleteMembers-Tuple{Ptr{UA_CreateSessionRequest}}","page":"Home","title":"open62541.UA_CreateSessionRequest_deleteMembers","text":"UA_CreateSessionRequest_deleteMembers(x::Ptr{UA_CreateSessionRequest})\n\n(deprecated, use UA_CreateSessionRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_CreateSessionRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSessionRequest_init-Tuple{Ptr{UA_CreateSessionRequest}}","page":"Home","title":"open62541.UA_CreateSessionRequest_init","text":"UA_CreateSessionRequest_init\"(x::Ptr{UA_CreateSessionRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSessionRequest_new-Tuple{}","page":"Home","title":"open62541.UA_CreateSessionRequest_new","text":"UA_CreateSessionRequest_new\"()::Ptr{UA_CreateSessionRequest}\n\ncreates and initializes a UA_CreateSessionRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_CreateSessionRequest_delete(x::Ptr{UA_CreateSessionRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSessionResponse_clear-Tuple{Ptr{UA_CreateSessionResponse}}","page":"Home","title":"open62541.UA_CreateSessionResponse_clear","text":"UA_CreateSessionResponse_clear\"(x::Ptr{UA_CreateSessionResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_CreateSessionResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSessionResponse_copy-Tuple{UA_CreateSessionResponse, Ptr{UA_CreateSessionResponse}}","page":"Home","title":"open62541.UA_CreateSessionResponse_copy","text":"UA_CreateSessionResponse_copy\"(src::Ptr{UA_CreateSessionResponse}, dst::Ptr{UA_CreateSessionResponse})::UA_STATUSCODE\nUA_CreateSessionResponse_copy\"(src::UA_CreateSessionResponse, dst::Ptr{UA_CreateSessionResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSessionResponse_delete-Tuple{Ptr{UA_CreateSessionResponse}}","page":"Home","title":"open62541.UA_CreateSessionResponse_delete","text":"UA_CreateSessionResponse_delete(x::Ptr{UA_CreateSessionResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSessionResponse_deleteMembers-Tuple{Ptr{UA_CreateSessionResponse}}","page":"Home","title":"open62541.UA_CreateSessionResponse_deleteMembers","text":"UA_CreateSessionResponse_deleteMembers(x::Ptr{UA_CreateSessionResponse})\n\n(deprecated, use UA_CreateSessionResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_CreateSessionResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSessionResponse_init-Tuple{Ptr{UA_CreateSessionResponse}}","page":"Home","title":"open62541.UA_CreateSessionResponse_init","text":"UA_CreateSessionResponse_init\"(x::Ptr{UA_CreateSessionResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSessionResponse_new-Tuple{}","page":"Home","title":"open62541.UA_CreateSessionResponse_new","text":"UA_CreateSessionResponse_new\"()::Ptr{UA_CreateSessionResponse}\n\ncreates and initializes a UA_CreateSessionResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_CreateSessionResponse_delete(x::Ptr{UA_CreateSessionResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSubscriptionRequest_clear-Tuple{Ptr{UA_CreateSubscriptionRequest}}","page":"Home","title":"open62541.UA_CreateSubscriptionRequest_clear","text":"UA_CreateSubscriptionRequest_clear\"(x::Ptr{UA_CreateSubscriptionRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_CreateSubscriptionRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSubscriptionRequest_copy-Tuple{UA_CreateSubscriptionRequest, Ptr{UA_CreateSubscriptionRequest}}","page":"Home","title":"open62541.UA_CreateSubscriptionRequest_copy","text":"UA_CreateSubscriptionRequest_copy\"(src::Ptr{UA_CreateSubscriptionRequest}, dst::Ptr{UA_CreateSubscriptionRequest})::UA_STATUSCODE\nUA_CreateSubscriptionRequest_copy\"(src::UA_CreateSubscriptionRequest, dst::Ptr{UA_CreateSubscriptionRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSubscriptionRequest_delete-Tuple{Ptr{UA_CreateSubscriptionRequest}}","page":"Home","title":"open62541.UA_CreateSubscriptionRequest_delete","text":"UA_CreateSubscriptionRequest_delete(x::Ptr{UA_CreateSubscriptionRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSubscriptionRequest_deleteMembers-Tuple{Ptr{UA_CreateSubscriptionRequest}}","page":"Home","title":"open62541.UA_CreateSubscriptionRequest_deleteMembers","text":"UA_CreateSubscriptionRequest_deleteMembers(x::Ptr{UA_CreateSubscriptionRequest})\n\n(deprecated, use UA_CreateSubscriptionRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_CreateSubscriptionRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSubscriptionRequest_init-Tuple{Ptr{UA_CreateSubscriptionRequest}}","page":"Home","title":"open62541.UA_CreateSubscriptionRequest_init","text":"UA_CreateSubscriptionRequest_init\"(x::Ptr{UA_CreateSubscriptionRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSubscriptionRequest_new-Tuple{}","page":"Home","title":"open62541.UA_CreateSubscriptionRequest_new","text":"UA_CreateSubscriptionRequest_new\"()::Ptr{UA_CreateSubscriptionRequest}\n\ncreates and initializes a UA_CreateSubscriptionRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_CreateSubscriptionRequest_delete(x::Ptr{UA_CreateSubscriptionRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSubscriptionResponse_clear-Tuple{Ptr{UA_CreateSubscriptionResponse}}","page":"Home","title":"open62541.UA_CreateSubscriptionResponse_clear","text":"UA_CreateSubscriptionResponse_clear\"(x::Ptr{UA_CreateSubscriptionResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_CreateSubscriptionResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSubscriptionResponse_copy-Tuple{UA_CreateSubscriptionResponse, Ptr{UA_CreateSubscriptionResponse}}","page":"Home","title":"open62541.UA_CreateSubscriptionResponse_copy","text":"UA_CreateSubscriptionResponse_copy\"(src::Ptr{UA_CreateSubscriptionResponse}, dst::Ptr{UA_CreateSubscriptionResponse})::UA_STATUSCODE\nUA_CreateSubscriptionResponse_copy\"(src::UA_CreateSubscriptionResponse, dst::Ptr{UA_CreateSubscriptionResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSubscriptionResponse_delete-Tuple{Ptr{UA_CreateSubscriptionResponse}}","page":"Home","title":"open62541.UA_CreateSubscriptionResponse_delete","text":"UA_CreateSubscriptionResponse_delete(x::Ptr{UA_CreateSubscriptionResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSubscriptionResponse_deleteMembers-Tuple{Ptr{UA_CreateSubscriptionResponse}}","page":"Home","title":"open62541.UA_CreateSubscriptionResponse_deleteMembers","text":"UA_CreateSubscriptionResponse_deleteMembers(x::Ptr{UA_CreateSubscriptionResponse})\n\n(deprecated, use UA_CreateSubscriptionResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_CreateSubscriptionResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSubscriptionResponse_init-Tuple{Ptr{UA_CreateSubscriptionResponse}}","page":"Home","title":"open62541.UA_CreateSubscriptionResponse_init","text":"UA_CreateSubscriptionResponse_init\"(x::Ptr{UA_CreateSubscriptionResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_CreateSubscriptionResponse_new-Tuple{}","page":"Home","title":"open62541.UA_CreateSubscriptionResponse_new","text":"UA_CreateSubscriptionResponse_new\"()::Ptr{UA_CreateSubscriptionResponse}\n\ncreates and initializes a UA_CreateSubscriptionResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_CreateSubscriptionResponse_delete(x::Ptr{UA_CreateSubscriptionResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeFilter_clear-Tuple{Ptr{UA_DataChangeFilter}}","page":"Home","title":"open62541.UA_DataChangeFilter_clear","text":"UA_DataChangeFilter_clear\"(x::Ptr{UA_DataChangeFilter})\n\ndeletes the dynamically allocated content of the object x and calls UA_DataChangeFilter_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeFilter_copy-Tuple{UA_DataChangeFilter, Ptr{UA_DataChangeFilter}}","page":"Home","title":"open62541.UA_DataChangeFilter_copy","text":"UA_DataChangeFilter_copy\"(src::Ptr{UA_DataChangeFilter}, dst::Ptr{UA_DataChangeFilter})::UA_STATUSCODE\nUA_DataChangeFilter_copy\"(src::UA_DataChangeFilter, dst::Ptr{UA_DataChangeFilter})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeFilter_delete-Tuple{Ptr{UA_DataChangeFilter}}","page":"Home","title":"open62541.UA_DataChangeFilter_delete","text":"UA_DataChangeFilter_delete(x::Ptr{UA_DataChangeFilter})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeFilter_deleteMembers-Tuple{Ptr{UA_DataChangeFilter}}","page":"Home","title":"open62541.UA_DataChangeFilter_deleteMembers","text":"UA_DataChangeFilter_deleteMembers(x::Ptr{UA_DataChangeFilter})\n\n(deprecated, use UA_DataChangeFilter_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DataChangeFilter_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeFilter_init-Tuple{Ptr{UA_DataChangeFilter}}","page":"Home","title":"open62541.UA_DataChangeFilter_init","text":"UA_DataChangeFilter_init\"(x::Ptr{UA_DataChangeFilter})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeFilter_new-Tuple{}","page":"Home","title":"open62541.UA_DataChangeFilter_new","text":"UA_DataChangeFilter_new\"()::Ptr{UA_DataChangeFilter}\n\ncreates and initializes a UA_DataChangeFilter object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DataChangeFilter_delete(x::Ptr{UA_DataChangeFilter})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeNotification_clear-Tuple{Ptr{UA_DataChangeNotification}}","page":"Home","title":"open62541.UA_DataChangeNotification_clear","text":"UA_DataChangeNotification_clear\"(x::Ptr{UA_DataChangeNotification})\n\ndeletes the dynamically allocated content of the object x and calls UA_DataChangeNotification_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeNotification_copy-Tuple{UA_DataChangeNotification, Ptr{UA_DataChangeNotification}}","page":"Home","title":"open62541.UA_DataChangeNotification_copy","text":"UA_DataChangeNotification_copy\"(src::Ptr{UA_DataChangeNotification}, dst::Ptr{UA_DataChangeNotification})::UA_STATUSCODE\nUA_DataChangeNotification_copy\"(src::UA_DataChangeNotification, dst::Ptr{UA_DataChangeNotification})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeNotification_delete-Tuple{Ptr{UA_DataChangeNotification}}","page":"Home","title":"open62541.UA_DataChangeNotification_delete","text":"UA_DataChangeNotification_delete(x::Ptr{UA_DataChangeNotification})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeNotification_deleteMembers-Tuple{Ptr{UA_DataChangeNotification}}","page":"Home","title":"open62541.UA_DataChangeNotification_deleteMembers","text":"UA_DataChangeNotification_deleteMembers(x::Ptr{UA_DataChangeNotification})\n\n(deprecated, use UA_DataChangeNotification_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DataChangeNotification_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeNotification_init-Tuple{Ptr{UA_DataChangeNotification}}","page":"Home","title":"open62541.UA_DataChangeNotification_init","text":"UA_DataChangeNotification_init\"(x::Ptr{UA_DataChangeNotification})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeNotification_new-Tuple{}","page":"Home","title":"open62541.UA_DataChangeNotification_new","text":"UA_DataChangeNotification_new\"()::Ptr{UA_DataChangeNotification}\n\ncreates and initializes a UA_DataChangeNotification object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DataChangeNotification_delete(x::Ptr{UA_DataChangeNotification})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeTrigger_clear-Tuple{Ptr{UA_DataChangeTrigger}}","page":"Home","title":"open62541.UA_DataChangeTrigger_clear","text":"UA_DataChangeTrigger_clear\"(x::Ptr{UA_DataChangeTrigger})\n\ndeletes the dynamically allocated content of the object x and calls UA_DataChangeTrigger_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeTrigger_copy-Tuple{UA_DataChangeTrigger, Ptr{UA_DataChangeTrigger}}","page":"Home","title":"open62541.UA_DataChangeTrigger_copy","text":"UA_DataChangeTrigger_copy\"(src::Ptr{UA_DataChangeTrigger}, dst::Ptr{UA_DataChangeTrigger})::UA_STATUSCODE\nUA_DataChangeTrigger_copy\"(src::UA_DataChangeTrigger, dst::Ptr{UA_DataChangeTrigger})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeTrigger_delete-Tuple{Ptr{UA_DataChangeTrigger}}","page":"Home","title":"open62541.UA_DataChangeTrigger_delete","text":"UA_DataChangeTrigger_delete(x::Ptr{UA_DataChangeTrigger})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeTrigger_deleteMembers-Tuple{Ptr{UA_DataChangeTrigger}}","page":"Home","title":"open62541.UA_DataChangeTrigger_deleteMembers","text":"UA_DataChangeTrigger_deleteMembers(x::Ptr{UA_DataChangeTrigger})\n\n(deprecated, use UA_DataChangeTrigger_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DataChangeTrigger_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeTrigger_init-Tuple{Ptr{UA_DataChangeTrigger}}","page":"Home","title":"open62541.UA_DataChangeTrigger_init","text":"UA_DataChangeTrigger_init\"(x::Ptr{UA_DataChangeTrigger})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataChangeTrigger_new-Tuple{}","page":"Home","title":"open62541.UA_DataChangeTrigger_new","text":"UA_DataChangeTrigger_new\"()::Ptr{UA_DataChangeTrigger}\n\ncreates and initializes a UA_DataChangeTrigger object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DataChangeTrigger_delete(x::Ptr{UA_DataChangeTrigger})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataSourceCallback_read_generate-Tuple{Function}","page":"Home","title":"open62541.UA_DataSourceCallback_read_generate","text":"UA_DataSourceCallback_read_generate(f::Function)\n\ncreates a function pointer for the read field of a UA_DataSource object.\n\nf must be a Julia function with the following signature:\n\n        nodeid::Ptr{Cvoid}, nodecontext::Ptr{Cvoid}, includesourcetimestamp::UA_Boolean, \n        range::Ptr{UA_NumericRange}, data::Ptr{UA_DataValue})::UA_StatusCode```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataSourceCallback_write_generate-Tuple{Function}","page":"Home","title":"open62541.UA_DataSourceCallback_write_generate","text":"UA_DataSourceCallback_write_generate(f::Function)\n\ncreates a function pointer for the write field of a UA_DataSource object.\n\nf must be a Julia function with the following signature:\n\n        nodeid::Ptr{Cvoid}, nodecontext::Ptr{Cvoid}, range::Ptr{UA_NumericRange}, \n        data::Ptr{UA_DataValue})::UA_StatusCode```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataTypeAttributes_clear-Tuple{Ptr{UA_DataTypeAttributes}}","page":"Home","title":"open62541.UA_DataTypeAttributes_clear","text":"UA_DataTypeAttributes_clear\"(x::Ptr{UA_DataTypeAttributes})\n\ndeletes the dynamically allocated content of the object x and calls UA_DataTypeAttributes_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataTypeAttributes_copy-Tuple{UA_DataTypeAttributes, Ptr{UA_DataTypeAttributes}}","page":"Home","title":"open62541.UA_DataTypeAttributes_copy","text":"UA_DataTypeAttributes_copy\"(src::Ptr{UA_DataTypeAttributes}, dst::Ptr{UA_DataTypeAttributes})::UA_STATUSCODE\nUA_DataTypeAttributes_copy\"(src::UA_DataTypeAttributes, dst::Ptr{UA_DataTypeAttributes})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataTypeAttributes_delete-Tuple{Ptr{UA_DataTypeAttributes}}","page":"Home","title":"open62541.UA_DataTypeAttributes_delete","text":"UA_DataTypeAttributes_delete(x::Ptr{UA_DataTypeAttributes})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataTypeAttributes_deleteMembers-Tuple{Ptr{UA_DataTypeAttributes}}","page":"Home","title":"open62541.UA_DataTypeAttributes_deleteMembers","text":"UA_DataTypeAttributes_deleteMembers(x::Ptr{UA_DataTypeAttributes})\n\n(deprecated, use UA_DataTypeAttributes_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DataTypeAttributes_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataTypeAttributes_generate-Tuple{}","page":"Home","title":"open62541.UA_DataTypeAttributes_generate","text":"UA_DataTypeAttributes_generate(; displayname::AbstractString,\n    description::AbstractString, localization::AbstractString = \"en-US\",\n    writemask::Union{Nothing, UInt32} = nothing,\n    userwritemask::Union{Nothing, UInt32} = nothing,\n    isabstract::Union{Nothing, Bool} = nothing)::Ptr{UA_DataTypeAttributes}\n\ngenerates a UA_DataTypeAttributes object. Memory for the object is allocated by C and needs to be cleaned up by calling UA_DataTypeAttributes_delete(x) after usage.\n\nFor keywords given as nothing, the respective default value is used, see UA_DataTypeAttributes_default[]\n\nSee also UA_WRITEMASK and UA_USERWRITEMASK for information on how to generate the respective keyword inputs.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataTypeAttributes_init-Tuple{Ptr{UA_DataTypeAttributes}}","page":"Home","title":"open62541.UA_DataTypeAttributes_init","text":"UA_DataTypeAttributes_init\"(x::Ptr{UA_DataTypeAttributes})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataTypeAttributes_new-Tuple{}","page":"Home","title":"open62541.UA_DataTypeAttributes_new","text":"UA_DataTypeAttributes_new\"()::Ptr{UA_DataTypeAttributes}\n\ncreates and initializes a UA_DataTypeAttributes object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DataTypeAttributes_delete(x::Ptr{UA_DataTypeAttributes})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataValue_clear-Tuple{Ptr{UA_DataValue}}","page":"Home","title":"open62541.UA_DataValue_clear","text":"UA_DataValue_clear\"(x::Ptr{UA_DataValue})\n\ndeletes the dynamically allocated content of the object x and calls UA_DataValue_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataValue_copy-Tuple{UA_DataValue, Ptr{UA_DataValue}}","page":"Home","title":"open62541.UA_DataValue_copy","text":"UA_DataValue_copy\"(src::Ptr{UA_DataValue}, dst::Ptr{UA_DataValue})::UA_STATUSCODE\nUA_DataValue_copy\"(src::UA_DataValue, dst::Ptr{UA_DataValue})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataValue_delete-Tuple{Ptr{UA_DataValue}}","page":"Home","title":"open62541.UA_DataValue_delete","text":"UA_DataValue_delete(x::Ptr{UA_DataValue})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataValue_deleteMembers-Tuple{Ptr{UA_DataValue}}","page":"Home","title":"open62541.UA_DataValue_deleteMembers","text":"UA_DataValue_deleteMembers(x::Ptr{UA_DataValue})\n\n(deprecated, use UA_DataValue_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DataValue_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataValue_init-Tuple{Ptr{UA_DataValue}}","page":"Home","title":"open62541.UA_DataValue_init","text":"UA_DataValue_init\"(x::Ptr{UA_DataValue})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DataValue_new-Tuple{}","page":"Home","title":"open62541.UA_DataValue_new","text":"UA_DataValue_new\"()::Ptr{UA_DataValue}\n\ncreates and initializes a UA_DataValue object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DataValue_delete(x::Ptr{UA_DataValue})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DateTime_clear-Tuple{Ptr{Int64}}","page":"Home","title":"open62541.UA_DateTime_clear","text":"Int64_clear\"(x::Ptr{Int64})\n\ndeletes the dynamically allocated content of the object x and calls Int64_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DateTime_copy-Tuple{Int64, Ptr{Int64}}","page":"Home","title":"open62541.UA_DateTime_copy","text":"Int64_copy\"(src::Ptr{Int64}, dst::Ptr{Int64})::UA_STATUSCODE\nInt64_copy\"(src::Int64, dst::Ptr{Int64})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DateTime_delete-Tuple{Ptr{Int64}}","page":"Home","title":"open62541.UA_DateTime_delete","text":"Int64_delete(x::Ptr{Int64})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DateTime_deleteMembers-Tuple{Ptr{Int64}}","page":"Home","title":"open62541.UA_DateTime_deleteMembers","text":"Int64_deleteMembers(x::Ptr{Int64})\n\n(deprecated, use Int64_clear(x) instead) deletes the dynamically allocated content of the object x and calls Int64_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DateTime_init-Tuple{Ptr{Int64}}","page":"Home","title":"open62541.UA_DateTime_init","text":"Int64_init\"(x::Ptr{Int64})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DateTime_new-Tuple{}","page":"Home","title":"open62541.UA_DateTime_new","text":"Int64_new\"()::Ptr{Int64}\n\ncreates and initializes a Int64 object whose memory is allocated by C. After use, it needs to be  cleaned up with Int64_delete(x::Ptr{Int64})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DateTime_now-Tuple{}","page":"Home","title":"open62541.UA_DateTime_now","text":"UA_STRING(chars)\n\n[UASTRING](@ref) returns a string pointing to the original char-array. [UASTRINGALLOC](@ref) is shorthand for [UAString_fromChars](@ref) and makes a copy of the char-array.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeadbandType_clear-Tuple{Ptr{UA_DeadbandType}}","page":"Home","title":"open62541.UA_DeadbandType_clear","text":"UA_DeadbandType_clear\"(x::Ptr{UA_DeadbandType})\n\ndeletes the dynamically allocated content of the object x and calls UA_DeadbandType_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeadbandType_copy-Tuple{UA_DeadbandType, Ptr{UA_DeadbandType}}","page":"Home","title":"open62541.UA_DeadbandType_copy","text":"UA_DeadbandType_copy\"(src::Ptr{UA_DeadbandType}, dst::Ptr{UA_DeadbandType})::UA_STATUSCODE\nUA_DeadbandType_copy\"(src::UA_DeadbandType, dst::Ptr{UA_DeadbandType})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeadbandType_delete-Tuple{Ptr{UA_DeadbandType}}","page":"Home","title":"open62541.UA_DeadbandType_delete","text":"UA_DeadbandType_delete(x::Ptr{UA_DeadbandType})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeadbandType_deleteMembers-Tuple{Ptr{UA_DeadbandType}}","page":"Home","title":"open62541.UA_DeadbandType_deleteMembers","text":"UA_DeadbandType_deleteMembers(x::Ptr{UA_DeadbandType})\n\n(deprecated, use UA_DeadbandType_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DeadbandType_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeadbandType_init-Tuple{Ptr{UA_DeadbandType}}","page":"Home","title":"open62541.UA_DeadbandType_init","text":"UA_DeadbandType_init\"(x::Ptr{UA_DeadbandType})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeadbandType_new-Tuple{}","page":"Home","title":"open62541.UA_DeadbandType_new","text":"UA_DeadbandType_new\"()::Ptr{UA_DeadbandType}\n\ncreates and initializes a UA_DeadbandType object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DeadbandType_delete(x::Ptr{UA_DeadbandType})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteMonitoredItemsRequest_clear-Tuple{Ptr{UA_DeleteMonitoredItemsRequest}}","page":"Home","title":"open62541.UA_DeleteMonitoredItemsRequest_clear","text":"UA_DeleteMonitoredItemsRequest_clear\"(x::Ptr{UA_DeleteMonitoredItemsRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_DeleteMonitoredItemsRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteMonitoredItemsRequest_copy-Tuple{UA_DeleteMonitoredItemsRequest, Ptr{UA_DeleteMonitoredItemsRequest}}","page":"Home","title":"open62541.UA_DeleteMonitoredItemsRequest_copy","text":"UA_DeleteMonitoredItemsRequest_copy\"(src::Ptr{UA_DeleteMonitoredItemsRequest}, dst::Ptr{UA_DeleteMonitoredItemsRequest})::UA_STATUSCODE\nUA_DeleteMonitoredItemsRequest_copy\"(src::UA_DeleteMonitoredItemsRequest, dst::Ptr{UA_DeleteMonitoredItemsRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteMonitoredItemsRequest_delete-Tuple{Ptr{UA_DeleteMonitoredItemsRequest}}","page":"Home","title":"open62541.UA_DeleteMonitoredItemsRequest_delete","text":"UA_DeleteMonitoredItemsRequest_delete(x::Ptr{UA_DeleteMonitoredItemsRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteMonitoredItemsRequest_deleteMembers-Tuple{Ptr{UA_DeleteMonitoredItemsRequest}}","page":"Home","title":"open62541.UA_DeleteMonitoredItemsRequest_deleteMembers","text":"UA_DeleteMonitoredItemsRequest_deleteMembers(x::Ptr{UA_DeleteMonitoredItemsRequest})\n\n(deprecated, use UA_DeleteMonitoredItemsRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DeleteMonitoredItemsRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteMonitoredItemsRequest_init-Tuple{Ptr{UA_DeleteMonitoredItemsRequest}}","page":"Home","title":"open62541.UA_DeleteMonitoredItemsRequest_init","text":"UA_DeleteMonitoredItemsRequest_init\"(x::Ptr{UA_DeleteMonitoredItemsRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteMonitoredItemsRequest_new-Tuple{}","page":"Home","title":"open62541.UA_DeleteMonitoredItemsRequest_new","text":"UA_DeleteMonitoredItemsRequest_new\"()::Ptr{UA_DeleteMonitoredItemsRequest}\n\ncreates and initializes a UA_DeleteMonitoredItemsRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DeleteMonitoredItemsRequest_delete(x::Ptr{UA_DeleteMonitoredItemsRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteMonitoredItemsResponse_clear-Tuple{Ptr{UA_DeleteMonitoredItemsResponse}}","page":"Home","title":"open62541.UA_DeleteMonitoredItemsResponse_clear","text":"UA_DeleteMonitoredItemsResponse_clear\"(x::Ptr{UA_DeleteMonitoredItemsResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_DeleteMonitoredItemsResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteMonitoredItemsResponse_copy-Tuple{UA_DeleteMonitoredItemsResponse, Ptr{UA_DeleteMonitoredItemsResponse}}","page":"Home","title":"open62541.UA_DeleteMonitoredItemsResponse_copy","text":"UA_DeleteMonitoredItemsResponse_copy\"(src::Ptr{UA_DeleteMonitoredItemsResponse}, dst::Ptr{UA_DeleteMonitoredItemsResponse})::UA_STATUSCODE\nUA_DeleteMonitoredItemsResponse_copy\"(src::UA_DeleteMonitoredItemsResponse, dst::Ptr{UA_DeleteMonitoredItemsResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteMonitoredItemsResponse_delete-Tuple{Ptr{UA_DeleteMonitoredItemsResponse}}","page":"Home","title":"open62541.UA_DeleteMonitoredItemsResponse_delete","text":"UA_DeleteMonitoredItemsResponse_delete(x::Ptr{UA_DeleteMonitoredItemsResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteMonitoredItemsResponse_deleteMembers-Tuple{Ptr{UA_DeleteMonitoredItemsResponse}}","page":"Home","title":"open62541.UA_DeleteMonitoredItemsResponse_deleteMembers","text":"UA_DeleteMonitoredItemsResponse_deleteMembers(x::Ptr{UA_DeleteMonitoredItemsResponse})\n\n(deprecated, use UA_DeleteMonitoredItemsResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DeleteMonitoredItemsResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteMonitoredItemsResponse_init-Tuple{Ptr{UA_DeleteMonitoredItemsResponse}}","page":"Home","title":"open62541.UA_DeleteMonitoredItemsResponse_init","text":"UA_DeleteMonitoredItemsResponse_init\"(x::Ptr{UA_DeleteMonitoredItemsResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteMonitoredItemsResponse_new-Tuple{}","page":"Home","title":"open62541.UA_DeleteMonitoredItemsResponse_new","text":"UA_DeleteMonitoredItemsResponse_new\"()::Ptr{UA_DeleteMonitoredItemsResponse}\n\ncreates and initializes a UA_DeleteMonitoredItemsResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DeleteMonitoredItemsResponse_delete(x::Ptr{UA_DeleteMonitoredItemsResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesItem_clear-Tuple{Ptr{UA_DeleteNodesItem}}","page":"Home","title":"open62541.UA_DeleteNodesItem_clear","text":"UA_DeleteNodesItem_clear\"(x::Ptr{UA_DeleteNodesItem})\n\ndeletes the dynamically allocated content of the object x and calls UA_DeleteNodesItem_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesItem_copy-Tuple{UA_DeleteNodesItem, Ptr{UA_DeleteNodesItem}}","page":"Home","title":"open62541.UA_DeleteNodesItem_copy","text":"UA_DeleteNodesItem_copy\"(src::Ptr{UA_DeleteNodesItem}, dst::Ptr{UA_DeleteNodesItem})::UA_STATUSCODE\nUA_DeleteNodesItem_copy\"(src::UA_DeleteNodesItem, dst::Ptr{UA_DeleteNodesItem})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesItem_delete-Tuple{Ptr{UA_DeleteNodesItem}}","page":"Home","title":"open62541.UA_DeleteNodesItem_delete","text":"UA_DeleteNodesItem_delete(x::Ptr{UA_DeleteNodesItem})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesItem_deleteMembers-Tuple{Ptr{UA_DeleteNodesItem}}","page":"Home","title":"open62541.UA_DeleteNodesItem_deleteMembers","text":"UA_DeleteNodesItem_deleteMembers(x::Ptr{UA_DeleteNodesItem})\n\n(deprecated, use UA_DeleteNodesItem_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DeleteNodesItem_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesItem_init-Tuple{Ptr{UA_DeleteNodesItem}}","page":"Home","title":"open62541.UA_DeleteNodesItem_init","text":"UA_DeleteNodesItem_init\"(x::Ptr{UA_DeleteNodesItem})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesItem_new-Tuple{}","page":"Home","title":"open62541.UA_DeleteNodesItem_new","text":"UA_DeleteNodesItem_new\"()::Ptr{UA_DeleteNodesItem}\n\ncreates and initializes a UA_DeleteNodesItem object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DeleteNodesItem_delete(x::Ptr{UA_DeleteNodesItem})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesRequest_clear-Tuple{Ptr{UA_DeleteNodesRequest}}","page":"Home","title":"open62541.UA_DeleteNodesRequest_clear","text":"UA_DeleteNodesRequest_clear\"(x::Ptr{UA_DeleteNodesRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_DeleteNodesRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesRequest_copy-Tuple{UA_DeleteNodesRequest, Ptr{UA_DeleteNodesRequest}}","page":"Home","title":"open62541.UA_DeleteNodesRequest_copy","text":"UA_DeleteNodesRequest_copy\"(src::Ptr{UA_DeleteNodesRequest}, dst::Ptr{UA_DeleteNodesRequest})::UA_STATUSCODE\nUA_DeleteNodesRequest_copy\"(src::UA_DeleteNodesRequest, dst::Ptr{UA_DeleteNodesRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesRequest_delete-Tuple{Ptr{UA_DeleteNodesRequest}}","page":"Home","title":"open62541.UA_DeleteNodesRequest_delete","text":"UA_DeleteNodesRequest_delete(x::Ptr{UA_DeleteNodesRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesRequest_deleteMembers-Tuple{Ptr{UA_DeleteNodesRequest}}","page":"Home","title":"open62541.UA_DeleteNodesRequest_deleteMembers","text":"UA_DeleteNodesRequest_deleteMembers(x::Ptr{UA_DeleteNodesRequest})\n\n(deprecated, use UA_DeleteNodesRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DeleteNodesRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesRequest_init-Tuple{Ptr{UA_DeleteNodesRequest}}","page":"Home","title":"open62541.UA_DeleteNodesRequest_init","text":"UA_DeleteNodesRequest_init\"(x::Ptr{UA_DeleteNodesRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesRequest_new-Tuple{}","page":"Home","title":"open62541.UA_DeleteNodesRequest_new","text":"UA_DeleteNodesRequest_new\"()::Ptr{UA_DeleteNodesRequest}\n\ncreates and initializes a UA_DeleteNodesRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DeleteNodesRequest_delete(x::Ptr{UA_DeleteNodesRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesResponse_clear-Tuple{Ptr{UA_DeleteNodesResponse}}","page":"Home","title":"open62541.UA_DeleteNodesResponse_clear","text":"UA_DeleteNodesResponse_clear\"(x::Ptr{UA_DeleteNodesResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_DeleteNodesResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesResponse_copy-Tuple{UA_DeleteNodesResponse, Ptr{UA_DeleteNodesResponse}}","page":"Home","title":"open62541.UA_DeleteNodesResponse_copy","text":"UA_DeleteNodesResponse_copy\"(src::Ptr{UA_DeleteNodesResponse}, dst::Ptr{UA_DeleteNodesResponse})::UA_STATUSCODE\nUA_DeleteNodesResponse_copy\"(src::UA_DeleteNodesResponse, dst::Ptr{UA_DeleteNodesResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesResponse_delete-Tuple{Ptr{UA_DeleteNodesResponse}}","page":"Home","title":"open62541.UA_DeleteNodesResponse_delete","text":"UA_DeleteNodesResponse_delete(x::Ptr{UA_DeleteNodesResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesResponse_deleteMembers-Tuple{Ptr{UA_DeleteNodesResponse}}","page":"Home","title":"open62541.UA_DeleteNodesResponse_deleteMembers","text":"UA_DeleteNodesResponse_deleteMembers(x::Ptr{UA_DeleteNodesResponse})\n\n(deprecated, use UA_DeleteNodesResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DeleteNodesResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesResponse_init-Tuple{Ptr{UA_DeleteNodesResponse}}","page":"Home","title":"open62541.UA_DeleteNodesResponse_init","text":"UA_DeleteNodesResponse_init\"(x::Ptr{UA_DeleteNodesResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteNodesResponse_new-Tuple{}","page":"Home","title":"open62541.UA_DeleteNodesResponse_new","text":"UA_DeleteNodesResponse_new\"()::Ptr{UA_DeleteNodesResponse}\n\ncreates and initializes a UA_DeleteNodesResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DeleteNodesResponse_delete(x::Ptr{UA_DeleteNodesResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteRawModifiedDetails_clear-Tuple{Ptr{UA_DeleteRawModifiedDetails}}","page":"Home","title":"open62541.UA_DeleteRawModifiedDetails_clear","text":"UA_DeleteRawModifiedDetails_clear\"(x::Ptr{UA_DeleteRawModifiedDetails})\n\ndeletes the dynamically allocated content of the object x and calls UA_DeleteRawModifiedDetails_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteRawModifiedDetails_copy-Tuple{UA_DeleteRawModifiedDetails, Ptr{UA_DeleteRawModifiedDetails}}","page":"Home","title":"open62541.UA_DeleteRawModifiedDetails_copy","text":"UA_DeleteRawModifiedDetails_copy\"(src::Ptr{UA_DeleteRawModifiedDetails}, dst::Ptr{UA_DeleteRawModifiedDetails})::UA_STATUSCODE\nUA_DeleteRawModifiedDetails_copy\"(src::UA_DeleteRawModifiedDetails, dst::Ptr{UA_DeleteRawModifiedDetails})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteRawModifiedDetails_delete-Tuple{Ptr{UA_DeleteRawModifiedDetails}}","page":"Home","title":"open62541.UA_DeleteRawModifiedDetails_delete","text":"UA_DeleteRawModifiedDetails_delete(x::Ptr{UA_DeleteRawModifiedDetails})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteRawModifiedDetails_deleteMembers-Tuple{Ptr{UA_DeleteRawModifiedDetails}}","page":"Home","title":"open62541.UA_DeleteRawModifiedDetails_deleteMembers","text":"UA_DeleteRawModifiedDetails_deleteMembers(x::Ptr{UA_DeleteRawModifiedDetails})\n\n(deprecated, use UA_DeleteRawModifiedDetails_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DeleteRawModifiedDetails_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteRawModifiedDetails_init-Tuple{Ptr{UA_DeleteRawModifiedDetails}}","page":"Home","title":"open62541.UA_DeleteRawModifiedDetails_init","text":"UA_DeleteRawModifiedDetails_init\"(x::Ptr{UA_DeleteRawModifiedDetails})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteRawModifiedDetails_new-Tuple{}","page":"Home","title":"open62541.UA_DeleteRawModifiedDetails_new","text":"UA_DeleteRawModifiedDetails_new\"()::Ptr{UA_DeleteRawModifiedDetails}\n\ncreates and initializes a UA_DeleteRawModifiedDetails object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DeleteRawModifiedDetails_delete(x::Ptr{UA_DeleteRawModifiedDetails})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesItem_clear-Tuple{Ptr{UA_DeleteReferencesItem}}","page":"Home","title":"open62541.UA_DeleteReferencesItem_clear","text":"UA_DeleteReferencesItem_clear\"(x::Ptr{UA_DeleteReferencesItem})\n\ndeletes the dynamically allocated content of the object x and calls UA_DeleteReferencesItem_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesItem_copy-Tuple{UA_DeleteReferencesItem, Ptr{UA_DeleteReferencesItem}}","page":"Home","title":"open62541.UA_DeleteReferencesItem_copy","text":"UA_DeleteReferencesItem_copy\"(src::Ptr{UA_DeleteReferencesItem}, dst::Ptr{UA_DeleteReferencesItem})::UA_STATUSCODE\nUA_DeleteReferencesItem_copy\"(src::UA_DeleteReferencesItem, dst::Ptr{UA_DeleteReferencesItem})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesItem_delete-Tuple{Ptr{UA_DeleteReferencesItem}}","page":"Home","title":"open62541.UA_DeleteReferencesItem_delete","text":"UA_DeleteReferencesItem_delete(x::Ptr{UA_DeleteReferencesItem})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesItem_deleteMembers-Tuple{Ptr{UA_DeleteReferencesItem}}","page":"Home","title":"open62541.UA_DeleteReferencesItem_deleteMembers","text":"UA_DeleteReferencesItem_deleteMembers(x::Ptr{UA_DeleteReferencesItem})\n\n(deprecated, use UA_DeleteReferencesItem_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DeleteReferencesItem_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesItem_init-Tuple{Ptr{UA_DeleteReferencesItem}}","page":"Home","title":"open62541.UA_DeleteReferencesItem_init","text":"UA_DeleteReferencesItem_init\"(x::Ptr{UA_DeleteReferencesItem})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesItem_new-Tuple{}","page":"Home","title":"open62541.UA_DeleteReferencesItem_new","text":"UA_DeleteReferencesItem_new\"()::Ptr{UA_DeleteReferencesItem}\n\ncreates and initializes a UA_DeleteReferencesItem object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DeleteReferencesItem_delete(x::Ptr{UA_DeleteReferencesItem})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesRequest_clear-Tuple{Ptr{UA_DeleteReferencesRequest}}","page":"Home","title":"open62541.UA_DeleteReferencesRequest_clear","text":"UA_DeleteReferencesRequest_clear\"(x::Ptr{UA_DeleteReferencesRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_DeleteReferencesRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesRequest_copy-Tuple{UA_DeleteReferencesRequest, Ptr{UA_DeleteReferencesRequest}}","page":"Home","title":"open62541.UA_DeleteReferencesRequest_copy","text":"UA_DeleteReferencesRequest_copy\"(src::Ptr{UA_DeleteReferencesRequest}, dst::Ptr{UA_DeleteReferencesRequest})::UA_STATUSCODE\nUA_DeleteReferencesRequest_copy\"(src::UA_DeleteReferencesRequest, dst::Ptr{UA_DeleteReferencesRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesRequest_delete-Tuple{Ptr{UA_DeleteReferencesRequest}}","page":"Home","title":"open62541.UA_DeleteReferencesRequest_delete","text":"UA_DeleteReferencesRequest_delete(x::Ptr{UA_DeleteReferencesRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesRequest_deleteMembers-Tuple{Ptr{UA_DeleteReferencesRequest}}","page":"Home","title":"open62541.UA_DeleteReferencesRequest_deleteMembers","text":"UA_DeleteReferencesRequest_deleteMembers(x::Ptr{UA_DeleteReferencesRequest})\n\n(deprecated, use UA_DeleteReferencesRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DeleteReferencesRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesRequest_init-Tuple{Ptr{UA_DeleteReferencesRequest}}","page":"Home","title":"open62541.UA_DeleteReferencesRequest_init","text":"UA_DeleteReferencesRequest_init\"(x::Ptr{UA_DeleteReferencesRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesRequest_new-Tuple{}","page":"Home","title":"open62541.UA_DeleteReferencesRequest_new","text":"UA_DeleteReferencesRequest_new\"()::Ptr{UA_DeleteReferencesRequest}\n\ncreates and initializes a UA_DeleteReferencesRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DeleteReferencesRequest_delete(x::Ptr{UA_DeleteReferencesRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesResponse_clear-Tuple{Ptr{UA_DeleteReferencesResponse}}","page":"Home","title":"open62541.UA_DeleteReferencesResponse_clear","text":"UA_DeleteReferencesResponse_clear\"(x::Ptr{UA_DeleteReferencesResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_DeleteReferencesResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesResponse_copy-Tuple{UA_DeleteReferencesResponse, Ptr{UA_DeleteReferencesResponse}}","page":"Home","title":"open62541.UA_DeleteReferencesResponse_copy","text":"UA_DeleteReferencesResponse_copy\"(src::Ptr{UA_DeleteReferencesResponse}, dst::Ptr{UA_DeleteReferencesResponse})::UA_STATUSCODE\nUA_DeleteReferencesResponse_copy\"(src::UA_DeleteReferencesResponse, dst::Ptr{UA_DeleteReferencesResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesResponse_delete-Tuple{Ptr{UA_DeleteReferencesResponse}}","page":"Home","title":"open62541.UA_DeleteReferencesResponse_delete","text":"UA_DeleteReferencesResponse_delete(x::Ptr{UA_DeleteReferencesResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesResponse_deleteMembers-Tuple{Ptr{UA_DeleteReferencesResponse}}","page":"Home","title":"open62541.UA_DeleteReferencesResponse_deleteMembers","text":"UA_DeleteReferencesResponse_deleteMembers(x::Ptr{UA_DeleteReferencesResponse})\n\n(deprecated, use UA_DeleteReferencesResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DeleteReferencesResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesResponse_init-Tuple{Ptr{UA_DeleteReferencesResponse}}","page":"Home","title":"open62541.UA_DeleteReferencesResponse_init","text":"UA_DeleteReferencesResponse_init\"(x::Ptr{UA_DeleteReferencesResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteReferencesResponse_new-Tuple{}","page":"Home","title":"open62541.UA_DeleteReferencesResponse_new","text":"UA_DeleteReferencesResponse_new\"()::Ptr{UA_DeleteReferencesResponse}\n\ncreates and initializes a UA_DeleteReferencesResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DeleteReferencesResponse_delete(x::Ptr{UA_DeleteReferencesResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteSubscriptionsRequest_clear-Tuple{Ptr{UA_DeleteSubscriptionsRequest}}","page":"Home","title":"open62541.UA_DeleteSubscriptionsRequest_clear","text":"UA_DeleteSubscriptionsRequest_clear\"(x::Ptr{UA_DeleteSubscriptionsRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_DeleteSubscriptionsRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteSubscriptionsRequest_copy-Tuple{UA_DeleteSubscriptionsRequest, Ptr{UA_DeleteSubscriptionsRequest}}","page":"Home","title":"open62541.UA_DeleteSubscriptionsRequest_copy","text":"UA_DeleteSubscriptionsRequest_copy\"(src::Ptr{UA_DeleteSubscriptionsRequest}, dst::Ptr{UA_DeleteSubscriptionsRequest})::UA_STATUSCODE\nUA_DeleteSubscriptionsRequest_copy\"(src::UA_DeleteSubscriptionsRequest, dst::Ptr{UA_DeleteSubscriptionsRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteSubscriptionsRequest_delete-Tuple{Ptr{UA_DeleteSubscriptionsRequest}}","page":"Home","title":"open62541.UA_DeleteSubscriptionsRequest_delete","text":"UA_DeleteSubscriptionsRequest_delete(x::Ptr{UA_DeleteSubscriptionsRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteSubscriptionsRequest_deleteMembers-Tuple{Ptr{UA_DeleteSubscriptionsRequest}}","page":"Home","title":"open62541.UA_DeleteSubscriptionsRequest_deleteMembers","text":"UA_DeleteSubscriptionsRequest_deleteMembers(x::Ptr{UA_DeleteSubscriptionsRequest})\n\n(deprecated, use UA_DeleteSubscriptionsRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DeleteSubscriptionsRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteSubscriptionsRequest_init-Tuple{Ptr{UA_DeleteSubscriptionsRequest}}","page":"Home","title":"open62541.UA_DeleteSubscriptionsRequest_init","text":"UA_DeleteSubscriptionsRequest_init\"(x::Ptr{UA_DeleteSubscriptionsRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteSubscriptionsRequest_new-Tuple{}","page":"Home","title":"open62541.UA_DeleteSubscriptionsRequest_new","text":"UA_DeleteSubscriptionsRequest_new\"()::Ptr{UA_DeleteSubscriptionsRequest}\n\ncreates and initializes a UA_DeleteSubscriptionsRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DeleteSubscriptionsRequest_delete(x::Ptr{UA_DeleteSubscriptionsRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteSubscriptionsResponse_clear-Tuple{Ptr{UA_DeleteSubscriptionsResponse}}","page":"Home","title":"open62541.UA_DeleteSubscriptionsResponse_clear","text":"UA_DeleteSubscriptionsResponse_clear\"(x::Ptr{UA_DeleteSubscriptionsResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_DeleteSubscriptionsResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteSubscriptionsResponse_copy-Tuple{UA_DeleteSubscriptionsResponse, Ptr{UA_DeleteSubscriptionsResponse}}","page":"Home","title":"open62541.UA_DeleteSubscriptionsResponse_copy","text":"UA_DeleteSubscriptionsResponse_copy\"(src::Ptr{UA_DeleteSubscriptionsResponse}, dst::Ptr{UA_DeleteSubscriptionsResponse})::UA_STATUSCODE\nUA_DeleteSubscriptionsResponse_copy\"(src::UA_DeleteSubscriptionsResponse, dst::Ptr{UA_DeleteSubscriptionsResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteSubscriptionsResponse_delete-Tuple{Ptr{UA_DeleteSubscriptionsResponse}}","page":"Home","title":"open62541.UA_DeleteSubscriptionsResponse_delete","text":"UA_DeleteSubscriptionsResponse_delete(x::Ptr{UA_DeleteSubscriptionsResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteSubscriptionsResponse_deleteMembers-Tuple{Ptr{UA_DeleteSubscriptionsResponse}}","page":"Home","title":"open62541.UA_DeleteSubscriptionsResponse_deleteMembers","text":"UA_DeleteSubscriptionsResponse_deleteMembers(x::Ptr{UA_DeleteSubscriptionsResponse})\n\n(deprecated, use UA_DeleteSubscriptionsResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DeleteSubscriptionsResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteSubscriptionsResponse_init-Tuple{Ptr{UA_DeleteSubscriptionsResponse}}","page":"Home","title":"open62541.UA_DeleteSubscriptionsResponse_init","text":"UA_DeleteSubscriptionsResponse_init\"(x::Ptr{UA_DeleteSubscriptionsResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DeleteSubscriptionsResponse_new-Tuple{}","page":"Home","title":"open62541.UA_DeleteSubscriptionsResponse_new","text":"UA_DeleteSubscriptionsResponse_new\"()::Ptr{UA_DeleteSubscriptionsResponse}\n\ncreates and initializes a UA_DeleteSubscriptionsResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DeleteSubscriptionsResponse_delete(x::Ptr{UA_DeleteSubscriptionsResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DiagnosticInfo_clear-Tuple{Ptr{UA_DiagnosticInfo}}","page":"Home","title":"open62541.UA_DiagnosticInfo_clear","text":"UA_DiagnosticInfo_clear\"(x::Ptr{UA_DiagnosticInfo})\n\ndeletes the dynamically allocated content of the object x and calls UA_DiagnosticInfo_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DiagnosticInfo_copy-Tuple{UA_DiagnosticInfo, Ptr{UA_DiagnosticInfo}}","page":"Home","title":"open62541.UA_DiagnosticInfo_copy","text":"UA_DiagnosticInfo_copy\"(src::Ptr{UA_DiagnosticInfo}, dst::Ptr{UA_DiagnosticInfo})::UA_STATUSCODE\nUA_DiagnosticInfo_copy\"(src::UA_DiagnosticInfo, dst::Ptr{UA_DiagnosticInfo})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DiagnosticInfo_delete-Tuple{Ptr{UA_DiagnosticInfo}}","page":"Home","title":"open62541.UA_DiagnosticInfo_delete","text":"UA_DiagnosticInfo_delete(x::Ptr{UA_DiagnosticInfo})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DiagnosticInfo_deleteMembers-Tuple{Ptr{UA_DiagnosticInfo}}","page":"Home","title":"open62541.UA_DiagnosticInfo_deleteMembers","text":"UA_DiagnosticInfo_deleteMembers(x::Ptr{UA_DiagnosticInfo})\n\n(deprecated, use UA_DiagnosticInfo_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DiagnosticInfo_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DiagnosticInfo_init-Tuple{Ptr{UA_DiagnosticInfo}}","page":"Home","title":"open62541.UA_DiagnosticInfo_init","text":"UA_DiagnosticInfo_init\"(x::Ptr{UA_DiagnosticInfo})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DiagnosticInfo_new-Tuple{}","page":"Home","title":"open62541.UA_DiagnosticInfo_new","text":"UA_DiagnosticInfo_new\"()::Ptr{UA_DiagnosticInfo}\n\ncreates and initializes a UA_DiagnosticInfo object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DiagnosticInfo_delete(x::Ptr{UA_DiagnosticInfo})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DoubleComplexNumberType_clear-Tuple{Ptr{UA_DoubleComplexNumberType}}","page":"Home","title":"open62541.UA_DoubleComplexNumberType_clear","text":"UA_DoubleComplexNumberType_clear\"(x::Ptr{UA_DoubleComplexNumberType})\n\ndeletes the dynamically allocated content of the object x and calls UA_DoubleComplexNumberType_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DoubleComplexNumberType_copy-Tuple{UA_DoubleComplexNumberType, Ptr{UA_DoubleComplexNumberType}}","page":"Home","title":"open62541.UA_DoubleComplexNumberType_copy","text":"UA_DoubleComplexNumberType_copy\"(src::Ptr{UA_DoubleComplexNumberType}, dst::Ptr{UA_DoubleComplexNumberType})::UA_STATUSCODE\nUA_DoubleComplexNumberType_copy\"(src::UA_DoubleComplexNumberType, dst::Ptr{UA_DoubleComplexNumberType})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DoubleComplexNumberType_delete-Tuple{Ptr{UA_DoubleComplexNumberType}}","page":"Home","title":"open62541.UA_DoubleComplexNumberType_delete","text":"UA_DoubleComplexNumberType_delete(x::Ptr{UA_DoubleComplexNumberType})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DoubleComplexNumberType_deleteMembers-Tuple{Ptr{UA_DoubleComplexNumberType}}","page":"Home","title":"open62541.UA_DoubleComplexNumberType_deleteMembers","text":"UA_DoubleComplexNumberType_deleteMembers(x::Ptr{UA_DoubleComplexNumberType})\n\n(deprecated, use UA_DoubleComplexNumberType_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_DoubleComplexNumberType_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DoubleComplexNumberType_init-Tuple{Ptr{UA_DoubleComplexNumberType}}","page":"Home","title":"open62541.UA_DoubleComplexNumberType_init","text":"UA_DoubleComplexNumberType_init\"(x::Ptr{UA_DoubleComplexNumberType})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_DoubleComplexNumberType_new-Tuple{}","page":"Home","title":"open62541.UA_DoubleComplexNumberType_new","text":"UA_DoubleComplexNumberType_new\"()::Ptr{UA_DoubleComplexNumberType}\n\ncreates and initializes a UA_DoubleComplexNumberType object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_DoubleComplexNumberType_delete(x::Ptr{UA_DoubleComplexNumberType})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Double_clear-Tuple{Ptr{Float64}}","page":"Home","title":"open62541.UA_Double_clear","text":"Float64_clear\"(x::Ptr{Float64})\n\ndeletes the dynamically allocated content of the object x and calls Float64_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Double_copy-Tuple{Float64, Ptr{Float64}}","page":"Home","title":"open62541.UA_Double_copy","text":"Float64_copy\"(src::Ptr{Float64}, dst::Ptr{Float64})::UA_STATUSCODE\nFloat64_copy\"(src::Float64, dst::Ptr{Float64})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Double_delete-Tuple{Ptr{Float64}}","page":"Home","title":"open62541.UA_Double_delete","text":"Float64_delete(x::Ptr{Float64})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Double_deleteMembers-Tuple{Ptr{Float64}}","page":"Home","title":"open62541.UA_Double_deleteMembers","text":"Float64_deleteMembers(x::Ptr{Float64})\n\n(deprecated, use Float64_clear(x) instead) deletes the dynamically allocated content of the object x and calls Float64_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Double_init-Tuple{Ptr{Float64}}","page":"Home","title":"open62541.UA_Double_init","text":"Float64_init\"(x::Ptr{Float64})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Double_new-Tuple{}","page":"Home","title":"open62541.UA_Double_new","text":"Float64_new\"()::Ptr{Float64}\n\ncreates and initializes a Float64 object whose memory is allocated by C. After use, it needs to be  cleaned up with Float64_delete(x::Ptr{Float64})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Duration_clear-Tuple{Ptr{Float64}}","page":"Home","title":"open62541.UA_Duration_clear","text":"Float64_clear\"(x::Ptr{Float64})\n\ndeletes the dynamically allocated content of the object x and calls Float64_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Duration_copy-Tuple{Float64, Ptr{Float64}}","page":"Home","title":"open62541.UA_Duration_copy","text":"Float64_copy\"(src::Ptr{Float64}, dst::Ptr{Float64})::UA_STATUSCODE\nFloat64_copy\"(src::Float64, dst::Ptr{Float64})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Duration_delete-Tuple{Ptr{Float64}}","page":"Home","title":"open62541.UA_Duration_delete","text":"Float64_delete(x::Ptr{Float64})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Duration_deleteMembers-Tuple{Ptr{Float64}}","page":"Home","title":"open62541.UA_Duration_deleteMembers","text":"Float64_deleteMembers(x::Ptr{Float64})\n\n(deprecated, use Float64_clear(x) instead) deletes the dynamically allocated content of the object x and calls Float64_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Duration_init-Tuple{Ptr{Float64}}","page":"Home","title":"open62541.UA_Duration_init","text":"Float64_init\"(x::Ptr{Float64})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Duration_new-Tuple{}","page":"Home","title":"open62541.UA_Duration_new","text":"Float64_new\"()::Ptr{Float64}\n\ncreates and initializes a Float64 object whose memory is allocated by C. After use, it needs to be  cleaned up with Float64_delete(x::Ptr{Float64})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EUInformation_clear-Tuple{Ptr{UA_EUInformation}}","page":"Home","title":"open62541.UA_EUInformation_clear","text":"UA_EUInformation_clear\"(x::Ptr{UA_EUInformation})\n\ndeletes the dynamically allocated content of the object x and calls UA_EUInformation_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EUInformation_copy-Tuple{UA_EUInformation, Ptr{UA_EUInformation}}","page":"Home","title":"open62541.UA_EUInformation_copy","text":"UA_EUInformation_copy\"(src::Ptr{UA_EUInformation}, dst::Ptr{UA_EUInformation})::UA_STATUSCODE\nUA_EUInformation_copy\"(src::UA_EUInformation, dst::Ptr{UA_EUInformation})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EUInformation_delete-Tuple{Ptr{UA_EUInformation}}","page":"Home","title":"open62541.UA_EUInformation_delete","text":"UA_EUInformation_delete(x::Ptr{UA_EUInformation})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EUInformation_deleteMembers-Tuple{Ptr{UA_EUInformation}}","page":"Home","title":"open62541.UA_EUInformation_deleteMembers","text":"UA_EUInformation_deleteMembers(x::Ptr{UA_EUInformation})\n\n(deprecated, use UA_EUInformation_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_EUInformation_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EUInformation_init-Tuple{Ptr{UA_EUInformation}}","page":"Home","title":"open62541.UA_EUInformation_init","text":"UA_EUInformation_init\"(x::Ptr{UA_EUInformation})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EUInformation_new-Tuple{}","page":"Home","title":"open62541.UA_EUInformation_new","text":"UA_EUInformation_new\"()::Ptr{UA_EUInformation}\n\ncreates and initializes a UA_EUInformation object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_EUInformation_delete(x::Ptr{UA_EUInformation})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EVENTNOTIFIER-Tuple{}","page":"Home","title":"open62541.UA_EVENTNOTIFIER","text":"UA_EVENTNOTIFIER(; subscribetoevent = false, historyread = false, \n        historywrite = false)::UInt8\n\ncalculates a UInt8 number expressing whether a node can be used to subscribe to events and/or read/write historic events.\n\nMeaning of keywords is explained here: https://reference.opcfoundation.org/Core/Part3/v105/docs/8.59\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ElementOperand_clear-Tuple{Ptr{UA_ElementOperand}}","page":"Home","title":"open62541.UA_ElementOperand_clear","text":"UA_ElementOperand_clear\"(x::Ptr{UA_ElementOperand})\n\ndeletes the dynamically allocated content of the object x and calls UA_ElementOperand_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ElementOperand_copy-Tuple{UA_ElementOperand, Ptr{UA_ElementOperand}}","page":"Home","title":"open62541.UA_ElementOperand_copy","text":"UA_ElementOperand_copy\"(src::Ptr{UA_ElementOperand}, dst::Ptr{UA_ElementOperand})::UA_STATUSCODE\nUA_ElementOperand_copy\"(src::UA_ElementOperand, dst::Ptr{UA_ElementOperand})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ElementOperand_delete-Tuple{Ptr{UA_ElementOperand}}","page":"Home","title":"open62541.UA_ElementOperand_delete","text":"UA_ElementOperand_delete(x::Ptr{UA_ElementOperand})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ElementOperand_deleteMembers-Tuple{Ptr{UA_ElementOperand}}","page":"Home","title":"open62541.UA_ElementOperand_deleteMembers","text":"UA_ElementOperand_deleteMembers(x::Ptr{UA_ElementOperand})\n\n(deprecated, use UA_ElementOperand_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ElementOperand_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ElementOperand_init-Tuple{Ptr{UA_ElementOperand}}","page":"Home","title":"open62541.UA_ElementOperand_init","text":"UA_ElementOperand_init\"(x::Ptr{UA_ElementOperand})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ElementOperand_new-Tuple{}","page":"Home","title":"open62541.UA_ElementOperand_new","text":"UA_ElementOperand_new\"()::Ptr{UA_ElementOperand}\n\ncreates and initializes a UA_ElementOperand object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ElementOperand_delete(x::Ptr{UA_ElementOperand})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EndpointDescription_clear-Tuple{Ptr{UA_EndpointDescription}}","page":"Home","title":"open62541.UA_EndpointDescription_clear","text":"UA_EndpointDescription_clear\"(x::Ptr{UA_EndpointDescription})\n\ndeletes the dynamically allocated content of the object x and calls UA_EndpointDescription_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EndpointDescription_copy-Tuple{UA_EndpointDescription, Ptr{UA_EndpointDescription}}","page":"Home","title":"open62541.UA_EndpointDescription_copy","text":"UA_EndpointDescription_copy\"(src::Ptr{UA_EndpointDescription}, dst::Ptr{UA_EndpointDescription})::UA_STATUSCODE\nUA_EndpointDescription_copy\"(src::UA_EndpointDescription, dst::Ptr{UA_EndpointDescription})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EndpointDescription_delete-Tuple{Ptr{UA_EndpointDescription}}","page":"Home","title":"open62541.UA_EndpointDescription_delete","text":"UA_EndpointDescription_delete(x::Ptr{UA_EndpointDescription})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EndpointDescription_deleteMembers-Tuple{Ptr{UA_EndpointDescription}}","page":"Home","title":"open62541.UA_EndpointDescription_deleteMembers","text":"UA_EndpointDescription_deleteMembers(x::Ptr{UA_EndpointDescription})\n\n(deprecated, use UA_EndpointDescription_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_EndpointDescription_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EndpointDescription_init-Tuple{Ptr{UA_EndpointDescription}}","page":"Home","title":"open62541.UA_EndpointDescription_init","text":"UA_EndpointDescription_init\"(x::Ptr{UA_EndpointDescription})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EndpointDescription_new-Tuple{}","page":"Home","title":"open62541.UA_EndpointDescription_new","text":"UA_EndpointDescription_new\"()::Ptr{UA_EndpointDescription}\n\ncreates and initializes a UA_EndpointDescription object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_EndpointDescription_delete(x::Ptr{UA_EndpointDescription})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumDefinition_clear-Tuple{Ptr{UA_EnumDefinition}}","page":"Home","title":"open62541.UA_EnumDefinition_clear","text":"UA_EnumDefinition_clear\"(x::Ptr{UA_EnumDefinition})\n\ndeletes the dynamically allocated content of the object x and calls UA_EnumDefinition_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumDefinition_copy-Tuple{UA_EnumDefinition, Ptr{UA_EnumDefinition}}","page":"Home","title":"open62541.UA_EnumDefinition_copy","text":"UA_EnumDefinition_copy\"(src::Ptr{UA_EnumDefinition}, dst::Ptr{UA_EnumDefinition})::UA_STATUSCODE\nUA_EnumDefinition_copy\"(src::UA_EnumDefinition, dst::Ptr{UA_EnumDefinition})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumDefinition_delete-Tuple{Ptr{UA_EnumDefinition}}","page":"Home","title":"open62541.UA_EnumDefinition_delete","text":"UA_EnumDefinition_delete(x::Ptr{UA_EnumDefinition})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumDefinition_deleteMembers-Tuple{Ptr{UA_EnumDefinition}}","page":"Home","title":"open62541.UA_EnumDefinition_deleteMembers","text":"UA_EnumDefinition_deleteMembers(x::Ptr{UA_EnumDefinition})\n\n(deprecated, use UA_EnumDefinition_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_EnumDefinition_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumDefinition_init-Tuple{Ptr{UA_EnumDefinition}}","page":"Home","title":"open62541.UA_EnumDefinition_init","text":"UA_EnumDefinition_init\"(x::Ptr{UA_EnumDefinition})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumDefinition_new-Tuple{}","page":"Home","title":"open62541.UA_EnumDefinition_new","text":"UA_EnumDefinition_new\"()::Ptr{UA_EnumDefinition}\n\ncreates and initializes a UA_EnumDefinition object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_EnumDefinition_delete(x::Ptr{UA_EnumDefinition})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumField_clear-Tuple{Ptr{UA_EnumField}}","page":"Home","title":"open62541.UA_EnumField_clear","text":"UA_EnumField_clear\"(x::Ptr{UA_EnumField})\n\ndeletes the dynamically allocated content of the object x and calls UA_EnumField_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumField_copy-Tuple{UA_EnumField, Ptr{UA_EnumField}}","page":"Home","title":"open62541.UA_EnumField_copy","text":"UA_EnumField_copy\"(src::Ptr{UA_EnumField}, dst::Ptr{UA_EnumField})::UA_STATUSCODE\nUA_EnumField_copy\"(src::UA_EnumField, dst::Ptr{UA_EnumField})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumField_delete-Tuple{Ptr{UA_EnumField}}","page":"Home","title":"open62541.UA_EnumField_delete","text":"UA_EnumField_delete(x::Ptr{UA_EnumField})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumField_deleteMembers-Tuple{Ptr{UA_EnumField}}","page":"Home","title":"open62541.UA_EnumField_deleteMembers","text":"UA_EnumField_deleteMembers(x::Ptr{UA_EnumField})\n\n(deprecated, use UA_EnumField_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_EnumField_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumField_init-Tuple{Ptr{UA_EnumField}}","page":"Home","title":"open62541.UA_EnumField_init","text":"UA_EnumField_init\"(x::Ptr{UA_EnumField})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumField_new-Tuple{}","page":"Home","title":"open62541.UA_EnumField_new","text":"UA_EnumField_new\"()::Ptr{UA_EnumField}\n\ncreates and initializes a UA_EnumField object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_EnumField_delete(x::Ptr{UA_EnumField})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumValueType_clear-Tuple{Ptr{UA_EnumValueType}}","page":"Home","title":"open62541.UA_EnumValueType_clear","text":"UA_EnumValueType_clear\"(x::Ptr{UA_EnumValueType})\n\ndeletes the dynamically allocated content of the object x and calls UA_EnumValueType_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumValueType_copy-Tuple{UA_EnumValueType, Ptr{UA_EnumValueType}}","page":"Home","title":"open62541.UA_EnumValueType_copy","text":"UA_EnumValueType_copy\"(src::Ptr{UA_EnumValueType}, dst::Ptr{UA_EnumValueType})::UA_STATUSCODE\nUA_EnumValueType_copy\"(src::UA_EnumValueType, dst::Ptr{UA_EnumValueType})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumValueType_delete-Tuple{Ptr{UA_EnumValueType}}","page":"Home","title":"open62541.UA_EnumValueType_delete","text":"UA_EnumValueType_delete(x::Ptr{UA_EnumValueType})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumValueType_deleteMembers-Tuple{Ptr{UA_EnumValueType}}","page":"Home","title":"open62541.UA_EnumValueType_deleteMembers","text":"UA_EnumValueType_deleteMembers(x::Ptr{UA_EnumValueType})\n\n(deprecated, use UA_EnumValueType_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_EnumValueType_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumValueType_init-Tuple{Ptr{UA_EnumValueType}}","page":"Home","title":"open62541.UA_EnumValueType_init","text":"UA_EnumValueType_init\"(x::Ptr{UA_EnumValueType})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EnumValueType_new-Tuple{}","page":"Home","title":"open62541.UA_EnumValueType_new","text":"UA_EnumValueType_new\"()::Ptr{UA_EnumValueType}\n\ncreates and initializes a UA_EnumValueType object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_EnumValueType_delete(x::Ptr{UA_EnumValueType})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFieldList_clear-Tuple{Ptr{UA_EventFieldList}}","page":"Home","title":"open62541.UA_EventFieldList_clear","text":"UA_EventFieldList_clear\"(x::Ptr{UA_EventFieldList})\n\ndeletes the dynamically allocated content of the object x and calls UA_EventFieldList_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFieldList_copy-Tuple{UA_EventFieldList, Ptr{UA_EventFieldList}}","page":"Home","title":"open62541.UA_EventFieldList_copy","text":"UA_EventFieldList_copy\"(src::Ptr{UA_EventFieldList}, dst::Ptr{UA_EventFieldList})::UA_STATUSCODE\nUA_EventFieldList_copy\"(src::UA_EventFieldList, dst::Ptr{UA_EventFieldList})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFieldList_delete-Tuple{Ptr{UA_EventFieldList}}","page":"Home","title":"open62541.UA_EventFieldList_delete","text":"UA_EventFieldList_delete(x::Ptr{UA_EventFieldList})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFieldList_deleteMembers-Tuple{Ptr{UA_EventFieldList}}","page":"Home","title":"open62541.UA_EventFieldList_deleteMembers","text":"UA_EventFieldList_deleteMembers(x::Ptr{UA_EventFieldList})\n\n(deprecated, use UA_EventFieldList_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_EventFieldList_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFieldList_init-Tuple{Ptr{UA_EventFieldList}}","page":"Home","title":"open62541.UA_EventFieldList_init","text":"UA_EventFieldList_init\"(x::Ptr{UA_EventFieldList})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFieldList_new-Tuple{}","page":"Home","title":"open62541.UA_EventFieldList_new","text":"UA_EventFieldList_new\"()::Ptr{UA_EventFieldList}\n\ncreates and initializes a UA_EventFieldList object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_EventFieldList_delete(x::Ptr{UA_EventFieldList})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFilterResult_clear-Tuple{Ptr{UA_EventFilterResult}}","page":"Home","title":"open62541.UA_EventFilterResult_clear","text":"UA_EventFilterResult_clear\"(x::Ptr{UA_EventFilterResult})\n\ndeletes the dynamically allocated content of the object x and calls UA_EventFilterResult_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFilterResult_copy-Tuple{UA_EventFilterResult, Ptr{UA_EventFilterResult}}","page":"Home","title":"open62541.UA_EventFilterResult_copy","text":"UA_EventFilterResult_copy\"(src::Ptr{UA_EventFilterResult}, dst::Ptr{UA_EventFilterResult})::UA_STATUSCODE\nUA_EventFilterResult_copy\"(src::UA_EventFilterResult, dst::Ptr{UA_EventFilterResult})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFilterResult_delete-Tuple{Ptr{UA_EventFilterResult}}","page":"Home","title":"open62541.UA_EventFilterResult_delete","text":"UA_EventFilterResult_delete(x::Ptr{UA_EventFilterResult})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFilterResult_deleteMembers-Tuple{Ptr{UA_EventFilterResult}}","page":"Home","title":"open62541.UA_EventFilterResult_deleteMembers","text":"UA_EventFilterResult_deleteMembers(x::Ptr{UA_EventFilterResult})\n\n(deprecated, use UA_EventFilterResult_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_EventFilterResult_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFilterResult_init-Tuple{Ptr{UA_EventFilterResult}}","page":"Home","title":"open62541.UA_EventFilterResult_init","text":"UA_EventFilterResult_init\"(x::Ptr{UA_EventFilterResult})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFilterResult_new-Tuple{}","page":"Home","title":"open62541.UA_EventFilterResult_new","text":"UA_EventFilterResult_new\"()::Ptr{UA_EventFilterResult}\n\ncreates and initializes a UA_EventFilterResult object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_EventFilterResult_delete(x::Ptr{UA_EventFilterResult})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFilter_clear-Tuple{Ptr{UA_EventFilter}}","page":"Home","title":"open62541.UA_EventFilter_clear","text":"UA_EventFilter_clear\"(x::Ptr{UA_EventFilter})\n\ndeletes the dynamically allocated content of the object x and calls UA_EventFilter_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFilter_copy-Tuple{UA_EventFilter, Ptr{UA_EventFilter}}","page":"Home","title":"open62541.UA_EventFilter_copy","text":"UA_EventFilter_copy\"(src::Ptr{UA_EventFilter}, dst::Ptr{UA_EventFilter})::UA_STATUSCODE\nUA_EventFilter_copy\"(src::UA_EventFilter, dst::Ptr{UA_EventFilter})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFilter_delete-Tuple{Ptr{UA_EventFilter}}","page":"Home","title":"open62541.UA_EventFilter_delete","text":"UA_EventFilter_delete(x::Ptr{UA_EventFilter})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFilter_deleteMembers-Tuple{Ptr{UA_EventFilter}}","page":"Home","title":"open62541.UA_EventFilter_deleteMembers","text":"UA_EventFilter_deleteMembers(x::Ptr{UA_EventFilter})\n\n(deprecated, use UA_EventFilter_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_EventFilter_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFilter_init-Tuple{Ptr{UA_EventFilter}}","page":"Home","title":"open62541.UA_EventFilter_init","text":"UA_EventFilter_init\"(x::Ptr{UA_EventFilter})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventFilter_new-Tuple{}","page":"Home","title":"open62541.UA_EventFilter_new","text":"UA_EventFilter_new\"()::Ptr{UA_EventFilter}\n\ncreates and initializes a UA_EventFilter object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_EventFilter_delete(x::Ptr{UA_EventFilter})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventNotificationList_clear-Tuple{Ptr{UA_EventNotificationList}}","page":"Home","title":"open62541.UA_EventNotificationList_clear","text":"UA_EventNotificationList_clear\"(x::Ptr{UA_EventNotificationList})\n\ndeletes the dynamically allocated content of the object x and calls UA_EventNotificationList_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventNotificationList_copy-Tuple{UA_EventNotificationList, Ptr{UA_EventNotificationList}}","page":"Home","title":"open62541.UA_EventNotificationList_copy","text":"UA_EventNotificationList_copy\"(src::Ptr{UA_EventNotificationList}, dst::Ptr{UA_EventNotificationList})::UA_STATUSCODE\nUA_EventNotificationList_copy\"(src::UA_EventNotificationList, dst::Ptr{UA_EventNotificationList})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventNotificationList_delete-Tuple{Ptr{UA_EventNotificationList}}","page":"Home","title":"open62541.UA_EventNotificationList_delete","text":"UA_EventNotificationList_delete(x::Ptr{UA_EventNotificationList})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventNotificationList_deleteMembers-Tuple{Ptr{UA_EventNotificationList}}","page":"Home","title":"open62541.UA_EventNotificationList_deleteMembers","text":"UA_EventNotificationList_deleteMembers(x::Ptr{UA_EventNotificationList})\n\n(deprecated, use UA_EventNotificationList_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_EventNotificationList_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventNotificationList_init-Tuple{Ptr{UA_EventNotificationList}}","page":"Home","title":"open62541.UA_EventNotificationList_init","text":"UA_EventNotificationList_init\"(x::Ptr{UA_EventNotificationList})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_EventNotificationList_new-Tuple{}","page":"Home","title":"open62541.UA_EventNotificationList_new","text":"UA_EventNotificationList_new\"()::Ptr{UA_EventNotificationList}\n\ncreates and initializes a UA_EventNotificationList object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_EventNotificationList_delete(x::Ptr{UA_EventNotificationList})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ExpandedNodeId_clear-Tuple{Ptr{UA_ExpandedNodeId}}","page":"Home","title":"open62541.UA_ExpandedNodeId_clear","text":"UA_ExpandedNodeId_clear\"(x::Ptr{UA_ExpandedNodeId})\n\ndeletes the dynamically allocated content of the object x and calls UA_ExpandedNodeId_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ExpandedNodeId_copy-Tuple{UA_ExpandedNodeId, Ptr{UA_ExpandedNodeId}}","page":"Home","title":"open62541.UA_ExpandedNodeId_copy","text":"UA_ExpandedNodeId_copy\"(src::Ptr{UA_ExpandedNodeId}, dst::Ptr{UA_ExpandedNodeId})::UA_STATUSCODE\nUA_ExpandedNodeId_copy\"(src::UA_ExpandedNodeId, dst::Ptr{UA_ExpandedNodeId})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ExpandedNodeId_delete-Tuple{Ptr{UA_ExpandedNodeId}}","page":"Home","title":"open62541.UA_ExpandedNodeId_delete","text":"UA_ExpandedNodeId_delete(x::Ptr{UA_ExpandedNodeId})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ExpandedNodeId_deleteMembers-Tuple{Ptr{UA_ExpandedNodeId}}","page":"Home","title":"open62541.UA_ExpandedNodeId_deleteMembers","text":"UA_ExpandedNodeId_deleteMembers(x::Ptr{UA_ExpandedNodeId})\n\n(deprecated, use UA_ExpandedNodeId_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ExpandedNodeId_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ExpandedNodeId_init-Tuple{Ptr{UA_ExpandedNodeId}}","page":"Home","title":"open62541.UA_ExpandedNodeId_init","text":"UA_ExpandedNodeId_init\"(x::Ptr{UA_ExpandedNodeId})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ExpandedNodeId_isLocal-Tuple{Any}","page":"Home","title":"open62541.UA_ExpandedNodeId_isLocal","text":"UA_EXPANDEDNODEID_NUMERIC(nsIndex, identifier)\n\nThe following functions are shorthand for creating ExpandedNodeIds.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ExpandedNodeId_new-Tuple{}","page":"Home","title":"open62541.UA_ExpandedNodeId_new","text":"UA_ExpandedNodeId_new\"()::Ptr{UA_ExpandedNodeId}\n\ncreates and initializes a UA_ExpandedNodeId object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ExpandedNodeId_delete(x::Ptr{UA_ExpandedNodeId})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ExtensionObject_clear-Tuple{Ptr{UA_ExtensionObject}}","page":"Home","title":"open62541.UA_ExtensionObject_clear","text":"UA_ExtensionObject_clear\"(x::Ptr{UA_ExtensionObject})\n\ndeletes the dynamically allocated content of the object x and calls UA_ExtensionObject_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ExtensionObject_copy-Tuple{UA_ExtensionObject, Ptr{UA_ExtensionObject}}","page":"Home","title":"open62541.UA_ExtensionObject_copy","text":"UA_ExtensionObject_copy\"(src::Ptr{UA_ExtensionObject}, dst::Ptr{UA_ExtensionObject})::UA_STATUSCODE\nUA_ExtensionObject_copy\"(src::UA_ExtensionObject, dst::Ptr{UA_ExtensionObject})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ExtensionObject_delete-Tuple{Ptr{UA_ExtensionObject}}","page":"Home","title":"open62541.UA_ExtensionObject_delete","text":"UA_ExtensionObject_delete(x::Ptr{UA_ExtensionObject})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ExtensionObject_deleteMembers-Tuple{Ptr{UA_ExtensionObject}}","page":"Home","title":"open62541.UA_ExtensionObject_deleteMembers","text":"UA_ExtensionObject_deleteMembers(x::Ptr{UA_ExtensionObject})\n\n(deprecated, use UA_ExtensionObject_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ExtensionObject_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ExtensionObject_init-Tuple{Ptr{UA_ExtensionObject}}","page":"Home","title":"open62541.UA_ExtensionObject_init","text":"UA_ExtensionObject_init\"(x::Ptr{UA_ExtensionObject})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ExtensionObject_new-Tuple{}","page":"Home","title":"open62541.UA_ExtensionObject_new","text":"UA_ExtensionObject_new\"()::Ptr{UA_ExtensionObject}\n\ncreates and initializes a UA_ExtensionObject object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ExtensionObject_delete(x::Ptr{UA_ExtensionObject})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FilterOperator_clear-Tuple{Ptr{UA_FilterOperator}}","page":"Home","title":"open62541.UA_FilterOperator_clear","text":"UA_FilterOperator_clear\"(x::Ptr{UA_FilterOperator})\n\ndeletes the dynamically allocated content of the object x and calls UA_FilterOperator_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FilterOperator_copy-Tuple{UA_FilterOperator, Ptr{UA_FilterOperator}}","page":"Home","title":"open62541.UA_FilterOperator_copy","text":"UA_FilterOperator_copy\"(src::Ptr{UA_FilterOperator}, dst::Ptr{UA_FilterOperator})::UA_STATUSCODE\nUA_FilterOperator_copy\"(src::UA_FilterOperator, dst::Ptr{UA_FilterOperator})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FilterOperator_delete-Tuple{Ptr{UA_FilterOperator}}","page":"Home","title":"open62541.UA_FilterOperator_delete","text":"UA_FilterOperator_delete(x::Ptr{UA_FilterOperator})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FilterOperator_deleteMembers-Tuple{Ptr{UA_FilterOperator}}","page":"Home","title":"open62541.UA_FilterOperator_deleteMembers","text":"UA_FilterOperator_deleteMembers(x::Ptr{UA_FilterOperator})\n\n(deprecated, use UA_FilterOperator_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_FilterOperator_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FilterOperator_init-Tuple{Ptr{UA_FilterOperator}}","page":"Home","title":"open62541.UA_FilterOperator_init","text":"UA_FilterOperator_init\"(x::Ptr{UA_FilterOperator})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FilterOperator_new-Tuple{}","page":"Home","title":"open62541.UA_FilterOperator_new","text":"UA_FilterOperator_new\"()::Ptr{UA_FilterOperator}\n\ncreates and initializes a UA_FilterOperator object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_FilterOperator_delete(x::Ptr{UA_FilterOperator})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FindServersRequest_clear-Tuple{Ptr{UA_FindServersRequest}}","page":"Home","title":"open62541.UA_FindServersRequest_clear","text":"UA_FindServersRequest_clear\"(x::Ptr{UA_FindServersRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_FindServersRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FindServersRequest_copy-Tuple{UA_FindServersRequest, Ptr{UA_FindServersRequest}}","page":"Home","title":"open62541.UA_FindServersRequest_copy","text":"UA_FindServersRequest_copy\"(src::Ptr{UA_FindServersRequest}, dst::Ptr{UA_FindServersRequest})::UA_STATUSCODE\nUA_FindServersRequest_copy\"(src::UA_FindServersRequest, dst::Ptr{UA_FindServersRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FindServersRequest_delete-Tuple{Ptr{UA_FindServersRequest}}","page":"Home","title":"open62541.UA_FindServersRequest_delete","text":"UA_FindServersRequest_delete(x::Ptr{UA_FindServersRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FindServersRequest_deleteMembers-Tuple{Ptr{UA_FindServersRequest}}","page":"Home","title":"open62541.UA_FindServersRequest_deleteMembers","text":"UA_FindServersRequest_deleteMembers(x::Ptr{UA_FindServersRequest})\n\n(deprecated, use UA_FindServersRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_FindServersRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FindServersRequest_init-Tuple{Ptr{UA_FindServersRequest}}","page":"Home","title":"open62541.UA_FindServersRequest_init","text":"UA_FindServersRequest_init\"(x::Ptr{UA_FindServersRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FindServersRequest_new-Tuple{}","page":"Home","title":"open62541.UA_FindServersRequest_new","text":"UA_FindServersRequest_new\"()::Ptr{UA_FindServersRequest}\n\ncreates and initializes a UA_FindServersRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_FindServersRequest_delete(x::Ptr{UA_FindServersRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FindServersResponse_clear-Tuple{Ptr{UA_FindServersResponse}}","page":"Home","title":"open62541.UA_FindServersResponse_clear","text":"UA_FindServersResponse_clear\"(x::Ptr{UA_FindServersResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_FindServersResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FindServersResponse_copy-Tuple{UA_FindServersResponse, Ptr{UA_FindServersResponse}}","page":"Home","title":"open62541.UA_FindServersResponse_copy","text":"UA_FindServersResponse_copy\"(src::Ptr{UA_FindServersResponse}, dst::Ptr{UA_FindServersResponse})::UA_STATUSCODE\nUA_FindServersResponse_copy\"(src::UA_FindServersResponse, dst::Ptr{UA_FindServersResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FindServersResponse_delete-Tuple{Ptr{UA_FindServersResponse}}","page":"Home","title":"open62541.UA_FindServersResponse_delete","text":"UA_FindServersResponse_delete(x::Ptr{UA_FindServersResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FindServersResponse_deleteMembers-Tuple{Ptr{UA_FindServersResponse}}","page":"Home","title":"open62541.UA_FindServersResponse_deleteMembers","text":"UA_FindServersResponse_deleteMembers(x::Ptr{UA_FindServersResponse})\n\n(deprecated, use UA_FindServersResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_FindServersResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FindServersResponse_init-Tuple{Ptr{UA_FindServersResponse}}","page":"Home","title":"open62541.UA_FindServersResponse_init","text":"UA_FindServersResponse_init\"(x::Ptr{UA_FindServersResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_FindServersResponse_new-Tuple{}","page":"Home","title":"open62541.UA_FindServersResponse_new","text":"UA_FindServersResponse_new\"()::Ptr{UA_FindServersResponse}\n\ncreates and initializes a UA_FindServersResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_FindServersResponse_delete(x::Ptr{UA_FindServersResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Float_clear-Tuple{Ptr{Float32}}","page":"Home","title":"open62541.UA_Float_clear","text":"Float32_clear\"(x::Ptr{Float32})\n\ndeletes the dynamically allocated content of the object x and calls Float32_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Float_copy-Tuple{Float32, Ptr{Float32}}","page":"Home","title":"open62541.UA_Float_copy","text":"Float32_copy\"(src::Ptr{Float32}, dst::Ptr{Float32})::UA_STATUSCODE\nFloat32_copy\"(src::Float32, dst::Ptr{Float32})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Float_delete-Tuple{Ptr{Float32}}","page":"Home","title":"open62541.UA_Float_delete","text":"Float32_delete(x::Ptr{Float32})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Float_deleteMembers-Tuple{Ptr{Float32}}","page":"Home","title":"open62541.UA_Float_deleteMembers","text":"Float32_deleteMembers(x::Ptr{Float32})\n\n(deprecated, use Float32_clear(x) instead) deletes the dynamically allocated content of the object x and calls Float32_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Float_init-Tuple{Ptr{Float32}}","page":"Home","title":"open62541.UA_Float_init","text":"Float32_init\"(x::Ptr{Float32})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Float_new-Tuple{}","page":"Home","title":"open62541.UA_Float_new","text":"Float32_new\"()::Ptr{Float32}\n\ncreates and initializes a Float32 object whose memory is allocated by C. After use, it needs to be  cleaned up with Float32_delete(x::Ptr{Float32})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_GetEndpointsRequest_clear-Tuple{Ptr{UA_GetEndpointsRequest}}","page":"Home","title":"open62541.UA_GetEndpointsRequest_clear","text":"UA_GetEndpointsRequest_clear\"(x::Ptr{UA_GetEndpointsRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_GetEndpointsRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_GetEndpointsRequest_copy-Tuple{UA_GetEndpointsRequest, Ptr{UA_GetEndpointsRequest}}","page":"Home","title":"open62541.UA_GetEndpointsRequest_copy","text":"UA_GetEndpointsRequest_copy\"(src::Ptr{UA_GetEndpointsRequest}, dst::Ptr{UA_GetEndpointsRequest})::UA_STATUSCODE\nUA_GetEndpointsRequest_copy\"(src::UA_GetEndpointsRequest, dst::Ptr{UA_GetEndpointsRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_GetEndpointsRequest_delete-Tuple{Ptr{UA_GetEndpointsRequest}}","page":"Home","title":"open62541.UA_GetEndpointsRequest_delete","text":"UA_GetEndpointsRequest_delete(x::Ptr{UA_GetEndpointsRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_GetEndpointsRequest_deleteMembers-Tuple{Ptr{UA_GetEndpointsRequest}}","page":"Home","title":"open62541.UA_GetEndpointsRequest_deleteMembers","text":"UA_GetEndpointsRequest_deleteMembers(x::Ptr{UA_GetEndpointsRequest})\n\n(deprecated, use UA_GetEndpointsRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_GetEndpointsRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_GetEndpointsRequest_init-Tuple{Ptr{UA_GetEndpointsRequest}}","page":"Home","title":"open62541.UA_GetEndpointsRequest_init","text":"UA_GetEndpointsRequest_init\"(x::Ptr{UA_GetEndpointsRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_GetEndpointsRequest_new-Tuple{}","page":"Home","title":"open62541.UA_GetEndpointsRequest_new","text":"UA_GetEndpointsRequest_new\"()::Ptr{UA_GetEndpointsRequest}\n\ncreates and initializes a UA_GetEndpointsRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_GetEndpointsRequest_delete(x::Ptr{UA_GetEndpointsRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_GetEndpointsResponse_clear-Tuple{Ptr{UA_GetEndpointsResponse}}","page":"Home","title":"open62541.UA_GetEndpointsResponse_clear","text":"UA_GetEndpointsResponse_clear\"(x::Ptr{UA_GetEndpointsResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_GetEndpointsResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_GetEndpointsResponse_copy-Tuple{UA_GetEndpointsResponse, Ptr{UA_GetEndpointsResponse}}","page":"Home","title":"open62541.UA_GetEndpointsResponse_copy","text":"UA_GetEndpointsResponse_copy\"(src::Ptr{UA_GetEndpointsResponse}, dst::Ptr{UA_GetEndpointsResponse})::UA_STATUSCODE\nUA_GetEndpointsResponse_copy\"(src::UA_GetEndpointsResponse, dst::Ptr{UA_GetEndpointsResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_GetEndpointsResponse_delete-Tuple{Ptr{UA_GetEndpointsResponse}}","page":"Home","title":"open62541.UA_GetEndpointsResponse_delete","text":"UA_GetEndpointsResponse_delete(x::Ptr{UA_GetEndpointsResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_GetEndpointsResponse_deleteMembers-Tuple{Ptr{UA_GetEndpointsResponse}}","page":"Home","title":"open62541.UA_GetEndpointsResponse_deleteMembers","text":"UA_GetEndpointsResponse_deleteMembers(x::Ptr{UA_GetEndpointsResponse})\n\n(deprecated, use UA_GetEndpointsResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_GetEndpointsResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_GetEndpointsResponse_init-Tuple{Ptr{UA_GetEndpointsResponse}}","page":"Home","title":"open62541.UA_GetEndpointsResponse_init","text":"UA_GetEndpointsResponse_init\"(x::Ptr{UA_GetEndpointsResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_GetEndpointsResponse_new-Tuple{}","page":"Home","title":"open62541.UA_GetEndpointsResponse_new","text":"UA_GetEndpointsResponse_new\"()::Ptr{UA_GetEndpointsResponse}\n\ncreates and initializes a UA_GetEndpointsResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_GetEndpointsResponse_delete(x::Ptr{UA_GetEndpointsResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Guid_clear-Tuple{Ptr{UA_Guid}}","page":"Home","title":"open62541.UA_Guid_clear","text":"UA_Guid_clear\"(x::Ptr{UA_Guid})\n\ndeletes the dynamically allocated content of the object x and calls UA_Guid_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Guid_copy-Tuple{UA_Guid, Ptr{UA_Guid}}","page":"Home","title":"open62541.UA_Guid_copy","text":"UA_Guid_copy\"(src::Ptr{UA_Guid}, dst::Ptr{UA_Guid})::UA_STATUSCODE\nUA_Guid_copy\"(src::UA_Guid, dst::Ptr{UA_Guid})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Guid_delete-Tuple{Ptr{UA_Guid}}","page":"Home","title":"open62541.UA_Guid_delete","text":"UA_Guid_delete(x::Ptr{UA_Guid})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Guid_deleteMembers-Tuple{Ptr{UA_Guid}}","page":"Home","title":"open62541.UA_Guid_deleteMembers","text":"UA_Guid_deleteMembers(x::Ptr{UA_Guid})\n\n(deprecated, use UA_Guid_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_Guid_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Guid_init-Tuple{Ptr{UA_Guid}}","page":"Home","title":"open62541.UA_Guid_init","text":"UA_Guid_init\"(x::Ptr{UA_Guid})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Guid_new-Tuple{}","page":"Home","title":"open62541.UA_Guid_new","text":"UA_Guid_new\"()::Ptr{UA_Guid}\n\ncreates and initializes a UA_Guid object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_Guid_delete(x::Ptr{UA_Guid})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryData_clear-Tuple{Ptr{UA_HistoryData}}","page":"Home","title":"open62541.UA_HistoryData_clear","text":"UA_HistoryData_clear\"(x::Ptr{UA_HistoryData})\n\ndeletes the dynamically allocated content of the object x and calls UA_HistoryData_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryData_copy-Tuple{UA_HistoryData, Ptr{UA_HistoryData}}","page":"Home","title":"open62541.UA_HistoryData_copy","text":"UA_HistoryData_copy\"(src::Ptr{UA_HistoryData}, dst::Ptr{UA_HistoryData})::UA_STATUSCODE\nUA_HistoryData_copy\"(src::UA_HistoryData, dst::Ptr{UA_HistoryData})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryData_delete-Tuple{Ptr{UA_HistoryData}}","page":"Home","title":"open62541.UA_HistoryData_delete","text":"UA_HistoryData_delete(x::Ptr{UA_HistoryData})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryData_deleteMembers-Tuple{Ptr{UA_HistoryData}}","page":"Home","title":"open62541.UA_HistoryData_deleteMembers","text":"UA_HistoryData_deleteMembers(x::Ptr{UA_HistoryData})\n\n(deprecated, use UA_HistoryData_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_HistoryData_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryData_init-Tuple{Ptr{UA_HistoryData}}","page":"Home","title":"open62541.UA_HistoryData_init","text":"UA_HistoryData_init\"(x::Ptr{UA_HistoryData})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryData_new-Tuple{}","page":"Home","title":"open62541.UA_HistoryData_new","text":"UA_HistoryData_new\"()::Ptr{UA_HistoryData}\n\ncreates and initializes a UA_HistoryData object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_HistoryData_delete(x::Ptr{UA_HistoryData})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryEventFieldList_clear-Tuple{Ptr{UA_HistoryEventFieldList}}","page":"Home","title":"open62541.UA_HistoryEventFieldList_clear","text":"UA_HistoryEventFieldList_clear\"(x::Ptr{UA_HistoryEventFieldList})\n\ndeletes the dynamically allocated content of the object x and calls UA_HistoryEventFieldList_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryEventFieldList_copy-Tuple{UA_HistoryEventFieldList, Ptr{UA_HistoryEventFieldList}}","page":"Home","title":"open62541.UA_HistoryEventFieldList_copy","text":"UA_HistoryEventFieldList_copy\"(src::Ptr{UA_HistoryEventFieldList}, dst::Ptr{UA_HistoryEventFieldList})::UA_STATUSCODE\nUA_HistoryEventFieldList_copy\"(src::UA_HistoryEventFieldList, dst::Ptr{UA_HistoryEventFieldList})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryEventFieldList_delete-Tuple{Ptr{UA_HistoryEventFieldList}}","page":"Home","title":"open62541.UA_HistoryEventFieldList_delete","text":"UA_HistoryEventFieldList_delete(x::Ptr{UA_HistoryEventFieldList})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryEventFieldList_deleteMembers-Tuple{Ptr{UA_HistoryEventFieldList}}","page":"Home","title":"open62541.UA_HistoryEventFieldList_deleteMembers","text":"UA_HistoryEventFieldList_deleteMembers(x::Ptr{UA_HistoryEventFieldList})\n\n(deprecated, use UA_HistoryEventFieldList_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_HistoryEventFieldList_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryEventFieldList_init-Tuple{Ptr{UA_HistoryEventFieldList}}","page":"Home","title":"open62541.UA_HistoryEventFieldList_init","text":"UA_HistoryEventFieldList_init\"(x::Ptr{UA_HistoryEventFieldList})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryEventFieldList_new-Tuple{}","page":"Home","title":"open62541.UA_HistoryEventFieldList_new","text":"UA_HistoryEventFieldList_new\"()::Ptr{UA_HistoryEventFieldList}\n\ncreates and initializes a UA_HistoryEventFieldList object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_HistoryEventFieldList_delete(x::Ptr{UA_HistoryEventFieldList})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryEvent_clear-Tuple{Ptr{UA_HistoryEvent}}","page":"Home","title":"open62541.UA_HistoryEvent_clear","text":"UA_HistoryEvent_clear\"(x::Ptr{UA_HistoryEvent})\n\ndeletes the dynamically allocated content of the object x and calls UA_HistoryEvent_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryEvent_copy-Tuple{UA_HistoryEvent, Ptr{UA_HistoryEvent}}","page":"Home","title":"open62541.UA_HistoryEvent_copy","text":"UA_HistoryEvent_copy\"(src::Ptr{UA_HistoryEvent}, dst::Ptr{UA_HistoryEvent})::UA_STATUSCODE\nUA_HistoryEvent_copy\"(src::UA_HistoryEvent, dst::Ptr{UA_HistoryEvent})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryEvent_delete-Tuple{Ptr{UA_HistoryEvent}}","page":"Home","title":"open62541.UA_HistoryEvent_delete","text":"UA_HistoryEvent_delete(x::Ptr{UA_HistoryEvent})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryEvent_deleteMembers-Tuple{Ptr{UA_HistoryEvent}}","page":"Home","title":"open62541.UA_HistoryEvent_deleteMembers","text":"UA_HistoryEvent_deleteMembers(x::Ptr{UA_HistoryEvent})\n\n(deprecated, use UA_HistoryEvent_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_HistoryEvent_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryEvent_init-Tuple{Ptr{UA_HistoryEvent}}","page":"Home","title":"open62541.UA_HistoryEvent_init","text":"UA_HistoryEvent_init\"(x::Ptr{UA_HistoryEvent})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryEvent_new-Tuple{}","page":"Home","title":"open62541.UA_HistoryEvent_new","text":"UA_HistoryEvent_new\"()::Ptr{UA_HistoryEvent}\n\ncreates and initializes a UA_HistoryEvent object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_HistoryEvent_delete(x::Ptr{UA_HistoryEvent})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryModifiedData_clear-Tuple{Ptr{UA_HistoryModifiedData}}","page":"Home","title":"open62541.UA_HistoryModifiedData_clear","text":"UA_HistoryModifiedData_clear\"(x::Ptr{UA_HistoryModifiedData})\n\ndeletes the dynamically allocated content of the object x and calls UA_HistoryModifiedData_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryModifiedData_copy-Tuple{UA_HistoryModifiedData, Ptr{UA_HistoryModifiedData}}","page":"Home","title":"open62541.UA_HistoryModifiedData_copy","text":"UA_HistoryModifiedData_copy\"(src::Ptr{UA_HistoryModifiedData}, dst::Ptr{UA_HistoryModifiedData})::UA_STATUSCODE\nUA_HistoryModifiedData_copy\"(src::UA_HistoryModifiedData, dst::Ptr{UA_HistoryModifiedData})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryModifiedData_delete-Tuple{Ptr{UA_HistoryModifiedData}}","page":"Home","title":"open62541.UA_HistoryModifiedData_delete","text":"UA_HistoryModifiedData_delete(x::Ptr{UA_HistoryModifiedData})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryModifiedData_deleteMembers-Tuple{Ptr{UA_HistoryModifiedData}}","page":"Home","title":"open62541.UA_HistoryModifiedData_deleteMembers","text":"UA_HistoryModifiedData_deleteMembers(x::Ptr{UA_HistoryModifiedData})\n\n(deprecated, use UA_HistoryModifiedData_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_HistoryModifiedData_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryModifiedData_init-Tuple{Ptr{UA_HistoryModifiedData}}","page":"Home","title":"open62541.UA_HistoryModifiedData_init","text":"UA_HistoryModifiedData_init\"(x::Ptr{UA_HistoryModifiedData})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryModifiedData_new-Tuple{}","page":"Home","title":"open62541.UA_HistoryModifiedData_new","text":"UA_HistoryModifiedData_new\"()::Ptr{UA_HistoryModifiedData}\n\ncreates and initializes a UA_HistoryModifiedData object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_HistoryModifiedData_delete(x::Ptr{UA_HistoryModifiedData})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadRequest_clear-Tuple{Ptr{UA_HistoryReadRequest}}","page":"Home","title":"open62541.UA_HistoryReadRequest_clear","text":"UA_HistoryReadRequest_clear\"(x::Ptr{UA_HistoryReadRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_HistoryReadRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadRequest_copy-Tuple{UA_HistoryReadRequest, Ptr{UA_HistoryReadRequest}}","page":"Home","title":"open62541.UA_HistoryReadRequest_copy","text":"UA_HistoryReadRequest_copy\"(src::Ptr{UA_HistoryReadRequest}, dst::Ptr{UA_HistoryReadRequest})::UA_STATUSCODE\nUA_HistoryReadRequest_copy\"(src::UA_HistoryReadRequest, dst::Ptr{UA_HistoryReadRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadRequest_delete-Tuple{Ptr{UA_HistoryReadRequest}}","page":"Home","title":"open62541.UA_HistoryReadRequest_delete","text":"UA_HistoryReadRequest_delete(x::Ptr{UA_HistoryReadRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadRequest_deleteMembers-Tuple{Ptr{UA_HistoryReadRequest}}","page":"Home","title":"open62541.UA_HistoryReadRequest_deleteMembers","text":"UA_HistoryReadRequest_deleteMembers(x::Ptr{UA_HistoryReadRequest})\n\n(deprecated, use UA_HistoryReadRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_HistoryReadRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadRequest_init-Tuple{Ptr{UA_HistoryReadRequest}}","page":"Home","title":"open62541.UA_HistoryReadRequest_init","text":"UA_HistoryReadRequest_init\"(x::Ptr{UA_HistoryReadRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadRequest_new-Tuple{}","page":"Home","title":"open62541.UA_HistoryReadRequest_new","text":"UA_HistoryReadRequest_new\"()::Ptr{UA_HistoryReadRequest}\n\ncreates and initializes a UA_HistoryReadRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_HistoryReadRequest_delete(x::Ptr{UA_HistoryReadRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadResponse_clear-Tuple{Ptr{UA_HistoryReadResponse}}","page":"Home","title":"open62541.UA_HistoryReadResponse_clear","text":"UA_HistoryReadResponse_clear\"(x::Ptr{UA_HistoryReadResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_HistoryReadResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadResponse_copy-Tuple{UA_HistoryReadResponse, Ptr{UA_HistoryReadResponse}}","page":"Home","title":"open62541.UA_HistoryReadResponse_copy","text":"UA_HistoryReadResponse_copy\"(src::Ptr{UA_HistoryReadResponse}, dst::Ptr{UA_HistoryReadResponse})::UA_STATUSCODE\nUA_HistoryReadResponse_copy\"(src::UA_HistoryReadResponse, dst::Ptr{UA_HistoryReadResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadResponse_delete-Tuple{Ptr{UA_HistoryReadResponse}}","page":"Home","title":"open62541.UA_HistoryReadResponse_delete","text":"UA_HistoryReadResponse_delete(x::Ptr{UA_HistoryReadResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadResponse_deleteMembers-Tuple{Ptr{UA_HistoryReadResponse}}","page":"Home","title":"open62541.UA_HistoryReadResponse_deleteMembers","text":"UA_HistoryReadResponse_deleteMembers(x::Ptr{UA_HistoryReadResponse})\n\n(deprecated, use UA_HistoryReadResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_HistoryReadResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadResponse_init-Tuple{Ptr{UA_HistoryReadResponse}}","page":"Home","title":"open62541.UA_HistoryReadResponse_init","text":"UA_HistoryReadResponse_init\"(x::Ptr{UA_HistoryReadResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadResponse_new-Tuple{}","page":"Home","title":"open62541.UA_HistoryReadResponse_new","text":"UA_HistoryReadResponse_new\"()::Ptr{UA_HistoryReadResponse}\n\ncreates and initializes a UA_HistoryReadResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_HistoryReadResponse_delete(x::Ptr{UA_HistoryReadResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadResult_clear-Tuple{Ptr{UA_HistoryReadResult}}","page":"Home","title":"open62541.UA_HistoryReadResult_clear","text":"UA_HistoryReadResult_clear\"(x::Ptr{UA_HistoryReadResult})\n\ndeletes the dynamically allocated content of the object x and calls UA_HistoryReadResult_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadResult_copy-Tuple{UA_HistoryReadResult, Ptr{UA_HistoryReadResult}}","page":"Home","title":"open62541.UA_HistoryReadResult_copy","text":"UA_HistoryReadResult_copy\"(src::Ptr{UA_HistoryReadResult}, dst::Ptr{UA_HistoryReadResult})::UA_STATUSCODE\nUA_HistoryReadResult_copy\"(src::UA_HistoryReadResult, dst::Ptr{UA_HistoryReadResult})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadResult_delete-Tuple{Ptr{UA_HistoryReadResult}}","page":"Home","title":"open62541.UA_HistoryReadResult_delete","text":"UA_HistoryReadResult_delete(x::Ptr{UA_HistoryReadResult})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadResult_deleteMembers-Tuple{Ptr{UA_HistoryReadResult}}","page":"Home","title":"open62541.UA_HistoryReadResult_deleteMembers","text":"UA_HistoryReadResult_deleteMembers(x::Ptr{UA_HistoryReadResult})\n\n(deprecated, use UA_HistoryReadResult_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_HistoryReadResult_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadResult_init-Tuple{Ptr{UA_HistoryReadResult}}","page":"Home","title":"open62541.UA_HistoryReadResult_init","text":"UA_HistoryReadResult_init\"(x::Ptr{UA_HistoryReadResult})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadResult_new-Tuple{}","page":"Home","title":"open62541.UA_HistoryReadResult_new","text":"UA_HistoryReadResult_new\"()::Ptr{UA_HistoryReadResult}\n\ncreates and initializes a UA_HistoryReadResult object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_HistoryReadResult_delete(x::Ptr{UA_HistoryReadResult})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadValueId_clear-Tuple{Ptr{UA_HistoryReadValueId}}","page":"Home","title":"open62541.UA_HistoryReadValueId_clear","text":"UA_HistoryReadValueId_clear\"(x::Ptr{UA_HistoryReadValueId})\n\ndeletes the dynamically allocated content of the object x and calls UA_HistoryReadValueId_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadValueId_copy-Tuple{UA_HistoryReadValueId, Ptr{UA_HistoryReadValueId}}","page":"Home","title":"open62541.UA_HistoryReadValueId_copy","text":"UA_HistoryReadValueId_copy\"(src::Ptr{UA_HistoryReadValueId}, dst::Ptr{UA_HistoryReadValueId})::UA_STATUSCODE\nUA_HistoryReadValueId_copy\"(src::UA_HistoryReadValueId, dst::Ptr{UA_HistoryReadValueId})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadValueId_delete-Tuple{Ptr{UA_HistoryReadValueId}}","page":"Home","title":"open62541.UA_HistoryReadValueId_delete","text":"UA_HistoryReadValueId_delete(x::Ptr{UA_HistoryReadValueId})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadValueId_deleteMembers-Tuple{Ptr{UA_HistoryReadValueId}}","page":"Home","title":"open62541.UA_HistoryReadValueId_deleteMembers","text":"UA_HistoryReadValueId_deleteMembers(x::Ptr{UA_HistoryReadValueId})\n\n(deprecated, use UA_HistoryReadValueId_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_HistoryReadValueId_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadValueId_init-Tuple{Ptr{UA_HistoryReadValueId}}","page":"Home","title":"open62541.UA_HistoryReadValueId_init","text":"UA_HistoryReadValueId_init\"(x::Ptr{UA_HistoryReadValueId})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryReadValueId_new-Tuple{}","page":"Home","title":"open62541.UA_HistoryReadValueId_new","text":"UA_HistoryReadValueId_new\"()::Ptr{UA_HistoryReadValueId}\n\ncreates and initializes a UA_HistoryReadValueId object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_HistoryReadValueId_delete(x::Ptr{UA_HistoryReadValueId})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateRequest_clear-Tuple{Ptr{UA_HistoryUpdateRequest}}","page":"Home","title":"open62541.UA_HistoryUpdateRequest_clear","text":"UA_HistoryUpdateRequest_clear\"(x::Ptr{UA_HistoryUpdateRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_HistoryUpdateRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateRequest_copy-Tuple{UA_HistoryUpdateRequest, Ptr{UA_HistoryUpdateRequest}}","page":"Home","title":"open62541.UA_HistoryUpdateRequest_copy","text":"UA_HistoryUpdateRequest_copy\"(src::Ptr{UA_HistoryUpdateRequest}, dst::Ptr{UA_HistoryUpdateRequest})::UA_STATUSCODE\nUA_HistoryUpdateRequest_copy\"(src::UA_HistoryUpdateRequest, dst::Ptr{UA_HistoryUpdateRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateRequest_delete-Tuple{Ptr{UA_HistoryUpdateRequest}}","page":"Home","title":"open62541.UA_HistoryUpdateRequest_delete","text":"UA_HistoryUpdateRequest_delete(x::Ptr{UA_HistoryUpdateRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateRequest_deleteMembers-Tuple{Ptr{UA_HistoryUpdateRequest}}","page":"Home","title":"open62541.UA_HistoryUpdateRequest_deleteMembers","text":"UA_HistoryUpdateRequest_deleteMembers(x::Ptr{UA_HistoryUpdateRequest})\n\n(deprecated, use UA_HistoryUpdateRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_HistoryUpdateRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateRequest_init-Tuple{Ptr{UA_HistoryUpdateRequest}}","page":"Home","title":"open62541.UA_HistoryUpdateRequest_init","text":"UA_HistoryUpdateRequest_init\"(x::Ptr{UA_HistoryUpdateRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateRequest_new-Tuple{}","page":"Home","title":"open62541.UA_HistoryUpdateRequest_new","text":"UA_HistoryUpdateRequest_new\"()::Ptr{UA_HistoryUpdateRequest}\n\ncreates and initializes a UA_HistoryUpdateRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_HistoryUpdateRequest_delete(x::Ptr{UA_HistoryUpdateRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateResponse_clear-Tuple{Ptr{UA_HistoryUpdateResponse}}","page":"Home","title":"open62541.UA_HistoryUpdateResponse_clear","text":"UA_HistoryUpdateResponse_clear\"(x::Ptr{UA_HistoryUpdateResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_HistoryUpdateResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateResponse_copy-Tuple{UA_HistoryUpdateResponse, Ptr{UA_HistoryUpdateResponse}}","page":"Home","title":"open62541.UA_HistoryUpdateResponse_copy","text":"UA_HistoryUpdateResponse_copy\"(src::Ptr{UA_HistoryUpdateResponse}, dst::Ptr{UA_HistoryUpdateResponse})::UA_STATUSCODE\nUA_HistoryUpdateResponse_copy\"(src::UA_HistoryUpdateResponse, dst::Ptr{UA_HistoryUpdateResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateResponse_delete-Tuple{Ptr{UA_HistoryUpdateResponse}}","page":"Home","title":"open62541.UA_HistoryUpdateResponse_delete","text":"UA_HistoryUpdateResponse_delete(x::Ptr{UA_HistoryUpdateResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateResponse_deleteMembers-Tuple{Ptr{UA_HistoryUpdateResponse}}","page":"Home","title":"open62541.UA_HistoryUpdateResponse_deleteMembers","text":"UA_HistoryUpdateResponse_deleteMembers(x::Ptr{UA_HistoryUpdateResponse})\n\n(deprecated, use UA_HistoryUpdateResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_HistoryUpdateResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateResponse_init-Tuple{Ptr{UA_HistoryUpdateResponse}}","page":"Home","title":"open62541.UA_HistoryUpdateResponse_init","text":"UA_HistoryUpdateResponse_init\"(x::Ptr{UA_HistoryUpdateResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateResponse_new-Tuple{}","page":"Home","title":"open62541.UA_HistoryUpdateResponse_new","text":"UA_HistoryUpdateResponse_new\"()::Ptr{UA_HistoryUpdateResponse}\n\ncreates and initializes a UA_HistoryUpdateResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_HistoryUpdateResponse_delete(x::Ptr{UA_HistoryUpdateResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateResult_clear-Tuple{Ptr{UA_HistoryUpdateResult}}","page":"Home","title":"open62541.UA_HistoryUpdateResult_clear","text":"UA_HistoryUpdateResult_clear\"(x::Ptr{UA_HistoryUpdateResult})\n\ndeletes the dynamically allocated content of the object x and calls UA_HistoryUpdateResult_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateResult_copy-Tuple{UA_HistoryUpdateResult, Ptr{UA_HistoryUpdateResult}}","page":"Home","title":"open62541.UA_HistoryUpdateResult_copy","text":"UA_HistoryUpdateResult_copy\"(src::Ptr{UA_HistoryUpdateResult}, dst::Ptr{UA_HistoryUpdateResult})::UA_STATUSCODE\nUA_HistoryUpdateResult_copy\"(src::UA_HistoryUpdateResult, dst::Ptr{UA_HistoryUpdateResult})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateResult_delete-Tuple{Ptr{UA_HistoryUpdateResult}}","page":"Home","title":"open62541.UA_HistoryUpdateResult_delete","text":"UA_HistoryUpdateResult_delete(x::Ptr{UA_HistoryUpdateResult})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateResult_deleteMembers-Tuple{Ptr{UA_HistoryUpdateResult}}","page":"Home","title":"open62541.UA_HistoryUpdateResult_deleteMembers","text":"UA_HistoryUpdateResult_deleteMembers(x::Ptr{UA_HistoryUpdateResult})\n\n(deprecated, use UA_HistoryUpdateResult_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_HistoryUpdateResult_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateResult_init-Tuple{Ptr{UA_HistoryUpdateResult}}","page":"Home","title":"open62541.UA_HistoryUpdateResult_init","text":"UA_HistoryUpdateResult_init\"(x::Ptr{UA_HistoryUpdateResult})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateResult_new-Tuple{}","page":"Home","title":"open62541.UA_HistoryUpdateResult_new","text":"UA_HistoryUpdateResult_new\"()::Ptr{UA_HistoryUpdateResult}\n\ncreates and initializes a UA_HistoryUpdateResult object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_HistoryUpdateResult_delete(x::Ptr{UA_HistoryUpdateResult})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateType_clear-Tuple{Ptr{UA_HistoryUpdateType}}","page":"Home","title":"open62541.UA_HistoryUpdateType_clear","text":"UA_HistoryUpdateType_clear\"(x::Ptr{UA_HistoryUpdateType})\n\ndeletes the dynamically allocated content of the object x and calls UA_HistoryUpdateType_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateType_copy-Tuple{UA_HistoryUpdateType, Ptr{UA_HistoryUpdateType}}","page":"Home","title":"open62541.UA_HistoryUpdateType_copy","text":"UA_HistoryUpdateType_copy\"(src::Ptr{UA_HistoryUpdateType}, dst::Ptr{UA_HistoryUpdateType})::UA_STATUSCODE\nUA_HistoryUpdateType_copy\"(src::UA_HistoryUpdateType, dst::Ptr{UA_HistoryUpdateType})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateType_delete-Tuple{Ptr{UA_HistoryUpdateType}}","page":"Home","title":"open62541.UA_HistoryUpdateType_delete","text":"UA_HistoryUpdateType_delete(x::Ptr{UA_HistoryUpdateType})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateType_deleteMembers-Tuple{Ptr{UA_HistoryUpdateType}}","page":"Home","title":"open62541.UA_HistoryUpdateType_deleteMembers","text":"UA_HistoryUpdateType_deleteMembers(x::Ptr{UA_HistoryUpdateType})\n\n(deprecated, use UA_HistoryUpdateType_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_HistoryUpdateType_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateType_init-Tuple{Ptr{UA_HistoryUpdateType}}","page":"Home","title":"open62541.UA_HistoryUpdateType_init","text":"UA_HistoryUpdateType_init\"(x::Ptr{UA_HistoryUpdateType})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_HistoryUpdateType_new-Tuple{}","page":"Home","title":"open62541.UA_HistoryUpdateType_new","text":"UA_HistoryUpdateType_new\"()::Ptr{UA_HistoryUpdateType}\n\ncreates and initializes a UA_HistoryUpdateType object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_HistoryUpdateType_delete(x::Ptr{UA_HistoryUpdateType})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int16_clear-Tuple{Ptr{Int16}}","page":"Home","title":"open62541.UA_Int16_clear","text":"Int16_clear\"(x::Ptr{Int16})\n\ndeletes the dynamically allocated content of the object x and calls Int16_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int16_copy-Tuple{Int16, Ptr{Int16}}","page":"Home","title":"open62541.UA_Int16_copy","text":"Int16_copy\"(src::Ptr{Int16}, dst::Ptr{Int16})::UA_STATUSCODE\nInt16_copy\"(src::Int16, dst::Ptr{Int16})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int16_delete-Tuple{Ptr{Int16}}","page":"Home","title":"open62541.UA_Int16_delete","text":"Int16_delete(x::Ptr{Int16})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int16_deleteMembers-Tuple{Ptr{Int16}}","page":"Home","title":"open62541.UA_Int16_deleteMembers","text":"Int16_deleteMembers(x::Ptr{Int16})\n\n(deprecated, use Int16_clear(x) instead) deletes the dynamically allocated content of the object x and calls Int16_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int16_init-Tuple{Ptr{Int16}}","page":"Home","title":"open62541.UA_Int16_init","text":"Int16_init\"(x::Ptr{Int16})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int16_new-Tuple{}","page":"Home","title":"open62541.UA_Int16_new","text":"Int16_new\"()::Ptr{Int16}\n\ncreates and initializes a Int16 object whose memory is allocated by C. After use, it needs to be  cleaned up with Int16_delete(x::Ptr{Int16})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int32_clear-Tuple{Ptr{Int32}}","page":"Home","title":"open62541.UA_Int32_clear","text":"Int32_clear\"(x::Ptr{Int32})\n\ndeletes the dynamically allocated content of the object x and calls Int32_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int32_copy-Tuple{Int32, Ptr{Int32}}","page":"Home","title":"open62541.UA_Int32_copy","text":"Int32_copy\"(src::Ptr{Int32}, dst::Ptr{Int32})::UA_STATUSCODE\nInt32_copy\"(src::Int32, dst::Ptr{Int32})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int32_delete-Tuple{Ptr{Int32}}","page":"Home","title":"open62541.UA_Int32_delete","text":"Int32_delete(x::Ptr{Int32})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int32_deleteMembers-Tuple{Ptr{Int32}}","page":"Home","title":"open62541.UA_Int32_deleteMembers","text":"Int32_deleteMembers(x::Ptr{Int32})\n\n(deprecated, use Int32_clear(x) instead) deletes the dynamically allocated content of the object x and calls Int32_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int32_init-Tuple{Ptr{Int32}}","page":"Home","title":"open62541.UA_Int32_init","text":"Int32_init\"(x::Ptr{Int32})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int32_new-Tuple{}","page":"Home","title":"open62541.UA_Int32_new","text":"Int32_new\"()::Ptr{Int32}\n\ncreates and initializes a Int32 object whose memory is allocated by C. After use, it needs to be  cleaned up with Int32_delete(x::Ptr{Int32})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int64_clear-Tuple{Ptr{Int64}}","page":"Home","title":"open62541.UA_Int64_clear","text":"Int64_clear\"(x::Ptr{Int64})\n\ndeletes the dynamically allocated content of the object x and calls Int64_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int64_copy-Tuple{Int64, Ptr{Int64}}","page":"Home","title":"open62541.UA_Int64_copy","text":"Int64_copy\"(src::Ptr{Int64}, dst::Ptr{Int64})::UA_STATUSCODE\nInt64_copy\"(src::Int64, dst::Ptr{Int64})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int64_delete-Tuple{Ptr{Int64}}","page":"Home","title":"open62541.UA_Int64_delete","text":"Int64_delete(x::Ptr{Int64})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int64_deleteMembers-Tuple{Ptr{Int64}}","page":"Home","title":"open62541.UA_Int64_deleteMembers","text":"Int64_deleteMembers(x::Ptr{Int64})\n\n(deprecated, use Int64_clear(x) instead) deletes the dynamically allocated content of the object x and calls Int64_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int64_init-Tuple{Ptr{Int64}}","page":"Home","title":"open62541.UA_Int64_init","text":"Int64_init\"(x::Ptr{Int64})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Int64_new-Tuple{}","page":"Home","title":"open62541.UA_Int64_new","text":"Int64_new\"()::Ptr{Int64}\n\ncreates and initializes a Int64 object whose memory is allocated by C. After use, it needs to be  cleaned up with Int64_delete(x::Ptr{Int64})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_IssuedIdentityToken_clear-Tuple{Ptr{UA_IssuedIdentityToken}}","page":"Home","title":"open62541.UA_IssuedIdentityToken_clear","text":"UA_IssuedIdentityToken_clear\"(x::Ptr{UA_IssuedIdentityToken})\n\ndeletes the dynamically allocated content of the object x and calls UA_IssuedIdentityToken_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_IssuedIdentityToken_copy-Tuple{UA_IssuedIdentityToken, Ptr{UA_IssuedIdentityToken}}","page":"Home","title":"open62541.UA_IssuedIdentityToken_copy","text":"UA_IssuedIdentityToken_copy\"(src::Ptr{UA_IssuedIdentityToken}, dst::Ptr{UA_IssuedIdentityToken})::UA_STATUSCODE\nUA_IssuedIdentityToken_copy\"(src::UA_IssuedIdentityToken, dst::Ptr{UA_IssuedIdentityToken})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_IssuedIdentityToken_delete-Tuple{Ptr{UA_IssuedIdentityToken}}","page":"Home","title":"open62541.UA_IssuedIdentityToken_delete","text":"UA_IssuedIdentityToken_delete(x::Ptr{UA_IssuedIdentityToken})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_IssuedIdentityToken_deleteMembers-Tuple{Ptr{UA_IssuedIdentityToken}}","page":"Home","title":"open62541.UA_IssuedIdentityToken_deleteMembers","text":"UA_IssuedIdentityToken_deleteMembers(x::Ptr{UA_IssuedIdentityToken})\n\n(deprecated, use UA_IssuedIdentityToken_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_IssuedIdentityToken_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_IssuedIdentityToken_init-Tuple{Ptr{UA_IssuedIdentityToken}}","page":"Home","title":"open62541.UA_IssuedIdentityToken_init","text":"UA_IssuedIdentityToken_init\"(x::Ptr{UA_IssuedIdentityToken})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_IssuedIdentityToken_new-Tuple{}","page":"Home","title":"open62541.UA_IssuedIdentityToken_new","text":"UA_IssuedIdentityToken_new\"()::Ptr{UA_IssuedIdentityToken}\n\ncreates and initializes a UA_IssuedIdentityToken object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_IssuedIdentityToken_delete(x::Ptr{UA_IssuedIdentityToken})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_KeyValueMap_setQualified-NTuple{4, Any}","page":"Home","title":"open62541.UA_KeyValueMap_setQualified","text":"UA_KeyValueMap_setQualified(map, mapSize, key, value)\n\nKey Value Map ––––––- Helper functions to work with configuration parameters in an array of UA_KeyValuePair. Lookup is linear. So this is for small numbers of keys.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_KeyValuePair_clear-Tuple{Ptr{UA_KeyValuePair}}","page":"Home","title":"open62541.UA_KeyValuePair_clear","text":"UA_KeyValuePair_clear\"(x::Ptr{UA_KeyValuePair})\n\ndeletes the dynamically allocated content of the object x and calls UA_KeyValuePair_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_KeyValuePair_copy-Tuple{UA_KeyValuePair, Ptr{UA_KeyValuePair}}","page":"Home","title":"open62541.UA_KeyValuePair_copy","text":"UA_KeyValuePair_copy\"(src::Ptr{UA_KeyValuePair}, dst::Ptr{UA_KeyValuePair})::UA_STATUSCODE\nUA_KeyValuePair_copy\"(src::UA_KeyValuePair, dst::Ptr{UA_KeyValuePair})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_KeyValuePair_delete-Tuple{Ptr{UA_KeyValuePair}}","page":"Home","title":"open62541.UA_KeyValuePair_delete","text":"UA_KeyValuePair_delete(x::Ptr{UA_KeyValuePair})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_KeyValuePair_deleteMembers-Tuple{Ptr{UA_KeyValuePair}}","page":"Home","title":"open62541.UA_KeyValuePair_deleteMembers","text":"UA_KeyValuePair_deleteMembers(x::Ptr{UA_KeyValuePair})\n\n(deprecated, use UA_KeyValuePair_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_KeyValuePair_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_KeyValuePair_init-Tuple{Ptr{UA_KeyValuePair}}","page":"Home","title":"open62541.UA_KeyValuePair_init","text":"UA_KeyValuePair_init\"(x::Ptr{UA_KeyValuePair})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_KeyValuePair_new-Tuple{}","page":"Home","title":"open62541.UA_KeyValuePair_new","text":"UA_KeyValuePair_new\"()::Ptr{UA_KeyValuePair}\n\ncreates and initializes a UA_KeyValuePair object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_KeyValuePair_delete(x::Ptr{UA_KeyValuePair})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LiteralOperand_clear-Tuple{Ptr{UA_LiteralOperand}}","page":"Home","title":"open62541.UA_LiteralOperand_clear","text":"UA_LiteralOperand_clear\"(x::Ptr{UA_LiteralOperand})\n\ndeletes the dynamically allocated content of the object x and calls UA_LiteralOperand_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LiteralOperand_copy-Tuple{UA_LiteralOperand, Ptr{UA_LiteralOperand}}","page":"Home","title":"open62541.UA_LiteralOperand_copy","text":"UA_LiteralOperand_copy\"(src::Ptr{UA_LiteralOperand}, dst::Ptr{UA_LiteralOperand})::UA_STATUSCODE\nUA_LiteralOperand_copy\"(src::UA_LiteralOperand, dst::Ptr{UA_LiteralOperand})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LiteralOperand_delete-Tuple{Ptr{UA_LiteralOperand}}","page":"Home","title":"open62541.UA_LiteralOperand_delete","text":"UA_LiteralOperand_delete(x::Ptr{UA_LiteralOperand})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LiteralOperand_deleteMembers-Tuple{Ptr{UA_LiteralOperand}}","page":"Home","title":"open62541.UA_LiteralOperand_deleteMembers","text":"UA_LiteralOperand_deleteMembers(x::Ptr{UA_LiteralOperand})\n\n(deprecated, use UA_LiteralOperand_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_LiteralOperand_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LiteralOperand_init-Tuple{Ptr{UA_LiteralOperand}}","page":"Home","title":"open62541.UA_LiteralOperand_init","text":"UA_LiteralOperand_init\"(x::Ptr{UA_LiteralOperand})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LiteralOperand_new-Tuple{}","page":"Home","title":"open62541.UA_LiteralOperand_new","text":"UA_LiteralOperand_new\"()::Ptr{UA_LiteralOperand}\n\ncreates and initializes a UA_LiteralOperand object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_LiteralOperand_delete(x::Ptr{UA_LiteralOperand})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LocaleId_clear-Tuple{Ptr{UA_String}}","page":"Home","title":"open62541.UA_LocaleId_clear","text":"UA_String_clear\"(x::Ptr{UA_String})\n\ndeletes the dynamically allocated content of the object x and calls UA_String_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LocaleId_copy-Tuple{UA_String, Ptr{UA_String}}","page":"Home","title":"open62541.UA_LocaleId_copy","text":"UA_String_copy\"(src::Ptr{UA_String}, dst::Ptr{UA_String})::UA_STATUSCODE\nUA_String_copy\"(src::UA_String, dst::Ptr{UA_String})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LocaleId_delete-Tuple{Ptr{UA_String}}","page":"Home","title":"open62541.UA_LocaleId_delete","text":"UA_String_delete(x::Ptr{UA_String})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LocaleId_deleteMembers-Tuple{Ptr{UA_String}}","page":"Home","title":"open62541.UA_LocaleId_deleteMembers","text":"UA_String_deleteMembers(x::Ptr{UA_String})\n\n(deprecated, use UA_String_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_String_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LocaleId_init-Tuple{Ptr{UA_String}}","page":"Home","title":"open62541.UA_LocaleId_init","text":"UA_String_init\"(x::Ptr{UA_String})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LocaleId_new-Tuple{}","page":"Home","title":"open62541.UA_LocaleId_new","text":"UA_String_new\"()::Ptr{UA_String}\n\ncreates and initializes a UA_String object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_String_delete(x::Ptr{UA_String})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LocalizedText_clear-Tuple{Ptr{UA_LocalizedText}}","page":"Home","title":"open62541.UA_LocalizedText_clear","text":"UA_LocalizedText_clear\"(x::Ptr{UA_LocalizedText})\n\ndeletes the dynamically allocated content of the object x and calls UA_LocalizedText_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LocalizedText_copy-Tuple{UA_LocalizedText, Ptr{UA_LocalizedText}}","page":"Home","title":"open62541.UA_LocalizedText_copy","text":"UA_LocalizedText_copy\"(src::Ptr{UA_LocalizedText}, dst::Ptr{UA_LocalizedText})::UA_STATUSCODE\nUA_LocalizedText_copy\"(src::UA_LocalizedText, dst::Ptr{UA_LocalizedText})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LocalizedText_delete-Tuple{Ptr{UA_LocalizedText}}","page":"Home","title":"open62541.UA_LocalizedText_delete","text":"UA_LocalizedText_delete(x::Ptr{UA_LocalizedText})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LocalizedText_deleteMembers-Tuple{Ptr{UA_LocalizedText}}","page":"Home","title":"open62541.UA_LocalizedText_deleteMembers","text":"UA_LocalizedText_deleteMembers(x::Ptr{UA_LocalizedText})\n\n(deprecated, use UA_LocalizedText_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_LocalizedText_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LocalizedText_init-Tuple{Ptr{UA_LocalizedText}}","page":"Home","title":"open62541.UA_LocalizedText_init","text":"UA_LocalizedText_init\"(x::Ptr{UA_LocalizedText})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_LocalizedText_new-Tuple{}","page":"Home","title":"open62541.UA_LocalizedText_new","text":"UA_LocalizedText_new\"()::Ptr{UA_LocalizedText}\n\ncreates and initializes a UA_LocalizedText object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_LocalizedText_delete(x::Ptr{UA_LocalizedText})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MessageSecurityMode_clear-Tuple{Ptr{UA_MessageSecurityMode}}","page":"Home","title":"open62541.UA_MessageSecurityMode_clear","text":"UA_MessageSecurityMode_clear\"(x::Ptr{UA_MessageSecurityMode})\n\ndeletes the dynamically allocated content of the object x and calls UA_MessageSecurityMode_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MessageSecurityMode_copy-Tuple{UA_MessageSecurityMode, Ptr{UA_MessageSecurityMode}}","page":"Home","title":"open62541.UA_MessageSecurityMode_copy","text":"UA_MessageSecurityMode_copy\"(src::Ptr{UA_MessageSecurityMode}, dst::Ptr{UA_MessageSecurityMode})::UA_STATUSCODE\nUA_MessageSecurityMode_copy\"(src::UA_MessageSecurityMode, dst::Ptr{UA_MessageSecurityMode})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MessageSecurityMode_delete-Tuple{Ptr{UA_MessageSecurityMode}}","page":"Home","title":"open62541.UA_MessageSecurityMode_delete","text":"UA_MessageSecurityMode_delete(x::Ptr{UA_MessageSecurityMode})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MessageSecurityMode_deleteMembers-Tuple{Ptr{UA_MessageSecurityMode}}","page":"Home","title":"open62541.UA_MessageSecurityMode_deleteMembers","text":"UA_MessageSecurityMode_deleteMembers(x::Ptr{UA_MessageSecurityMode})\n\n(deprecated, use UA_MessageSecurityMode_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_MessageSecurityMode_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MessageSecurityMode_init-Tuple{Ptr{UA_MessageSecurityMode}}","page":"Home","title":"open62541.UA_MessageSecurityMode_init","text":"UA_MessageSecurityMode_init\"(x::Ptr{UA_MessageSecurityMode})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MessageSecurityMode_new-Tuple{}","page":"Home","title":"open62541.UA_MessageSecurityMode_new","text":"UA_MessageSecurityMode_new\"()::Ptr{UA_MessageSecurityMode}\n\ncreates and initializes a UA_MessageSecurityMode object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_MessageSecurityMode_delete(x::Ptr{UA_MessageSecurityMode})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MethodAttributes_clear-Tuple{Ptr{UA_MethodAttributes}}","page":"Home","title":"open62541.UA_MethodAttributes_clear","text":"UA_MethodAttributes_clear\"(x::Ptr{UA_MethodAttributes})\n\ndeletes the dynamically allocated content of the object x and calls UA_MethodAttributes_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MethodAttributes_copy-Tuple{UA_MethodAttributes, Ptr{UA_MethodAttributes}}","page":"Home","title":"open62541.UA_MethodAttributes_copy","text":"UA_MethodAttributes_copy\"(src::Ptr{UA_MethodAttributes}, dst::Ptr{UA_MethodAttributes})::UA_STATUSCODE\nUA_MethodAttributes_copy\"(src::UA_MethodAttributes, dst::Ptr{UA_MethodAttributes})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MethodAttributes_delete-Tuple{Ptr{UA_MethodAttributes}}","page":"Home","title":"open62541.UA_MethodAttributes_delete","text":"UA_MethodAttributes_delete(x::Ptr{UA_MethodAttributes})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MethodAttributes_deleteMembers-Tuple{Ptr{UA_MethodAttributes}}","page":"Home","title":"open62541.UA_MethodAttributes_deleteMembers","text":"UA_MethodAttributes_deleteMembers(x::Ptr{UA_MethodAttributes})\n\n(deprecated, use UA_MethodAttributes_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_MethodAttributes_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MethodAttributes_generate-Tuple{}","page":"Home","title":"open62541.UA_MethodAttributes_generate","text":"UA_MethodAttributes_generate(; displayname::AbstractString,\n    description::AbstractString, localization::AbstractString = \"en-US\",\n    writemask::Union{Nothing, UInt32} = nothing,\n    userwritemask::Union{Nothing, UInt32} = nothing,\n    isabstract::Union{Nothing, Bool} = nothing)::Ptr{UA_MethodAttributes}\n\ngenerates a UA_MethodAttributes object. Memory for the object is allocated by C and needs to be cleaned up by calling UA_MethodAttributes_delete(x) after usage.\n\nFor keywords given as nothing, the respective default value is used, see UA_MethodAttributes_default[]\n\nSee also UA_WRITEMASK and UA_USERWRITEMASK for information on how to generate the respective keyword inputs.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MethodAttributes_init-Tuple{Ptr{UA_MethodAttributes}}","page":"Home","title":"open62541.UA_MethodAttributes_init","text":"UA_MethodAttributes_init\"(x::Ptr{UA_MethodAttributes})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MethodAttributes_new-Tuple{}","page":"Home","title":"open62541.UA_MethodAttributes_new","text":"UA_MethodAttributes_new\"()::Ptr{UA_MethodAttributes}\n\ncreates and initializes a UA_MethodAttributes object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_MethodAttributes_delete(x::Ptr{UA_MethodAttributes})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MethodCallback_generate-Tuple{Function}","page":"Home","title":"open62541.UA_MethodCallback_generate","text":"UA_MethodCallback_generate(f::Function)\n\ncreates a UA_MethodCallback that can be attached to a method node using UA_Server_addMethodNode.\n\nf must be a Julia function with the following signature: f(server::Ptr{UA_Server}, sessionId::Ptr{UA_NodeId}), sessionContext::Ptr{Cvoid}`,   methodId::Ptr{UA_NodeId}, methodContext::Ptr{Cvoid}, objectId::Ptr{UA_NodeId},   objectContext::Ptr{Cvoid}, inputSize::Csize_t, input::Ptr{UA_Variant},   outputSize::Csize_t, output::Ptr{UA_Variant})::UA_StatusCode\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModificationInfo_clear-Tuple{Ptr{UA_ModificationInfo}}","page":"Home","title":"open62541.UA_ModificationInfo_clear","text":"UA_ModificationInfo_clear\"(x::Ptr{UA_ModificationInfo})\n\ndeletes the dynamically allocated content of the object x and calls UA_ModificationInfo_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModificationInfo_copy-Tuple{UA_ModificationInfo, Ptr{UA_ModificationInfo}}","page":"Home","title":"open62541.UA_ModificationInfo_copy","text":"UA_ModificationInfo_copy\"(src::Ptr{UA_ModificationInfo}, dst::Ptr{UA_ModificationInfo})::UA_STATUSCODE\nUA_ModificationInfo_copy\"(src::UA_ModificationInfo, dst::Ptr{UA_ModificationInfo})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModificationInfo_delete-Tuple{Ptr{UA_ModificationInfo}}","page":"Home","title":"open62541.UA_ModificationInfo_delete","text":"UA_ModificationInfo_delete(x::Ptr{UA_ModificationInfo})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModificationInfo_deleteMembers-Tuple{Ptr{UA_ModificationInfo}}","page":"Home","title":"open62541.UA_ModificationInfo_deleteMembers","text":"UA_ModificationInfo_deleteMembers(x::Ptr{UA_ModificationInfo})\n\n(deprecated, use UA_ModificationInfo_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ModificationInfo_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModificationInfo_init-Tuple{Ptr{UA_ModificationInfo}}","page":"Home","title":"open62541.UA_ModificationInfo_init","text":"UA_ModificationInfo_init\"(x::Ptr{UA_ModificationInfo})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModificationInfo_new-Tuple{}","page":"Home","title":"open62541.UA_ModificationInfo_new","text":"UA_ModificationInfo_new\"()::Ptr{UA_ModificationInfo}\n\ncreates and initializes a UA_ModificationInfo object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ModificationInfo_delete(x::Ptr{UA_ModificationInfo})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifyMonitoredItemsRequest_clear-Tuple{Ptr{UA_ModifyMonitoredItemsRequest}}","page":"Home","title":"open62541.UA_ModifyMonitoredItemsRequest_clear","text":"UA_ModifyMonitoredItemsRequest_clear\"(x::Ptr{UA_ModifyMonitoredItemsRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_ModifyMonitoredItemsRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifyMonitoredItemsRequest_copy-Tuple{UA_ModifyMonitoredItemsRequest, Ptr{UA_ModifyMonitoredItemsRequest}}","page":"Home","title":"open62541.UA_ModifyMonitoredItemsRequest_copy","text":"UA_ModifyMonitoredItemsRequest_copy\"(src::Ptr{UA_ModifyMonitoredItemsRequest}, dst::Ptr{UA_ModifyMonitoredItemsRequest})::UA_STATUSCODE\nUA_ModifyMonitoredItemsRequest_copy\"(src::UA_ModifyMonitoredItemsRequest, dst::Ptr{UA_ModifyMonitoredItemsRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifyMonitoredItemsRequest_delete-Tuple{Ptr{UA_ModifyMonitoredItemsRequest}}","page":"Home","title":"open62541.UA_ModifyMonitoredItemsRequest_delete","text":"UA_ModifyMonitoredItemsRequest_delete(x::Ptr{UA_ModifyMonitoredItemsRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifyMonitoredItemsRequest_deleteMembers-Tuple{Ptr{UA_ModifyMonitoredItemsRequest}}","page":"Home","title":"open62541.UA_ModifyMonitoredItemsRequest_deleteMembers","text":"UA_ModifyMonitoredItemsRequest_deleteMembers(x::Ptr{UA_ModifyMonitoredItemsRequest})\n\n(deprecated, use UA_ModifyMonitoredItemsRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ModifyMonitoredItemsRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifyMonitoredItemsRequest_init-Tuple{Ptr{UA_ModifyMonitoredItemsRequest}}","page":"Home","title":"open62541.UA_ModifyMonitoredItemsRequest_init","text":"UA_ModifyMonitoredItemsRequest_init\"(x::Ptr{UA_ModifyMonitoredItemsRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifyMonitoredItemsRequest_new-Tuple{}","page":"Home","title":"open62541.UA_ModifyMonitoredItemsRequest_new","text":"UA_ModifyMonitoredItemsRequest_new\"()::Ptr{UA_ModifyMonitoredItemsRequest}\n\ncreates and initializes a UA_ModifyMonitoredItemsRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ModifyMonitoredItemsRequest_delete(x::Ptr{UA_ModifyMonitoredItemsRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifyMonitoredItemsResponse_clear-Tuple{Ptr{UA_ModifyMonitoredItemsResponse}}","page":"Home","title":"open62541.UA_ModifyMonitoredItemsResponse_clear","text":"UA_ModifyMonitoredItemsResponse_clear\"(x::Ptr{UA_ModifyMonitoredItemsResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_ModifyMonitoredItemsResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifyMonitoredItemsResponse_copy-Tuple{UA_ModifyMonitoredItemsResponse, Ptr{UA_ModifyMonitoredItemsResponse}}","page":"Home","title":"open62541.UA_ModifyMonitoredItemsResponse_copy","text":"UA_ModifyMonitoredItemsResponse_copy\"(src::Ptr{UA_ModifyMonitoredItemsResponse}, dst::Ptr{UA_ModifyMonitoredItemsResponse})::UA_STATUSCODE\nUA_ModifyMonitoredItemsResponse_copy\"(src::UA_ModifyMonitoredItemsResponse, dst::Ptr{UA_ModifyMonitoredItemsResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifyMonitoredItemsResponse_delete-Tuple{Ptr{UA_ModifyMonitoredItemsResponse}}","page":"Home","title":"open62541.UA_ModifyMonitoredItemsResponse_delete","text":"UA_ModifyMonitoredItemsResponse_delete(x::Ptr{UA_ModifyMonitoredItemsResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifyMonitoredItemsResponse_deleteMembers-Tuple{Ptr{UA_ModifyMonitoredItemsResponse}}","page":"Home","title":"open62541.UA_ModifyMonitoredItemsResponse_deleteMembers","text":"UA_ModifyMonitoredItemsResponse_deleteMembers(x::Ptr{UA_ModifyMonitoredItemsResponse})\n\n(deprecated, use UA_ModifyMonitoredItemsResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ModifyMonitoredItemsResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifyMonitoredItemsResponse_init-Tuple{Ptr{UA_ModifyMonitoredItemsResponse}}","page":"Home","title":"open62541.UA_ModifyMonitoredItemsResponse_init","text":"UA_ModifyMonitoredItemsResponse_init\"(x::Ptr{UA_ModifyMonitoredItemsResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifyMonitoredItemsResponse_new-Tuple{}","page":"Home","title":"open62541.UA_ModifyMonitoredItemsResponse_new","text":"UA_ModifyMonitoredItemsResponse_new\"()::Ptr{UA_ModifyMonitoredItemsResponse}\n\ncreates and initializes a UA_ModifyMonitoredItemsResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ModifyMonitoredItemsResponse_delete(x::Ptr{UA_ModifyMonitoredItemsResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifySubscriptionRequest_clear-Tuple{Ptr{UA_ModifySubscriptionRequest}}","page":"Home","title":"open62541.UA_ModifySubscriptionRequest_clear","text":"UA_ModifySubscriptionRequest_clear\"(x::Ptr{UA_ModifySubscriptionRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_ModifySubscriptionRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifySubscriptionRequest_copy-Tuple{UA_ModifySubscriptionRequest, Ptr{UA_ModifySubscriptionRequest}}","page":"Home","title":"open62541.UA_ModifySubscriptionRequest_copy","text":"UA_ModifySubscriptionRequest_copy\"(src::Ptr{UA_ModifySubscriptionRequest}, dst::Ptr{UA_ModifySubscriptionRequest})::UA_STATUSCODE\nUA_ModifySubscriptionRequest_copy\"(src::UA_ModifySubscriptionRequest, dst::Ptr{UA_ModifySubscriptionRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifySubscriptionRequest_delete-Tuple{Ptr{UA_ModifySubscriptionRequest}}","page":"Home","title":"open62541.UA_ModifySubscriptionRequest_delete","text":"UA_ModifySubscriptionRequest_delete(x::Ptr{UA_ModifySubscriptionRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifySubscriptionRequest_deleteMembers-Tuple{Ptr{UA_ModifySubscriptionRequest}}","page":"Home","title":"open62541.UA_ModifySubscriptionRequest_deleteMembers","text":"UA_ModifySubscriptionRequest_deleteMembers(x::Ptr{UA_ModifySubscriptionRequest})\n\n(deprecated, use UA_ModifySubscriptionRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ModifySubscriptionRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifySubscriptionRequest_init-Tuple{Ptr{UA_ModifySubscriptionRequest}}","page":"Home","title":"open62541.UA_ModifySubscriptionRequest_init","text":"UA_ModifySubscriptionRequest_init\"(x::Ptr{UA_ModifySubscriptionRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifySubscriptionRequest_new-Tuple{}","page":"Home","title":"open62541.UA_ModifySubscriptionRequest_new","text":"UA_ModifySubscriptionRequest_new\"()::Ptr{UA_ModifySubscriptionRequest}\n\ncreates and initializes a UA_ModifySubscriptionRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ModifySubscriptionRequest_delete(x::Ptr{UA_ModifySubscriptionRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifySubscriptionResponse_clear-Tuple{Ptr{UA_ModifySubscriptionResponse}}","page":"Home","title":"open62541.UA_ModifySubscriptionResponse_clear","text":"UA_ModifySubscriptionResponse_clear\"(x::Ptr{UA_ModifySubscriptionResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_ModifySubscriptionResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifySubscriptionResponse_copy-Tuple{UA_ModifySubscriptionResponse, Ptr{UA_ModifySubscriptionResponse}}","page":"Home","title":"open62541.UA_ModifySubscriptionResponse_copy","text":"UA_ModifySubscriptionResponse_copy\"(src::Ptr{UA_ModifySubscriptionResponse}, dst::Ptr{UA_ModifySubscriptionResponse})::UA_STATUSCODE\nUA_ModifySubscriptionResponse_copy\"(src::UA_ModifySubscriptionResponse, dst::Ptr{UA_ModifySubscriptionResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifySubscriptionResponse_delete-Tuple{Ptr{UA_ModifySubscriptionResponse}}","page":"Home","title":"open62541.UA_ModifySubscriptionResponse_delete","text":"UA_ModifySubscriptionResponse_delete(x::Ptr{UA_ModifySubscriptionResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifySubscriptionResponse_deleteMembers-Tuple{Ptr{UA_ModifySubscriptionResponse}}","page":"Home","title":"open62541.UA_ModifySubscriptionResponse_deleteMembers","text":"UA_ModifySubscriptionResponse_deleteMembers(x::Ptr{UA_ModifySubscriptionResponse})\n\n(deprecated, use UA_ModifySubscriptionResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ModifySubscriptionResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifySubscriptionResponse_init-Tuple{Ptr{UA_ModifySubscriptionResponse}}","page":"Home","title":"open62541.UA_ModifySubscriptionResponse_init","text":"UA_ModifySubscriptionResponse_init\"(x::Ptr{UA_ModifySubscriptionResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ModifySubscriptionResponse_new-Tuple{}","page":"Home","title":"open62541.UA_ModifySubscriptionResponse_new","text":"UA_ModifySubscriptionResponse_new\"()::Ptr{UA_ModifySubscriptionResponse}\n\ncreates and initializes a UA_ModifySubscriptionResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ModifySubscriptionResponse_delete(x::Ptr{UA_ModifySubscriptionResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemCreateRequest_clear-Tuple{Ptr{UA_MonitoredItemCreateRequest}}","page":"Home","title":"open62541.UA_MonitoredItemCreateRequest_clear","text":"UA_MonitoredItemCreateRequest_clear\"(x::Ptr{UA_MonitoredItemCreateRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_MonitoredItemCreateRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemCreateRequest_copy-Tuple{UA_MonitoredItemCreateRequest, Ptr{UA_MonitoredItemCreateRequest}}","page":"Home","title":"open62541.UA_MonitoredItemCreateRequest_copy","text":"UA_MonitoredItemCreateRequest_copy\"(src::Ptr{UA_MonitoredItemCreateRequest}, dst::Ptr{UA_MonitoredItemCreateRequest})::UA_STATUSCODE\nUA_MonitoredItemCreateRequest_copy\"(src::UA_MonitoredItemCreateRequest, dst::Ptr{UA_MonitoredItemCreateRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemCreateRequest_delete-Tuple{Ptr{UA_MonitoredItemCreateRequest}}","page":"Home","title":"open62541.UA_MonitoredItemCreateRequest_delete","text":"UA_MonitoredItemCreateRequest_delete(x::Ptr{UA_MonitoredItemCreateRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemCreateRequest_deleteMembers-Tuple{Ptr{UA_MonitoredItemCreateRequest}}","page":"Home","title":"open62541.UA_MonitoredItemCreateRequest_deleteMembers","text":"UA_MonitoredItemCreateRequest_deleteMembers(x::Ptr{UA_MonitoredItemCreateRequest})\n\n(deprecated, use UA_MonitoredItemCreateRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_MonitoredItemCreateRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemCreateRequest_init-Tuple{Ptr{UA_MonitoredItemCreateRequest}}","page":"Home","title":"open62541.UA_MonitoredItemCreateRequest_init","text":"UA_MonitoredItemCreateRequest_init\"(x::Ptr{UA_MonitoredItemCreateRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemCreateRequest_new-Tuple{}","page":"Home","title":"open62541.UA_MonitoredItemCreateRequest_new","text":"UA_MonitoredItemCreateRequest_new\"()::Ptr{UA_MonitoredItemCreateRequest}\n\ncreates and initializes a UA_MonitoredItemCreateRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_MonitoredItemCreateRequest_delete(x::Ptr{UA_MonitoredItemCreateRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemCreateResult_clear-Tuple{Ptr{UA_MonitoredItemCreateResult}}","page":"Home","title":"open62541.UA_MonitoredItemCreateResult_clear","text":"UA_MonitoredItemCreateResult_clear\"(x::Ptr{UA_MonitoredItemCreateResult})\n\ndeletes the dynamically allocated content of the object x and calls UA_MonitoredItemCreateResult_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemCreateResult_copy-Tuple{UA_MonitoredItemCreateResult, Ptr{UA_MonitoredItemCreateResult}}","page":"Home","title":"open62541.UA_MonitoredItemCreateResult_copy","text":"UA_MonitoredItemCreateResult_copy\"(src::Ptr{UA_MonitoredItemCreateResult}, dst::Ptr{UA_MonitoredItemCreateResult})::UA_STATUSCODE\nUA_MonitoredItemCreateResult_copy\"(src::UA_MonitoredItemCreateResult, dst::Ptr{UA_MonitoredItemCreateResult})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemCreateResult_delete-Tuple{Ptr{UA_MonitoredItemCreateResult}}","page":"Home","title":"open62541.UA_MonitoredItemCreateResult_delete","text":"UA_MonitoredItemCreateResult_delete(x::Ptr{UA_MonitoredItemCreateResult})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemCreateResult_deleteMembers-Tuple{Ptr{UA_MonitoredItemCreateResult}}","page":"Home","title":"open62541.UA_MonitoredItemCreateResult_deleteMembers","text":"UA_MonitoredItemCreateResult_deleteMembers(x::Ptr{UA_MonitoredItemCreateResult})\n\n(deprecated, use UA_MonitoredItemCreateResult_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_MonitoredItemCreateResult_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemCreateResult_init-Tuple{Ptr{UA_MonitoredItemCreateResult}}","page":"Home","title":"open62541.UA_MonitoredItemCreateResult_init","text":"UA_MonitoredItemCreateResult_init\"(x::Ptr{UA_MonitoredItemCreateResult})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemCreateResult_new-Tuple{}","page":"Home","title":"open62541.UA_MonitoredItemCreateResult_new","text":"UA_MonitoredItemCreateResult_new\"()::Ptr{UA_MonitoredItemCreateResult}\n\ncreates and initializes a UA_MonitoredItemCreateResult object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_MonitoredItemCreateResult_delete(x::Ptr{UA_MonitoredItemCreateResult})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemModifyRequest_clear-Tuple{Ptr{UA_MonitoredItemModifyRequest}}","page":"Home","title":"open62541.UA_MonitoredItemModifyRequest_clear","text":"UA_MonitoredItemModifyRequest_clear\"(x::Ptr{UA_MonitoredItemModifyRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_MonitoredItemModifyRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemModifyRequest_copy-Tuple{UA_MonitoredItemModifyRequest, Ptr{UA_MonitoredItemModifyRequest}}","page":"Home","title":"open62541.UA_MonitoredItemModifyRequest_copy","text":"UA_MonitoredItemModifyRequest_copy\"(src::Ptr{UA_MonitoredItemModifyRequest}, dst::Ptr{UA_MonitoredItemModifyRequest})::UA_STATUSCODE\nUA_MonitoredItemModifyRequest_copy\"(src::UA_MonitoredItemModifyRequest, dst::Ptr{UA_MonitoredItemModifyRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemModifyRequest_delete-Tuple{Ptr{UA_MonitoredItemModifyRequest}}","page":"Home","title":"open62541.UA_MonitoredItemModifyRequest_delete","text":"UA_MonitoredItemModifyRequest_delete(x::Ptr{UA_MonitoredItemModifyRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemModifyRequest_deleteMembers-Tuple{Ptr{UA_MonitoredItemModifyRequest}}","page":"Home","title":"open62541.UA_MonitoredItemModifyRequest_deleteMembers","text":"UA_MonitoredItemModifyRequest_deleteMembers(x::Ptr{UA_MonitoredItemModifyRequest})\n\n(deprecated, use UA_MonitoredItemModifyRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_MonitoredItemModifyRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemModifyRequest_init-Tuple{Ptr{UA_MonitoredItemModifyRequest}}","page":"Home","title":"open62541.UA_MonitoredItemModifyRequest_init","text":"UA_MonitoredItemModifyRequest_init\"(x::Ptr{UA_MonitoredItemModifyRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemModifyRequest_new-Tuple{}","page":"Home","title":"open62541.UA_MonitoredItemModifyRequest_new","text":"UA_MonitoredItemModifyRequest_new\"()::Ptr{UA_MonitoredItemModifyRequest}\n\ncreates and initializes a UA_MonitoredItemModifyRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_MonitoredItemModifyRequest_delete(x::Ptr{UA_MonitoredItemModifyRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemModifyResult_clear-Tuple{Ptr{UA_MonitoredItemModifyResult}}","page":"Home","title":"open62541.UA_MonitoredItemModifyResult_clear","text":"UA_MonitoredItemModifyResult_clear\"(x::Ptr{UA_MonitoredItemModifyResult})\n\ndeletes the dynamically allocated content of the object x and calls UA_MonitoredItemModifyResult_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemModifyResult_copy-Tuple{UA_MonitoredItemModifyResult, Ptr{UA_MonitoredItemModifyResult}}","page":"Home","title":"open62541.UA_MonitoredItemModifyResult_copy","text":"UA_MonitoredItemModifyResult_copy\"(src::Ptr{UA_MonitoredItemModifyResult}, dst::Ptr{UA_MonitoredItemModifyResult})::UA_STATUSCODE\nUA_MonitoredItemModifyResult_copy\"(src::UA_MonitoredItemModifyResult, dst::Ptr{UA_MonitoredItemModifyResult})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemModifyResult_delete-Tuple{Ptr{UA_MonitoredItemModifyResult}}","page":"Home","title":"open62541.UA_MonitoredItemModifyResult_delete","text":"UA_MonitoredItemModifyResult_delete(x::Ptr{UA_MonitoredItemModifyResult})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemModifyResult_deleteMembers-Tuple{Ptr{UA_MonitoredItemModifyResult}}","page":"Home","title":"open62541.UA_MonitoredItemModifyResult_deleteMembers","text":"UA_MonitoredItemModifyResult_deleteMembers(x::Ptr{UA_MonitoredItemModifyResult})\n\n(deprecated, use UA_MonitoredItemModifyResult_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_MonitoredItemModifyResult_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemModifyResult_init-Tuple{Ptr{UA_MonitoredItemModifyResult}}","page":"Home","title":"open62541.UA_MonitoredItemModifyResult_init","text":"UA_MonitoredItemModifyResult_init\"(x::Ptr{UA_MonitoredItemModifyResult})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemModifyResult_new-Tuple{}","page":"Home","title":"open62541.UA_MonitoredItemModifyResult_new","text":"UA_MonitoredItemModifyResult_new\"()::Ptr{UA_MonitoredItemModifyResult}\n\ncreates and initializes a UA_MonitoredItemModifyResult object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_MonitoredItemModifyResult_delete(x::Ptr{UA_MonitoredItemModifyResult})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemNotification_clear-Tuple{Ptr{UA_MonitoredItemNotification}}","page":"Home","title":"open62541.UA_MonitoredItemNotification_clear","text":"UA_MonitoredItemNotification_clear\"(x::Ptr{UA_MonitoredItemNotification})\n\ndeletes the dynamically allocated content of the object x and calls UA_MonitoredItemNotification_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemNotification_copy-Tuple{UA_MonitoredItemNotification, Ptr{UA_MonitoredItemNotification}}","page":"Home","title":"open62541.UA_MonitoredItemNotification_copy","text":"UA_MonitoredItemNotification_copy\"(src::Ptr{UA_MonitoredItemNotification}, dst::Ptr{UA_MonitoredItemNotification})::UA_STATUSCODE\nUA_MonitoredItemNotification_copy\"(src::UA_MonitoredItemNotification, dst::Ptr{UA_MonitoredItemNotification})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemNotification_delete-Tuple{Ptr{UA_MonitoredItemNotification}}","page":"Home","title":"open62541.UA_MonitoredItemNotification_delete","text":"UA_MonitoredItemNotification_delete(x::Ptr{UA_MonitoredItemNotification})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemNotification_deleteMembers-Tuple{Ptr{UA_MonitoredItemNotification}}","page":"Home","title":"open62541.UA_MonitoredItemNotification_deleteMembers","text":"UA_MonitoredItemNotification_deleteMembers(x::Ptr{UA_MonitoredItemNotification})\n\n(deprecated, use UA_MonitoredItemNotification_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_MonitoredItemNotification_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemNotification_init-Tuple{Ptr{UA_MonitoredItemNotification}}","page":"Home","title":"open62541.UA_MonitoredItemNotification_init","text":"UA_MonitoredItemNotification_init\"(x::Ptr{UA_MonitoredItemNotification})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoredItemNotification_new-Tuple{}","page":"Home","title":"open62541.UA_MonitoredItemNotification_new","text":"UA_MonitoredItemNotification_new\"()::Ptr{UA_MonitoredItemNotification}\n\ncreates and initializes a UA_MonitoredItemNotification object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_MonitoredItemNotification_delete(x::Ptr{UA_MonitoredItemNotification})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoringMode_clear-Tuple{Ptr{UA_MonitoringMode}}","page":"Home","title":"open62541.UA_MonitoringMode_clear","text":"UA_MonitoringMode_clear\"(x::Ptr{UA_MonitoringMode})\n\ndeletes the dynamically allocated content of the object x and calls UA_MonitoringMode_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoringMode_copy-Tuple{UA_MonitoringMode, Ptr{UA_MonitoringMode}}","page":"Home","title":"open62541.UA_MonitoringMode_copy","text":"UA_MonitoringMode_copy\"(src::Ptr{UA_MonitoringMode}, dst::Ptr{UA_MonitoringMode})::UA_STATUSCODE\nUA_MonitoringMode_copy\"(src::UA_MonitoringMode, dst::Ptr{UA_MonitoringMode})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoringMode_delete-Tuple{Ptr{UA_MonitoringMode}}","page":"Home","title":"open62541.UA_MonitoringMode_delete","text":"UA_MonitoringMode_delete(x::Ptr{UA_MonitoringMode})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoringMode_deleteMembers-Tuple{Ptr{UA_MonitoringMode}}","page":"Home","title":"open62541.UA_MonitoringMode_deleteMembers","text":"UA_MonitoringMode_deleteMembers(x::Ptr{UA_MonitoringMode})\n\n(deprecated, use UA_MonitoringMode_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_MonitoringMode_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoringMode_init-Tuple{Ptr{UA_MonitoringMode}}","page":"Home","title":"open62541.UA_MonitoringMode_init","text":"UA_MonitoringMode_init\"(x::Ptr{UA_MonitoringMode})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoringMode_new-Tuple{}","page":"Home","title":"open62541.UA_MonitoringMode_new","text":"UA_MonitoringMode_new\"()::Ptr{UA_MonitoringMode}\n\ncreates and initializes a UA_MonitoringMode object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_MonitoringMode_delete(x::Ptr{UA_MonitoringMode})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoringParameters_clear-Tuple{Ptr{UA_MonitoringParameters}}","page":"Home","title":"open62541.UA_MonitoringParameters_clear","text":"UA_MonitoringParameters_clear\"(x::Ptr{UA_MonitoringParameters})\n\ndeletes the dynamically allocated content of the object x and calls UA_MonitoringParameters_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoringParameters_copy-Tuple{UA_MonitoringParameters, Ptr{UA_MonitoringParameters}}","page":"Home","title":"open62541.UA_MonitoringParameters_copy","text":"UA_MonitoringParameters_copy\"(src::Ptr{UA_MonitoringParameters}, dst::Ptr{UA_MonitoringParameters})::UA_STATUSCODE\nUA_MonitoringParameters_copy\"(src::UA_MonitoringParameters, dst::Ptr{UA_MonitoringParameters})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoringParameters_delete-Tuple{Ptr{UA_MonitoringParameters}}","page":"Home","title":"open62541.UA_MonitoringParameters_delete","text":"UA_MonitoringParameters_delete(x::Ptr{UA_MonitoringParameters})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoringParameters_deleteMembers-Tuple{Ptr{UA_MonitoringParameters}}","page":"Home","title":"open62541.UA_MonitoringParameters_deleteMembers","text":"UA_MonitoringParameters_deleteMembers(x::Ptr{UA_MonitoringParameters})\n\n(deprecated, use UA_MonitoringParameters_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_MonitoringParameters_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoringParameters_init-Tuple{Ptr{UA_MonitoringParameters}}","page":"Home","title":"open62541.UA_MonitoringParameters_init","text":"UA_MonitoringParameters_init\"(x::Ptr{UA_MonitoringParameters})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_MonitoringParameters_new-Tuple{}","page":"Home","title":"open62541.UA_MonitoringParameters_new","text":"UA_MonitoringParameters_new\"()::Ptr{UA_MonitoringParameters}\n\ncreates and initializes a UA_MonitoringParameters object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_MonitoringParameters_delete(x::Ptr{UA_MonitoringParameters})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NODEID-Tuple{AbstractString}","page":"Home","title":"open62541.UA_NODEID","text":"UA_NODEID(s::AbstractString)::Ptr{UA_NodeId}\nUA_NODEID(s::Ptr{UA_String})::Ptr{UA_NodeId}\n\ncreates a UA_NodeId object by parsing s (which can be a string or UA_String).\n\nExample:\n\nUA_NODEID(\"ns=1;i=1234\") #generates UA_NodeId with numeric identifier\nUA_NODEID(\"ns=1;s=test\") #generates UA_NodeId with string identifier\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NODEID_BYTESTRING-Tuple{Integer, Union{Ptr{UA_String}, AbstractString}}","page":"Home","title":"open62541.UA_NODEID_BYTESTRING","text":"UA_NODEID_BYTESTRING(nsIndex::Integer, identifier::AbstractString)::Ptr{UA_NodeId}\nUA_NODEID_BYTESTRING(nsIndex::Integer, identifier::Ptr{UA_ByteString})::Ptr{UA_NodeId}\n\ncreates a UA_NodeId object with namespace index nsIndex and bytestring identifier identifier (which can be a string or UAByteString). Memory is allocated by C and needs to be cleaned up using `UANodeIddelete(x::Ptr{UANodeId})` after the object is not used anymore.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NODEID_BYTESTRING_ALLOC-Tuple{Integer, Ptr{UA_String}}","page":"Home","title":"open62541.UA_NODEID_BYTESTRING_ALLOC","text":"UA_NODEID_BYTESTRING_ALLOC(nsIndex::Integer, identifier::AbstractString)::Ptr{UA_NodeId}\nUA_NODEID_BYTESTRING_ALLOC(nsIndex::Integer, identifier::Ptr{UA_ByteString})::Ptr{UA_NodeId}\n\ncreates a UA_NodeId object with namespace index nsIndex and bytestring identifier identifier (which can be a string or UAByteString). Memory is allocated by C and needs to be cleaned up using `UANodeIddelete(x::Ptr{UANodeId})` after the object is not used anymore.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NODEID_GUID-Tuple{Any, Ptr{UA_Guid}}","page":"Home","title":"open62541.UA_NODEID_GUID","text":"UA_NODEID_GUID(nsIndex::Integer, identifier::AbstractString)::Ptr{UA_NodeId}\nUA_NODEID_GUID(nsIndex::Integer, identifier::Ptr{UA_Guid})::Ptr{UA_NodeId}\n\ncreates a UA_NodeId object by with namespace index nsIndex and an identifier identifier based on a globally unique id (UA_Guid) that can be supplied as a string (which will be parsed) or as a valid Ptr{UA_Guid}. Memory is allocated by C and needs to be cleaned up using UA_NodeId_delete(x::Ptr{UA_NodeId}) after the object is not used anymore.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NODEID_NUMERIC-Tuple{Integer, Integer}","page":"Home","title":"open62541.UA_NODEID_NUMERIC","text":"UA_NODEID_NUMERIC(nsIndex::Integer, identifier::Integer)::Ptr{UA_NodeId}\n\ncreates a UA_NodeId object with namespace index nsIndex and numerical identifier identifier. Memory is allocated by C and needs to be cleaned up using UA_NodeId_delete(x::Ptr{UA_NodeId}) after the object is not used anymore.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NODEID_STRING-Tuple{Integer, Union{Ptr{UA_String}, AbstractString}}","page":"Home","title":"open62541.UA_NODEID_STRING","text":"UA_NODEID_STRING(nsIndex::Integer, identifier::AbstractString)::Ptr{UA_NodeId}\nUA_NODEID_STRING(nsIndex::Integer, identifier::Ptr{UA_String})::Ptr{UA_NodeId}\n\ncreates a UA_NodeId object by with namespace index nsIndex and string identifier identifier (which can be a string or UAString). Memory is allocated by C and needs to be cleaned up using `UANodeIddelete(x::Ptr{UANodeId})` after the object is not used anymore.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NODEID_STRING_ALLOC-Tuple{Integer, Ptr{UA_String}}","page":"Home","title":"open62541.UA_NODEID_STRING_ALLOC","text":"UA_NODEID_STRING_ALLOC(nsIndex::Integer, identifier::AbstractString)::Ptr{UA_NodeId}\nUA_NODEID_STRING_ALLOC(nsIndex::Integer, identifier::Ptr{UA_String})::Ptr{UA_NodeId}\n\ncreates a UA_NodeId object with namespace index nsIndex and string identifier identifier (which can be a string or UAString). Memory is allocated by C and needs to be cleaned up using `UANodeIddelete(x::Ptr{UANodeId})` after the object is not used anymore.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeAttributesMask_clear-Tuple{Ptr{UA_NodeAttributesMask}}","page":"Home","title":"open62541.UA_NodeAttributesMask_clear","text":"UA_NodeAttributesMask_clear\"(x::Ptr{UA_NodeAttributesMask})\n\ndeletes the dynamically allocated content of the object x and calls UA_NodeAttributesMask_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeAttributesMask_copy-Tuple{UA_NodeAttributesMask, Ptr{UA_NodeAttributesMask}}","page":"Home","title":"open62541.UA_NodeAttributesMask_copy","text":"UA_NodeAttributesMask_copy\"(src::Ptr{UA_NodeAttributesMask}, dst::Ptr{UA_NodeAttributesMask})::UA_STATUSCODE\nUA_NodeAttributesMask_copy\"(src::UA_NodeAttributesMask, dst::Ptr{UA_NodeAttributesMask})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeAttributesMask_delete-Tuple{Ptr{UA_NodeAttributesMask}}","page":"Home","title":"open62541.UA_NodeAttributesMask_delete","text":"UA_NodeAttributesMask_delete(x::Ptr{UA_NodeAttributesMask})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeAttributesMask_deleteMembers-Tuple{Ptr{UA_NodeAttributesMask}}","page":"Home","title":"open62541.UA_NodeAttributesMask_deleteMembers","text":"UA_NodeAttributesMask_deleteMembers(x::Ptr{UA_NodeAttributesMask})\n\n(deprecated, use UA_NodeAttributesMask_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_NodeAttributesMask_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeAttributesMask_init-Tuple{Ptr{UA_NodeAttributesMask}}","page":"Home","title":"open62541.UA_NodeAttributesMask_init","text":"UA_NodeAttributesMask_init\"(x::Ptr{UA_NodeAttributesMask})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeAttributesMask_new-Tuple{}","page":"Home","title":"open62541.UA_NodeAttributesMask_new","text":"UA_NodeAttributesMask_new\"()::Ptr{UA_NodeAttributesMask}\n\ncreates and initializes a UA_NodeAttributesMask object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_NodeAttributesMask_delete(x::Ptr{UA_NodeAttributesMask})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeAttributes_clear-Tuple{Ptr{UA_NodeAttributes}}","page":"Home","title":"open62541.UA_NodeAttributes_clear","text":"UA_NodeAttributes_clear\"(x::Ptr{UA_NodeAttributes})\n\ndeletes the dynamically allocated content of the object x and calls UA_NodeAttributes_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeAttributes_copy-Tuple{UA_NodeAttributes, Ptr{UA_NodeAttributes}}","page":"Home","title":"open62541.UA_NodeAttributes_copy","text":"UA_NodeAttributes_copy\"(src::Ptr{UA_NodeAttributes}, dst::Ptr{UA_NodeAttributes})::UA_STATUSCODE\nUA_NodeAttributes_copy\"(src::UA_NodeAttributes, dst::Ptr{UA_NodeAttributes})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeAttributes_delete-Tuple{Ptr{UA_NodeAttributes}}","page":"Home","title":"open62541.UA_NodeAttributes_delete","text":"UA_NodeAttributes_delete(x::Ptr{UA_NodeAttributes})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeAttributes_deleteMembers-Tuple{Ptr{UA_NodeAttributes}}","page":"Home","title":"open62541.UA_NodeAttributes_deleteMembers","text":"UA_NodeAttributes_deleteMembers(x::Ptr{UA_NodeAttributes})\n\n(deprecated, use UA_NodeAttributes_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_NodeAttributes_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeAttributes_init-Tuple{Ptr{UA_NodeAttributes}}","page":"Home","title":"open62541.UA_NodeAttributes_init","text":"UA_NodeAttributes_init\"(x::Ptr{UA_NodeAttributes})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeAttributes_new-Tuple{}","page":"Home","title":"open62541.UA_NodeAttributes_new","text":"UA_NodeAttributes_new\"()::Ptr{UA_NodeAttributes}\n\ncreates and initializes a UA_NodeAttributes object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_NodeAttributes_delete(x::Ptr{UA_NodeAttributes})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeClass_clear-Tuple{Ptr{UA_NodeClass}}","page":"Home","title":"open62541.UA_NodeClass_clear","text":"UA_NodeClass_clear\"(x::Ptr{UA_NodeClass})\n\ndeletes the dynamically allocated content of the object x and calls UA_NodeClass_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeClass_copy-Tuple{UA_NodeClass, Ptr{UA_NodeClass}}","page":"Home","title":"open62541.UA_NodeClass_copy","text":"UA_NodeClass_copy\"(src::Ptr{UA_NodeClass}, dst::Ptr{UA_NodeClass})::UA_STATUSCODE\nUA_NodeClass_copy\"(src::UA_NodeClass, dst::Ptr{UA_NodeClass})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeClass_delete-Tuple{Ptr{UA_NodeClass}}","page":"Home","title":"open62541.UA_NodeClass_delete","text":"UA_NodeClass_delete(x::Ptr{UA_NodeClass})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeClass_deleteMembers-Tuple{Ptr{UA_NodeClass}}","page":"Home","title":"open62541.UA_NodeClass_deleteMembers","text":"UA_NodeClass_deleteMembers(x::Ptr{UA_NodeClass})\n\n(deprecated, use UA_NodeClass_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_NodeClass_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeClass_init-Tuple{Ptr{UA_NodeClass}}","page":"Home","title":"open62541.UA_NodeClass_init","text":"UA_NodeClass_init\"(x::Ptr{UA_NodeClass})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeClass_new-Tuple{}","page":"Home","title":"open62541.UA_NodeClass_new","text":"UA_NodeClass_new\"()::Ptr{UA_NodeClass}\n\ncreates and initializes a UA_NodeClass object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_NodeClass_delete(x::Ptr{UA_NodeClass})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeId_clear-Tuple{Ptr{UA_NodeId}}","page":"Home","title":"open62541.UA_NodeId_clear","text":"UA_NodeId_clear\"(x::Ptr{UA_NodeId})\n\ndeletes the dynamically allocated content of the object x and calls UA_NodeId_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeId_copy-Tuple{UA_NodeId, Ptr{UA_NodeId}}","page":"Home","title":"open62541.UA_NodeId_copy","text":"UA_NodeId_copy\"(src::Ptr{UA_NodeId}, dst::Ptr{UA_NodeId})::UA_STATUSCODE\nUA_NodeId_copy\"(src::UA_NodeId, dst::Ptr{UA_NodeId})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeId_delete-Tuple{Ptr{UA_NodeId}}","page":"Home","title":"open62541.UA_NodeId_delete","text":"UA_NodeId_delete(x::Ptr{UA_NodeId})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeId_deleteMembers-Tuple{Ptr{UA_NodeId}}","page":"Home","title":"open62541.UA_NodeId_deleteMembers","text":"UA_NodeId_deleteMembers(x::Ptr{UA_NodeId})\n\n(deprecated, use UA_NodeId_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_NodeId_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeId_equal-Tuple{Any, Any}","page":"Home","title":"open62541.UA_NodeId_equal","text":"UA_NodeId_equal(n1::Ptr{UA_NodeId}, n2::Ptr{UA_NodeId})::Bool\n\nreturns true if n1 and n2 are UA_NodeIds with identical content.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeId_init-Tuple{Ptr{UA_NodeId}}","page":"Home","title":"open62541.UA_NodeId_init","text":"UA_NodeId_init\"(x::Ptr{UA_NodeId})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeId_new-Tuple{}","page":"Home","title":"open62541.UA_NodeId_new","text":"UA_NodeId_new\"()::Ptr{UA_NodeId}\n\ncreates and initializes a UA_NodeId object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_NodeId_delete(x::Ptr{UA_NodeId})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeId_order-Tuple{Any, Any}","page":"Home","title":"open62541.UA_NodeId_order","text":"UA_NODEID_NUMERIC(nsIndex, identifier)\n\nThe following functions are shorthand for creating NodeIds.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeTypeLifecycleCallback_constructor_generate-Tuple{Function}","page":"Home","title":"open62541.UA_NodeTypeLifecycleCallback_constructor_generate","text":"UA_NodeTypeLifeCycleCallback_constructor_generate(f::Function)\n\ncreates a function pointer for the constructor field of a UA_NodeTypeLifeCycle object.\n\nf must be a Julia function with the following signature:\n\n       sessionContext::Ptr{Cvoid}, typeNodeId::Ptr{UA_NodeId}, typeNodeContext::Ptr{Cvoid}, \n       nodeId::Ptr{UA_NodeId}, nodeContext::Ptr{Ptr{Cvoid}})::UA_StatusCode```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NodeTypeLifecycleCallback_destructor_generate-Tuple{Function}","page":"Home","title":"open62541.UA_NodeTypeLifecycleCallback_destructor_generate","text":"UA_NodeTypeLifeCycleCallback_destructor_generate(f::Function)\n\ncreates a function pointer for the destructor field of a UA_NodeTypeLifeCycle object.\n\nf must be a Julia function with the following signature:\n\n       sessionContext::Ptr{Cvoid}, typeNodeId::Ptr{UA_NodeId}, typeNodeContext::Ptr{Cvoid}, \n       nodeId::Ptr{UA_NodeId}, nodeContext::Ptr{Ptr{Cvoid}})::Cvoid```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Nodestore_HashMap-Tuple{Any}","page":"Home","title":"open62541.UA_Nodestore_HashMap","text":"UA_Nodestore_HashMap(ns)\n\n** amalgamated original file \"/srcdir/open62541/plugins/include/open62541/plugin/nodestore_default.h\" ***\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NotificationMessage_clear-Tuple{Ptr{UA_NotificationMessage}}","page":"Home","title":"open62541.UA_NotificationMessage_clear","text":"UA_NotificationMessage_clear\"(x::Ptr{UA_NotificationMessage})\n\ndeletes the dynamically allocated content of the object x and calls UA_NotificationMessage_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NotificationMessage_copy-Tuple{UA_NotificationMessage, Ptr{UA_NotificationMessage}}","page":"Home","title":"open62541.UA_NotificationMessage_copy","text":"UA_NotificationMessage_copy\"(src::Ptr{UA_NotificationMessage}, dst::Ptr{UA_NotificationMessage})::UA_STATUSCODE\nUA_NotificationMessage_copy\"(src::UA_NotificationMessage, dst::Ptr{UA_NotificationMessage})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NotificationMessage_delete-Tuple{Ptr{UA_NotificationMessage}}","page":"Home","title":"open62541.UA_NotificationMessage_delete","text":"UA_NotificationMessage_delete(x::Ptr{UA_NotificationMessage})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NotificationMessage_deleteMembers-Tuple{Ptr{UA_NotificationMessage}}","page":"Home","title":"open62541.UA_NotificationMessage_deleteMembers","text":"UA_NotificationMessage_deleteMembers(x::Ptr{UA_NotificationMessage})\n\n(deprecated, use UA_NotificationMessage_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_NotificationMessage_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NotificationMessage_init-Tuple{Ptr{UA_NotificationMessage}}","page":"Home","title":"open62541.UA_NotificationMessage_init","text":"UA_NotificationMessage_init\"(x::Ptr{UA_NotificationMessage})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_NotificationMessage_new-Tuple{}","page":"Home","title":"open62541.UA_NotificationMessage_new","text":"UA_NotificationMessage_new\"()::Ptr{UA_NotificationMessage}\n\ncreates and initializes a UA_NotificationMessage object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_NotificationMessage_delete(x::Ptr{UA_NotificationMessage})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ObjectAttributes_clear-Tuple{Ptr{UA_ObjectAttributes}}","page":"Home","title":"open62541.UA_ObjectAttributes_clear","text":"UA_ObjectAttributes_clear\"(x::Ptr{UA_ObjectAttributes})\n\ndeletes the dynamically allocated content of the object x and calls UA_ObjectAttributes_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ObjectAttributes_copy-Tuple{UA_ObjectAttributes, Ptr{UA_ObjectAttributes}}","page":"Home","title":"open62541.UA_ObjectAttributes_copy","text":"UA_ObjectAttributes_copy\"(src::Ptr{UA_ObjectAttributes}, dst::Ptr{UA_ObjectAttributes})::UA_STATUSCODE\nUA_ObjectAttributes_copy\"(src::UA_ObjectAttributes, dst::Ptr{UA_ObjectAttributes})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ObjectAttributes_delete-Tuple{Ptr{UA_ObjectAttributes}}","page":"Home","title":"open62541.UA_ObjectAttributes_delete","text":"UA_ObjectAttributes_delete(x::Ptr{UA_ObjectAttributes})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ObjectAttributes_deleteMembers-Tuple{Ptr{UA_ObjectAttributes}}","page":"Home","title":"open62541.UA_ObjectAttributes_deleteMembers","text":"UA_ObjectAttributes_deleteMembers(x::Ptr{UA_ObjectAttributes})\n\n(deprecated, use UA_ObjectAttributes_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ObjectAttributes_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ObjectAttributes_generate-Tuple{}","page":"Home","title":"open62541.UA_ObjectAttributes_generate","text":"UA_ObjectAttributes_generate(; displayname::AbstractString,\n    description::AbstractString, localization::AbstractString = \"en-US\",\n    writemask::Union{Nothing, UInt32} = nothing,\n    userwritemask::Union{Nothing, UInt32} = nothing,\n    eventnotifier::Union{Nothing, UInt8} = nothing)::Ptr{UA_ObjectAttributes}\n\ngenerates a UA_ObjectAttributes object. Memory for the object is allocated by C and needs to be cleaned up by calling UA_ObjectAttributes_delete(x) after usage.\n\nFor keywords given as nothing, the respective default value is used, see UA_ObjectAttributes_default[]\n\nSee also UA_WRITEMASK, UA_USERWRITEMASK, UA_EVENTNOTIFIER for information on how to generate the respective keyword inputs.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ObjectAttributes_init-Tuple{Ptr{UA_ObjectAttributes}}","page":"Home","title":"open62541.UA_ObjectAttributes_init","text":"UA_ObjectAttributes_init\"(x::Ptr{UA_ObjectAttributes})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ObjectAttributes_new-Tuple{}","page":"Home","title":"open62541.UA_ObjectAttributes_new","text":"UA_ObjectAttributes_new\"()::Ptr{UA_ObjectAttributes}\n\ncreates and initializes a UA_ObjectAttributes object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ObjectAttributes_delete(x::Ptr{UA_ObjectAttributes})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ObjectTypeAttributes_clear-Tuple{Ptr{UA_ObjectTypeAttributes}}","page":"Home","title":"open62541.UA_ObjectTypeAttributes_clear","text":"UA_ObjectTypeAttributes_clear\"(x::Ptr{UA_ObjectTypeAttributes})\n\ndeletes the dynamically allocated content of the object x and calls UA_ObjectTypeAttributes_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ObjectTypeAttributes_copy-Tuple{UA_ObjectTypeAttributes, Ptr{UA_ObjectTypeAttributes}}","page":"Home","title":"open62541.UA_ObjectTypeAttributes_copy","text":"UA_ObjectTypeAttributes_copy\"(src::Ptr{UA_ObjectTypeAttributes}, dst::Ptr{UA_ObjectTypeAttributes})::UA_STATUSCODE\nUA_ObjectTypeAttributes_copy\"(src::UA_ObjectTypeAttributes, dst::Ptr{UA_ObjectTypeAttributes})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ObjectTypeAttributes_delete-Tuple{Ptr{UA_ObjectTypeAttributes}}","page":"Home","title":"open62541.UA_ObjectTypeAttributes_delete","text":"UA_ObjectTypeAttributes_delete(x::Ptr{UA_ObjectTypeAttributes})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ObjectTypeAttributes_deleteMembers-Tuple{Ptr{UA_ObjectTypeAttributes}}","page":"Home","title":"open62541.UA_ObjectTypeAttributes_deleteMembers","text":"UA_ObjectTypeAttributes_deleteMembers(x::Ptr{UA_ObjectTypeAttributes})\n\n(deprecated, use UA_ObjectTypeAttributes_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ObjectTypeAttributes_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ObjectTypeAttributes_generate-Tuple{}","page":"Home","title":"open62541.UA_ObjectTypeAttributes_generate","text":"UA_ObjectTypeAttributes_generate(; displayname::AbstractString,\n    description::AbstractString, localization::AbstractString = \"en-US\",\n    writemask::Union{Nothing, UInt32} = nothing,\n    userwritemask::Union{Nothing, UInt32} = nothing,\n    isabstract::Union{Nothing, Bool} = nothing)::Ptr{UA_ObjectTypeAttributes}\n\ngenerates a UA_ObjectTypeAttributes object. Memory for the object is allocated by C and needs to be cleaned up by calling UA_ObjectTypeAttributes_delete(x) after usage.\n\nFor keywords given as nothing, the respective default value is used, see UA_ObjectTypeAttributes_default[]\n\nSee also UA_WRITEMASK and UA_USERWRITEMASK for information on how to generate the respective keyword inputs.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ObjectTypeAttributes_init-Tuple{Ptr{UA_ObjectTypeAttributes}}","page":"Home","title":"open62541.UA_ObjectTypeAttributes_init","text":"UA_ObjectTypeAttributes_init\"(x::Ptr{UA_ObjectTypeAttributes})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ObjectTypeAttributes_new-Tuple{}","page":"Home","title":"open62541.UA_ObjectTypeAttributes_new","text":"UA_ObjectTypeAttributes_new\"()::Ptr{UA_ObjectTypeAttributes}\n\ncreates and initializes a UA_ObjectTypeAttributes object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ObjectTypeAttributes_delete(x::Ptr{UA_ObjectTypeAttributes})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_OpenSecureChannelRequest_clear-Tuple{Ptr{UA_OpenSecureChannelRequest}}","page":"Home","title":"open62541.UA_OpenSecureChannelRequest_clear","text":"UA_OpenSecureChannelRequest_clear\"(x::Ptr{UA_OpenSecureChannelRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_OpenSecureChannelRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_OpenSecureChannelRequest_copy-Tuple{UA_OpenSecureChannelRequest, Ptr{UA_OpenSecureChannelRequest}}","page":"Home","title":"open62541.UA_OpenSecureChannelRequest_copy","text":"UA_OpenSecureChannelRequest_copy\"(src::Ptr{UA_OpenSecureChannelRequest}, dst::Ptr{UA_OpenSecureChannelRequest})::UA_STATUSCODE\nUA_OpenSecureChannelRequest_copy\"(src::UA_OpenSecureChannelRequest, dst::Ptr{UA_OpenSecureChannelRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_OpenSecureChannelRequest_delete-Tuple{Ptr{UA_OpenSecureChannelRequest}}","page":"Home","title":"open62541.UA_OpenSecureChannelRequest_delete","text":"UA_OpenSecureChannelRequest_delete(x::Ptr{UA_OpenSecureChannelRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_OpenSecureChannelRequest_deleteMembers-Tuple{Ptr{UA_OpenSecureChannelRequest}}","page":"Home","title":"open62541.UA_OpenSecureChannelRequest_deleteMembers","text":"UA_OpenSecureChannelRequest_deleteMembers(x::Ptr{UA_OpenSecureChannelRequest})\n\n(deprecated, use UA_OpenSecureChannelRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_OpenSecureChannelRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_OpenSecureChannelRequest_init-Tuple{Ptr{UA_OpenSecureChannelRequest}}","page":"Home","title":"open62541.UA_OpenSecureChannelRequest_init","text":"UA_OpenSecureChannelRequest_init\"(x::Ptr{UA_OpenSecureChannelRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_OpenSecureChannelRequest_new-Tuple{}","page":"Home","title":"open62541.UA_OpenSecureChannelRequest_new","text":"UA_OpenSecureChannelRequest_new\"()::Ptr{UA_OpenSecureChannelRequest}\n\ncreates and initializes a UA_OpenSecureChannelRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_OpenSecureChannelRequest_delete(x::Ptr{UA_OpenSecureChannelRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_OpenSecureChannelResponse_clear-Tuple{Ptr{UA_OpenSecureChannelResponse}}","page":"Home","title":"open62541.UA_OpenSecureChannelResponse_clear","text":"UA_OpenSecureChannelResponse_clear\"(x::Ptr{UA_OpenSecureChannelResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_OpenSecureChannelResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_OpenSecureChannelResponse_copy-Tuple{UA_OpenSecureChannelResponse, Ptr{UA_OpenSecureChannelResponse}}","page":"Home","title":"open62541.UA_OpenSecureChannelResponse_copy","text":"UA_OpenSecureChannelResponse_copy\"(src::Ptr{UA_OpenSecureChannelResponse}, dst::Ptr{UA_OpenSecureChannelResponse})::UA_STATUSCODE\nUA_OpenSecureChannelResponse_copy\"(src::UA_OpenSecureChannelResponse, dst::Ptr{UA_OpenSecureChannelResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_OpenSecureChannelResponse_delete-Tuple{Ptr{UA_OpenSecureChannelResponse}}","page":"Home","title":"open62541.UA_OpenSecureChannelResponse_delete","text":"UA_OpenSecureChannelResponse_delete(x::Ptr{UA_OpenSecureChannelResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_OpenSecureChannelResponse_deleteMembers-Tuple{Ptr{UA_OpenSecureChannelResponse}}","page":"Home","title":"open62541.UA_OpenSecureChannelResponse_deleteMembers","text":"UA_OpenSecureChannelResponse_deleteMembers(x::Ptr{UA_OpenSecureChannelResponse})\n\n(deprecated, use UA_OpenSecureChannelResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_OpenSecureChannelResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_OpenSecureChannelResponse_init-Tuple{Ptr{UA_OpenSecureChannelResponse}}","page":"Home","title":"open62541.UA_OpenSecureChannelResponse_init","text":"UA_OpenSecureChannelResponse_init\"(x::Ptr{UA_OpenSecureChannelResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_OpenSecureChannelResponse_new-Tuple{}","page":"Home","title":"open62541.UA_OpenSecureChannelResponse_new","text":"UA_OpenSecureChannelResponse_new\"()::Ptr{UA_OpenSecureChannelResponse}\n\ncreates and initializes a UA_OpenSecureChannelResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_OpenSecureChannelResponse_delete(x::Ptr{UA_OpenSecureChannelResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PerformUpdateType_clear-Tuple{Ptr{UA_PerformUpdateType}}","page":"Home","title":"open62541.UA_PerformUpdateType_clear","text":"UA_PerformUpdateType_clear\"(x::Ptr{UA_PerformUpdateType})\n\ndeletes the dynamically allocated content of the object x and calls UA_PerformUpdateType_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PerformUpdateType_copy-Tuple{UA_PerformUpdateType, Ptr{UA_PerformUpdateType}}","page":"Home","title":"open62541.UA_PerformUpdateType_copy","text":"UA_PerformUpdateType_copy\"(src::Ptr{UA_PerformUpdateType}, dst::Ptr{UA_PerformUpdateType})::UA_STATUSCODE\nUA_PerformUpdateType_copy\"(src::UA_PerformUpdateType, dst::Ptr{UA_PerformUpdateType})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PerformUpdateType_delete-Tuple{Ptr{UA_PerformUpdateType}}","page":"Home","title":"open62541.UA_PerformUpdateType_delete","text":"UA_PerformUpdateType_delete(x::Ptr{UA_PerformUpdateType})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PerformUpdateType_deleteMembers-Tuple{Ptr{UA_PerformUpdateType}}","page":"Home","title":"open62541.UA_PerformUpdateType_deleteMembers","text":"UA_PerformUpdateType_deleteMembers(x::Ptr{UA_PerformUpdateType})\n\n(deprecated, use UA_PerformUpdateType_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_PerformUpdateType_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PerformUpdateType_init-Tuple{Ptr{UA_PerformUpdateType}}","page":"Home","title":"open62541.UA_PerformUpdateType_init","text":"UA_PerformUpdateType_init\"(x::Ptr{UA_PerformUpdateType})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PerformUpdateType_new-Tuple{}","page":"Home","title":"open62541.UA_PerformUpdateType_new","text":"UA_PerformUpdateType_new\"()::Ptr{UA_PerformUpdateType}\n\ncreates and initializes a UA_PerformUpdateType object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_PerformUpdateType_delete(x::Ptr{UA_PerformUpdateType})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PublishRequest_clear-Tuple{Ptr{UA_PublishRequest}}","page":"Home","title":"open62541.UA_PublishRequest_clear","text":"UA_PublishRequest_clear\"(x::Ptr{UA_PublishRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_PublishRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PublishRequest_copy-Tuple{UA_PublishRequest, Ptr{UA_PublishRequest}}","page":"Home","title":"open62541.UA_PublishRequest_copy","text":"UA_PublishRequest_copy\"(src::Ptr{UA_PublishRequest}, dst::Ptr{UA_PublishRequest})::UA_STATUSCODE\nUA_PublishRequest_copy\"(src::UA_PublishRequest, dst::Ptr{UA_PublishRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PublishRequest_delete-Tuple{Ptr{UA_PublishRequest}}","page":"Home","title":"open62541.UA_PublishRequest_delete","text":"UA_PublishRequest_delete(x::Ptr{UA_PublishRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PublishRequest_deleteMembers-Tuple{Ptr{UA_PublishRequest}}","page":"Home","title":"open62541.UA_PublishRequest_deleteMembers","text":"UA_PublishRequest_deleteMembers(x::Ptr{UA_PublishRequest})\n\n(deprecated, use UA_PublishRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_PublishRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PublishRequest_init-Tuple{Ptr{UA_PublishRequest}}","page":"Home","title":"open62541.UA_PublishRequest_init","text":"UA_PublishRequest_init\"(x::Ptr{UA_PublishRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PublishRequest_new-Tuple{}","page":"Home","title":"open62541.UA_PublishRequest_new","text":"UA_PublishRequest_new\"()::Ptr{UA_PublishRequest}\n\ncreates and initializes a UA_PublishRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_PublishRequest_delete(x::Ptr{UA_PublishRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PublishResponse_clear-Tuple{Ptr{UA_PublishResponse}}","page":"Home","title":"open62541.UA_PublishResponse_clear","text":"UA_PublishResponse_clear\"(x::Ptr{UA_PublishResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_PublishResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PublishResponse_copy-Tuple{UA_PublishResponse, Ptr{UA_PublishResponse}}","page":"Home","title":"open62541.UA_PublishResponse_copy","text":"UA_PublishResponse_copy\"(src::Ptr{UA_PublishResponse}, dst::Ptr{UA_PublishResponse})::UA_STATUSCODE\nUA_PublishResponse_copy\"(src::UA_PublishResponse, dst::Ptr{UA_PublishResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PublishResponse_delete-Tuple{Ptr{UA_PublishResponse}}","page":"Home","title":"open62541.UA_PublishResponse_delete","text":"UA_PublishResponse_delete(x::Ptr{UA_PublishResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PublishResponse_deleteMembers-Tuple{Ptr{UA_PublishResponse}}","page":"Home","title":"open62541.UA_PublishResponse_deleteMembers","text":"UA_PublishResponse_deleteMembers(x::Ptr{UA_PublishResponse})\n\n(deprecated, use UA_PublishResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_PublishResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PublishResponse_init-Tuple{Ptr{UA_PublishResponse}}","page":"Home","title":"open62541.UA_PublishResponse_init","text":"UA_PublishResponse_init\"(x::Ptr{UA_PublishResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_PublishResponse_new-Tuple{}","page":"Home","title":"open62541.UA_PublishResponse_new","text":"UA_PublishResponse_new\"()::Ptr{UA_PublishResponse}\n\ncreates and initializes a UA_PublishResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_PublishResponse_delete(x::Ptr{UA_PublishResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_QualifiedName_clear-Tuple{Ptr{UA_QualifiedName}}","page":"Home","title":"open62541.UA_QualifiedName_clear","text":"UA_QualifiedName_clear\"(x::Ptr{UA_QualifiedName})\n\ndeletes the dynamically allocated content of the object x and calls UA_QualifiedName_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_QualifiedName_copy-Tuple{UA_QualifiedName, Ptr{UA_QualifiedName}}","page":"Home","title":"open62541.UA_QualifiedName_copy","text":"UA_QualifiedName_copy\"(src::Ptr{UA_QualifiedName}, dst::Ptr{UA_QualifiedName})::UA_STATUSCODE\nUA_QualifiedName_copy\"(src::UA_QualifiedName, dst::Ptr{UA_QualifiedName})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_QualifiedName_delete-Tuple{Ptr{UA_QualifiedName}}","page":"Home","title":"open62541.UA_QualifiedName_delete","text":"UA_QualifiedName_delete(x::Ptr{UA_QualifiedName})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_QualifiedName_deleteMembers-Tuple{Ptr{UA_QualifiedName}}","page":"Home","title":"open62541.UA_QualifiedName_deleteMembers","text":"UA_QualifiedName_deleteMembers(x::Ptr{UA_QualifiedName})\n\n(deprecated, use UA_QualifiedName_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_QualifiedName_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_QualifiedName_init-Tuple{Ptr{UA_QualifiedName}}","page":"Home","title":"open62541.UA_QualifiedName_init","text":"UA_QualifiedName_init\"(x::Ptr{UA_QualifiedName})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_QualifiedName_new-Tuple{}","page":"Home","title":"open62541.UA_QualifiedName_new","text":"UA_QualifiedName_new\"()::Ptr{UA_QualifiedName}\n\ncreates and initializes a UA_QualifiedName object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_QualifiedName_delete(x::Ptr{UA_QualifiedName})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Range_clear-Tuple{Ptr{UA_Range}}","page":"Home","title":"open62541.UA_Range_clear","text":"UA_Range_clear\"(x::Ptr{UA_Range})\n\ndeletes the dynamically allocated content of the object x and calls UA_Range_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Range_copy-Tuple{UA_Range, Ptr{UA_Range}}","page":"Home","title":"open62541.UA_Range_copy","text":"UA_Range_copy\"(src::Ptr{UA_Range}, dst::Ptr{UA_Range})::UA_STATUSCODE\nUA_Range_copy\"(src::UA_Range, dst::Ptr{UA_Range})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Range_delete-Tuple{Ptr{UA_Range}}","page":"Home","title":"open62541.UA_Range_delete","text":"UA_Range_delete(x::Ptr{UA_Range})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Range_deleteMembers-Tuple{Ptr{UA_Range}}","page":"Home","title":"open62541.UA_Range_deleteMembers","text":"UA_Range_deleteMembers(x::Ptr{UA_Range})\n\n(deprecated, use UA_Range_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_Range_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Range_init-Tuple{Ptr{UA_Range}}","page":"Home","title":"open62541.UA_Range_init","text":"UA_Range_init\"(x::Ptr{UA_Range})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Range_new-Tuple{}","page":"Home","title":"open62541.UA_Range_new","text":"UA_Range_new\"()::Ptr{UA_Range}\n\ncreates and initializes a UA_Range object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_Range_delete(x::Ptr{UA_Range})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadAtTimeDetails_clear-Tuple{Ptr{UA_ReadAtTimeDetails}}","page":"Home","title":"open62541.UA_ReadAtTimeDetails_clear","text":"UA_ReadAtTimeDetails_clear\"(x::Ptr{UA_ReadAtTimeDetails})\n\ndeletes the dynamically allocated content of the object x and calls UA_ReadAtTimeDetails_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadAtTimeDetails_copy-Tuple{UA_ReadAtTimeDetails, Ptr{UA_ReadAtTimeDetails}}","page":"Home","title":"open62541.UA_ReadAtTimeDetails_copy","text":"UA_ReadAtTimeDetails_copy\"(src::Ptr{UA_ReadAtTimeDetails}, dst::Ptr{UA_ReadAtTimeDetails})::UA_STATUSCODE\nUA_ReadAtTimeDetails_copy\"(src::UA_ReadAtTimeDetails, dst::Ptr{UA_ReadAtTimeDetails})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadAtTimeDetails_delete-Tuple{Ptr{UA_ReadAtTimeDetails}}","page":"Home","title":"open62541.UA_ReadAtTimeDetails_delete","text":"UA_ReadAtTimeDetails_delete(x::Ptr{UA_ReadAtTimeDetails})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadAtTimeDetails_deleteMembers-Tuple{Ptr{UA_ReadAtTimeDetails}}","page":"Home","title":"open62541.UA_ReadAtTimeDetails_deleteMembers","text":"UA_ReadAtTimeDetails_deleteMembers(x::Ptr{UA_ReadAtTimeDetails})\n\n(deprecated, use UA_ReadAtTimeDetails_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ReadAtTimeDetails_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadAtTimeDetails_init-Tuple{Ptr{UA_ReadAtTimeDetails}}","page":"Home","title":"open62541.UA_ReadAtTimeDetails_init","text":"UA_ReadAtTimeDetails_init\"(x::Ptr{UA_ReadAtTimeDetails})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadAtTimeDetails_new-Tuple{}","page":"Home","title":"open62541.UA_ReadAtTimeDetails_new","text":"UA_ReadAtTimeDetails_new\"()::Ptr{UA_ReadAtTimeDetails}\n\ncreates and initializes a UA_ReadAtTimeDetails object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ReadAtTimeDetails_delete(x::Ptr{UA_ReadAtTimeDetails})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadEventDetails_clear-Tuple{Ptr{UA_ReadEventDetails}}","page":"Home","title":"open62541.UA_ReadEventDetails_clear","text":"UA_ReadEventDetails_clear\"(x::Ptr{UA_ReadEventDetails})\n\ndeletes the dynamically allocated content of the object x and calls UA_ReadEventDetails_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadEventDetails_copy-Tuple{UA_ReadEventDetails, Ptr{UA_ReadEventDetails}}","page":"Home","title":"open62541.UA_ReadEventDetails_copy","text":"UA_ReadEventDetails_copy\"(src::Ptr{UA_ReadEventDetails}, dst::Ptr{UA_ReadEventDetails})::UA_STATUSCODE\nUA_ReadEventDetails_copy\"(src::UA_ReadEventDetails, dst::Ptr{UA_ReadEventDetails})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadEventDetails_delete-Tuple{Ptr{UA_ReadEventDetails}}","page":"Home","title":"open62541.UA_ReadEventDetails_delete","text":"UA_ReadEventDetails_delete(x::Ptr{UA_ReadEventDetails})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadEventDetails_deleteMembers-Tuple{Ptr{UA_ReadEventDetails}}","page":"Home","title":"open62541.UA_ReadEventDetails_deleteMembers","text":"UA_ReadEventDetails_deleteMembers(x::Ptr{UA_ReadEventDetails})\n\n(deprecated, use UA_ReadEventDetails_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ReadEventDetails_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadEventDetails_init-Tuple{Ptr{UA_ReadEventDetails}}","page":"Home","title":"open62541.UA_ReadEventDetails_init","text":"UA_ReadEventDetails_init\"(x::Ptr{UA_ReadEventDetails})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadEventDetails_new-Tuple{}","page":"Home","title":"open62541.UA_ReadEventDetails_new","text":"UA_ReadEventDetails_new\"()::Ptr{UA_ReadEventDetails}\n\ncreates and initializes a UA_ReadEventDetails object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ReadEventDetails_delete(x::Ptr{UA_ReadEventDetails})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadProcessedDetails_clear-Tuple{Ptr{UA_ReadProcessedDetails}}","page":"Home","title":"open62541.UA_ReadProcessedDetails_clear","text":"UA_ReadProcessedDetails_clear\"(x::Ptr{UA_ReadProcessedDetails})\n\ndeletes the dynamically allocated content of the object x and calls UA_ReadProcessedDetails_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadProcessedDetails_copy-Tuple{UA_ReadProcessedDetails, Ptr{UA_ReadProcessedDetails}}","page":"Home","title":"open62541.UA_ReadProcessedDetails_copy","text":"UA_ReadProcessedDetails_copy\"(src::Ptr{UA_ReadProcessedDetails}, dst::Ptr{UA_ReadProcessedDetails})::UA_STATUSCODE\nUA_ReadProcessedDetails_copy\"(src::UA_ReadProcessedDetails, dst::Ptr{UA_ReadProcessedDetails})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadProcessedDetails_delete-Tuple{Ptr{UA_ReadProcessedDetails}}","page":"Home","title":"open62541.UA_ReadProcessedDetails_delete","text":"UA_ReadProcessedDetails_delete(x::Ptr{UA_ReadProcessedDetails})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadProcessedDetails_deleteMembers-Tuple{Ptr{UA_ReadProcessedDetails}}","page":"Home","title":"open62541.UA_ReadProcessedDetails_deleteMembers","text":"UA_ReadProcessedDetails_deleteMembers(x::Ptr{UA_ReadProcessedDetails})\n\n(deprecated, use UA_ReadProcessedDetails_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ReadProcessedDetails_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadProcessedDetails_init-Tuple{Ptr{UA_ReadProcessedDetails}}","page":"Home","title":"open62541.UA_ReadProcessedDetails_init","text":"UA_ReadProcessedDetails_init\"(x::Ptr{UA_ReadProcessedDetails})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadProcessedDetails_new-Tuple{}","page":"Home","title":"open62541.UA_ReadProcessedDetails_new","text":"UA_ReadProcessedDetails_new\"()::Ptr{UA_ReadProcessedDetails}\n\ncreates and initializes a UA_ReadProcessedDetails object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ReadProcessedDetails_delete(x::Ptr{UA_ReadProcessedDetails})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadRawModifiedDetails_clear-Tuple{Ptr{UA_ReadRawModifiedDetails}}","page":"Home","title":"open62541.UA_ReadRawModifiedDetails_clear","text":"UA_ReadRawModifiedDetails_clear\"(x::Ptr{UA_ReadRawModifiedDetails})\n\ndeletes the dynamically allocated content of the object x and calls UA_ReadRawModifiedDetails_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadRawModifiedDetails_copy-Tuple{UA_ReadRawModifiedDetails, Ptr{UA_ReadRawModifiedDetails}}","page":"Home","title":"open62541.UA_ReadRawModifiedDetails_copy","text":"UA_ReadRawModifiedDetails_copy\"(src::Ptr{UA_ReadRawModifiedDetails}, dst::Ptr{UA_ReadRawModifiedDetails})::UA_STATUSCODE\nUA_ReadRawModifiedDetails_copy\"(src::UA_ReadRawModifiedDetails, dst::Ptr{UA_ReadRawModifiedDetails})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadRawModifiedDetails_delete-Tuple{Ptr{UA_ReadRawModifiedDetails}}","page":"Home","title":"open62541.UA_ReadRawModifiedDetails_delete","text":"UA_ReadRawModifiedDetails_delete(x::Ptr{UA_ReadRawModifiedDetails})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadRawModifiedDetails_deleteMembers-Tuple{Ptr{UA_ReadRawModifiedDetails}}","page":"Home","title":"open62541.UA_ReadRawModifiedDetails_deleteMembers","text":"UA_ReadRawModifiedDetails_deleteMembers(x::Ptr{UA_ReadRawModifiedDetails})\n\n(deprecated, use UA_ReadRawModifiedDetails_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ReadRawModifiedDetails_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadRawModifiedDetails_init-Tuple{Ptr{UA_ReadRawModifiedDetails}}","page":"Home","title":"open62541.UA_ReadRawModifiedDetails_init","text":"UA_ReadRawModifiedDetails_init\"(x::Ptr{UA_ReadRawModifiedDetails})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadRawModifiedDetails_new-Tuple{}","page":"Home","title":"open62541.UA_ReadRawModifiedDetails_new","text":"UA_ReadRawModifiedDetails_new\"()::Ptr{UA_ReadRawModifiedDetails}\n\ncreates and initializes a UA_ReadRawModifiedDetails object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ReadRawModifiedDetails_delete(x::Ptr{UA_ReadRawModifiedDetails})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadRequest_clear-Tuple{Ptr{UA_ReadRequest}}","page":"Home","title":"open62541.UA_ReadRequest_clear","text":"UA_ReadRequest_clear\"(x::Ptr{UA_ReadRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_ReadRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadRequest_copy-Tuple{UA_ReadRequest, Ptr{UA_ReadRequest}}","page":"Home","title":"open62541.UA_ReadRequest_copy","text":"UA_ReadRequest_copy\"(src::Ptr{UA_ReadRequest}, dst::Ptr{UA_ReadRequest})::UA_STATUSCODE\nUA_ReadRequest_copy\"(src::UA_ReadRequest, dst::Ptr{UA_ReadRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadRequest_delete-Tuple{Ptr{UA_ReadRequest}}","page":"Home","title":"open62541.UA_ReadRequest_delete","text":"UA_ReadRequest_delete(x::Ptr{UA_ReadRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadRequest_deleteMembers-Tuple{Ptr{UA_ReadRequest}}","page":"Home","title":"open62541.UA_ReadRequest_deleteMembers","text":"UA_ReadRequest_deleteMembers(x::Ptr{UA_ReadRequest})\n\n(deprecated, use UA_ReadRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ReadRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadRequest_init-Tuple{Ptr{UA_ReadRequest}}","page":"Home","title":"open62541.UA_ReadRequest_init","text":"UA_ReadRequest_init\"(x::Ptr{UA_ReadRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadRequest_new-Tuple{}","page":"Home","title":"open62541.UA_ReadRequest_new","text":"UA_ReadRequest_new\"()::Ptr{UA_ReadRequest}\n\ncreates and initializes a UA_ReadRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ReadRequest_delete(x::Ptr{UA_ReadRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadResponse_clear-Tuple{Ptr{UA_ReadResponse}}","page":"Home","title":"open62541.UA_ReadResponse_clear","text":"UA_ReadResponse_clear\"(x::Ptr{UA_ReadResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_ReadResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadResponse_copy-Tuple{UA_ReadResponse, Ptr{UA_ReadResponse}}","page":"Home","title":"open62541.UA_ReadResponse_copy","text":"UA_ReadResponse_copy\"(src::Ptr{UA_ReadResponse}, dst::Ptr{UA_ReadResponse})::UA_STATUSCODE\nUA_ReadResponse_copy\"(src::UA_ReadResponse, dst::Ptr{UA_ReadResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadResponse_delete-Tuple{Ptr{UA_ReadResponse}}","page":"Home","title":"open62541.UA_ReadResponse_delete","text":"UA_ReadResponse_delete(x::Ptr{UA_ReadResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadResponse_deleteMembers-Tuple{Ptr{UA_ReadResponse}}","page":"Home","title":"open62541.UA_ReadResponse_deleteMembers","text":"UA_ReadResponse_deleteMembers(x::Ptr{UA_ReadResponse})\n\n(deprecated, use UA_ReadResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ReadResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadResponse_init-Tuple{Ptr{UA_ReadResponse}}","page":"Home","title":"open62541.UA_ReadResponse_init","text":"UA_ReadResponse_init\"(x::Ptr{UA_ReadResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadResponse_new-Tuple{}","page":"Home","title":"open62541.UA_ReadResponse_new","text":"UA_ReadResponse_new\"()::Ptr{UA_ReadResponse}\n\ncreates and initializes a UA_ReadResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ReadResponse_delete(x::Ptr{UA_ReadResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadValueId_clear-Tuple{Ptr{UA_ReadValueId}}","page":"Home","title":"open62541.UA_ReadValueId_clear","text":"UA_ReadValueId_clear\"(x::Ptr{UA_ReadValueId})\n\ndeletes the dynamically allocated content of the object x and calls UA_ReadValueId_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadValueId_copy-Tuple{UA_ReadValueId, Ptr{UA_ReadValueId}}","page":"Home","title":"open62541.UA_ReadValueId_copy","text":"UA_ReadValueId_copy\"(src::Ptr{UA_ReadValueId}, dst::Ptr{UA_ReadValueId})::UA_STATUSCODE\nUA_ReadValueId_copy\"(src::UA_ReadValueId, dst::Ptr{UA_ReadValueId})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadValueId_delete-Tuple{Ptr{UA_ReadValueId}}","page":"Home","title":"open62541.UA_ReadValueId_delete","text":"UA_ReadValueId_delete(x::Ptr{UA_ReadValueId})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadValueId_deleteMembers-Tuple{Ptr{UA_ReadValueId}}","page":"Home","title":"open62541.UA_ReadValueId_deleteMembers","text":"UA_ReadValueId_deleteMembers(x::Ptr{UA_ReadValueId})\n\n(deprecated, use UA_ReadValueId_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ReadValueId_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadValueId_init-Tuple{Ptr{UA_ReadValueId}}","page":"Home","title":"open62541.UA_ReadValueId_init","text":"UA_ReadValueId_init\"(x::Ptr{UA_ReadValueId})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReadValueId_new-Tuple{}","page":"Home","title":"open62541.UA_ReadValueId_new","text":"UA_ReadValueId_new\"()::Ptr{UA_ReadValueId}\n\ncreates and initializes a UA_ReadValueId object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ReadValueId_delete(x::Ptr{UA_ReadValueId})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RedundancySupport_clear-Tuple{Ptr{UA_RedundancySupport}}","page":"Home","title":"open62541.UA_RedundancySupport_clear","text":"UA_RedundancySupport_clear\"(x::Ptr{UA_RedundancySupport})\n\ndeletes the dynamically allocated content of the object x and calls UA_RedundancySupport_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RedundancySupport_copy-Tuple{UA_RedundancySupport, Ptr{UA_RedundancySupport}}","page":"Home","title":"open62541.UA_RedundancySupport_copy","text":"UA_RedundancySupport_copy\"(src::Ptr{UA_RedundancySupport}, dst::Ptr{UA_RedundancySupport})::UA_STATUSCODE\nUA_RedundancySupport_copy\"(src::UA_RedundancySupport, dst::Ptr{UA_RedundancySupport})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RedundancySupport_delete-Tuple{Ptr{UA_RedundancySupport}}","page":"Home","title":"open62541.UA_RedundancySupport_delete","text":"UA_RedundancySupport_delete(x::Ptr{UA_RedundancySupport})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RedundancySupport_deleteMembers-Tuple{Ptr{UA_RedundancySupport}}","page":"Home","title":"open62541.UA_RedundancySupport_deleteMembers","text":"UA_RedundancySupport_deleteMembers(x::Ptr{UA_RedundancySupport})\n\n(deprecated, use UA_RedundancySupport_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_RedundancySupport_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RedundancySupport_init-Tuple{Ptr{UA_RedundancySupport}}","page":"Home","title":"open62541.UA_RedundancySupport_init","text":"UA_RedundancySupport_init\"(x::Ptr{UA_RedundancySupport})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RedundancySupport_new-Tuple{}","page":"Home","title":"open62541.UA_RedundancySupport_new","text":"UA_RedundancySupport_new\"()::Ptr{UA_RedundancySupport}\n\ncreates and initializes a UA_RedundancySupport object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_RedundancySupport_delete(x::Ptr{UA_RedundancySupport})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReferenceDescription_clear-Tuple{Ptr{UA_ReferenceDescription}}","page":"Home","title":"open62541.UA_ReferenceDescription_clear","text":"UA_ReferenceDescription_clear\"(x::Ptr{UA_ReferenceDescription})\n\ndeletes the dynamically allocated content of the object x and calls UA_ReferenceDescription_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReferenceDescription_copy-Tuple{UA_ReferenceDescription, Ptr{UA_ReferenceDescription}}","page":"Home","title":"open62541.UA_ReferenceDescription_copy","text":"UA_ReferenceDescription_copy\"(src::Ptr{UA_ReferenceDescription}, dst::Ptr{UA_ReferenceDescription})::UA_STATUSCODE\nUA_ReferenceDescription_copy\"(src::UA_ReferenceDescription, dst::Ptr{UA_ReferenceDescription})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReferenceDescription_delete-Tuple{Ptr{UA_ReferenceDescription}}","page":"Home","title":"open62541.UA_ReferenceDescription_delete","text":"UA_ReferenceDescription_delete(x::Ptr{UA_ReferenceDescription})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReferenceDescription_deleteMembers-Tuple{Ptr{UA_ReferenceDescription}}","page":"Home","title":"open62541.UA_ReferenceDescription_deleteMembers","text":"UA_ReferenceDescription_deleteMembers(x::Ptr{UA_ReferenceDescription})\n\n(deprecated, use UA_ReferenceDescription_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ReferenceDescription_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReferenceDescription_init-Tuple{Ptr{UA_ReferenceDescription}}","page":"Home","title":"open62541.UA_ReferenceDescription_init","text":"UA_ReferenceDescription_init\"(x::Ptr{UA_ReferenceDescription})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReferenceDescription_new-Tuple{}","page":"Home","title":"open62541.UA_ReferenceDescription_new","text":"UA_ReferenceDescription_new\"()::Ptr{UA_ReferenceDescription}\n\ncreates and initializes a UA_ReferenceDescription object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ReferenceDescription_delete(x::Ptr{UA_ReferenceDescription})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReferenceTypeAttributes_clear-Tuple{Ptr{UA_ReferenceTypeAttributes}}","page":"Home","title":"open62541.UA_ReferenceTypeAttributes_clear","text":"UA_ReferenceTypeAttributes_clear\"(x::Ptr{UA_ReferenceTypeAttributes})\n\ndeletes the dynamically allocated content of the object x and calls UA_ReferenceTypeAttributes_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReferenceTypeAttributes_copy-Tuple{UA_ReferenceTypeAttributes, Ptr{UA_ReferenceTypeAttributes}}","page":"Home","title":"open62541.UA_ReferenceTypeAttributes_copy","text":"UA_ReferenceTypeAttributes_copy\"(src::Ptr{UA_ReferenceTypeAttributes}, dst::Ptr{UA_ReferenceTypeAttributes})::UA_STATUSCODE\nUA_ReferenceTypeAttributes_copy\"(src::UA_ReferenceTypeAttributes, dst::Ptr{UA_ReferenceTypeAttributes})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReferenceTypeAttributes_delete-Tuple{Ptr{UA_ReferenceTypeAttributes}}","page":"Home","title":"open62541.UA_ReferenceTypeAttributes_delete","text":"UA_ReferenceTypeAttributes_delete(x::Ptr{UA_ReferenceTypeAttributes})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReferenceTypeAttributes_deleteMembers-Tuple{Ptr{UA_ReferenceTypeAttributes}}","page":"Home","title":"open62541.UA_ReferenceTypeAttributes_deleteMembers","text":"UA_ReferenceTypeAttributes_deleteMembers(x::Ptr{UA_ReferenceTypeAttributes})\n\n(deprecated, use UA_ReferenceTypeAttributes_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ReferenceTypeAttributes_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReferenceTypeAttributes_generate-Tuple{}","page":"Home","title":"open62541.UA_ReferenceTypeAttributes_generate","text":"UA_ReferenceTypeAttributes_generate(; displayname::AbstractString,\n    description::AbstractString, localization::AbstractString = \"en-US\",\n    writemask::Union{Nothing, UInt32} = nothing,\n    userwritemask::Union{Nothing, UInt32} = nothing,\n    isabstract::Union{Nothing, Bool} = nothing\n    symmetric::Union{Nothing, Bool} = nothing,\n    inversename::Union{Nothing, AbstractString} = nothing)::Ptr{UA_ReferenceTypeAttributes}\n\ngenerates a UA_ReferenceTypeAttributes object. Memory for the object is allocated by C and needs to be cleaned up by calling UA_ReferenceTypeAttributes_delete(x) after usage.\n\nFor keywords given as nothing, the respective default value is used, see UA_ReferenceTypeAttributes_default[]\n\nSee also UA_WRITEMASK and UA_USERWRITEMASK for information on how to generate the respective keyword inputs.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReferenceTypeAttributes_init-Tuple{Ptr{UA_ReferenceTypeAttributes}}","page":"Home","title":"open62541.UA_ReferenceTypeAttributes_init","text":"UA_ReferenceTypeAttributes_init\"(x::Ptr{UA_ReferenceTypeAttributes})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ReferenceTypeAttributes_new-Tuple{}","page":"Home","title":"open62541.UA_ReferenceTypeAttributes_new","text":"UA_ReferenceTypeAttributes_new\"()::Ptr{UA_ReferenceTypeAttributes}\n\ncreates and initializes a UA_ReferenceTypeAttributes object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ReferenceTypeAttributes_delete(x::Ptr{UA_ReferenceTypeAttributes})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RegisterNodesRequest_clear-Tuple{Ptr{UA_RegisterNodesRequest}}","page":"Home","title":"open62541.UA_RegisterNodesRequest_clear","text":"UA_RegisterNodesRequest_clear\"(x::Ptr{UA_RegisterNodesRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_RegisterNodesRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RegisterNodesRequest_copy-Tuple{UA_RegisterNodesRequest, Ptr{UA_RegisterNodesRequest}}","page":"Home","title":"open62541.UA_RegisterNodesRequest_copy","text":"UA_RegisterNodesRequest_copy\"(src::Ptr{UA_RegisterNodesRequest}, dst::Ptr{UA_RegisterNodesRequest})::UA_STATUSCODE\nUA_RegisterNodesRequest_copy\"(src::UA_RegisterNodesRequest, dst::Ptr{UA_RegisterNodesRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RegisterNodesRequest_delete-Tuple{Ptr{UA_RegisterNodesRequest}}","page":"Home","title":"open62541.UA_RegisterNodesRequest_delete","text":"UA_RegisterNodesRequest_delete(x::Ptr{UA_RegisterNodesRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RegisterNodesRequest_deleteMembers-Tuple{Ptr{UA_RegisterNodesRequest}}","page":"Home","title":"open62541.UA_RegisterNodesRequest_deleteMembers","text":"UA_RegisterNodesRequest_deleteMembers(x::Ptr{UA_RegisterNodesRequest})\n\n(deprecated, use UA_RegisterNodesRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_RegisterNodesRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RegisterNodesRequest_init-Tuple{Ptr{UA_RegisterNodesRequest}}","page":"Home","title":"open62541.UA_RegisterNodesRequest_init","text":"UA_RegisterNodesRequest_init\"(x::Ptr{UA_RegisterNodesRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RegisterNodesRequest_new-Tuple{}","page":"Home","title":"open62541.UA_RegisterNodesRequest_new","text":"UA_RegisterNodesRequest_new\"()::Ptr{UA_RegisterNodesRequest}\n\ncreates and initializes a UA_RegisterNodesRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_RegisterNodesRequest_delete(x::Ptr{UA_RegisterNodesRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RegisterNodesResponse_clear-Tuple{Ptr{UA_RegisterNodesResponse}}","page":"Home","title":"open62541.UA_RegisterNodesResponse_clear","text":"UA_RegisterNodesResponse_clear\"(x::Ptr{UA_RegisterNodesResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_RegisterNodesResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RegisterNodesResponse_copy-Tuple{UA_RegisterNodesResponse, Ptr{UA_RegisterNodesResponse}}","page":"Home","title":"open62541.UA_RegisterNodesResponse_copy","text":"UA_RegisterNodesResponse_copy\"(src::Ptr{UA_RegisterNodesResponse}, dst::Ptr{UA_RegisterNodesResponse})::UA_STATUSCODE\nUA_RegisterNodesResponse_copy\"(src::UA_RegisterNodesResponse, dst::Ptr{UA_RegisterNodesResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RegisterNodesResponse_delete-Tuple{Ptr{UA_RegisterNodesResponse}}","page":"Home","title":"open62541.UA_RegisterNodesResponse_delete","text":"UA_RegisterNodesResponse_delete(x::Ptr{UA_RegisterNodesResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RegisterNodesResponse_deleteMembers-Tuple{Ptr{UA_RegisterNodesResponse}}","page":"Home","title":"open62541.UA_RegisterNodesResponse_deleteMembers","text":"UA_RegisterNodesResponse_deleteMembers(x::Ptr{UA_RegisterNodesResponse})\n\n(deprecated, use UA_RegisterNodesResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_RegisterNodesResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RegisterNodesResponse_init-Tuple{Ptr{UA_RegisterNodesResponse}}","page":"Home","title":"open62541.UA_RegisterNodesResponse_init","text":"UA_RegisterNodesResponse_init\"(x::Ptr{UA_RegisterNodesResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RegisterNodesResponse_new-Tuple{}","page":"Home","title":"open62541.UA_RegisterNodesResponse_new","text":"UA_RegisterNodesResponse_new\"()::Ptr{UA_RegisterNodesResponse}\n\ncreates and initializes a UA_RegisterNodesResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_RegisterNodesResponse_delete(x::Ptr{UA_RegisterNodesResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RelativePathElement_clear-Tuple{Ptr{UA_RelativePathElement}}","page":"Home","title":"open62541.UA_RelativePathElement_clear","text":"UA_RelativePathElement_clear\"(x::Ptr{UA_RelativePathElement})\n\ndeletes the dynamically allocated content of the object x and calls UA_RelativePathElement_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RelativePathElement_copy-Tuple{UA_RelativePathElement, Ptr{UA_RelativePathElement}}","page":"Home","title":"open62541.UA_RelativePathElement_copy","text":"UA_RelativePathElement_copy\"(src::Ptr{UA_RelativePathElement}, dst::Ptr{UA_RelativePathElement})::UA_STATUSCODE\nUA_RelativePathElement_copy\"(src::UA_RelativePathElement, dst::Ptr{UA_RelativePathElement})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RelativePathElement_delete-Tuple{Ptr{UA_RelativePathElement}}","page":"Home","title":"open62541.UA_RelativePathElement_delete","text":"UA_RelativePathElement_delete(x::Ptr{UA_RelativePathElement})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RelativePathElement_deleteMembers-Tuple{Ptr{UA_RelativePathElement}}","page":"Home","title":"open62541.UA_RelativePathElement_deleteMembers","text":"UA_RelativePathElement_deleteMembers(x::Ptr{UA_RelativePathElement})\n\n(deprecated, use UA_RelativePathElement_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_RelativePathElement_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RelativePathElement_init-Tuple{Ptr{UA_RelativePathElement}}","page":"Home","title":"open62541.UA_RelativePathElement_init","text":"UA_RelativePathElement_init\"(x::Ptr{UA_RelativePathElement})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RelativePathElement_new-Tuple{}","page":"Home","title":"open62541.UA_RelativePathElement_new","text":"UA_RelativePathElement_new\"()::Ptr{UA_RelativePathElement}\n\ncreates and initializes a UA_RelativePathElement object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_RelativePathElement_delete(x::Ptr{UA_RelativePathElement})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RelativePath_clear-Tuple{Ptr{UA_RelativePath}}","page":"Home","title":"open62541.UA_RelativePath_clear","text":"UA_RelativePath_clear\"(x::Ptr{UA_RelativePath})\n\ndeletes the dynamically allocated content of the object x and calls UA_RelativePath_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RelativePath_copy-Tuple{UA_RelativePath, Ptr{UA_RelativePath}}","page":"Home","title":"open62541.UA_RelativePath_copy","text":"UA_RelativePath_copy\"(src::Ptr{UA_RelativePath}, dst::Ptr{UA_RelativePath})::UA_STATUSCODE\nUA_RelativePath_copy\"(src::UA_RelativePath, dst::Ptr{UA_RelativePath})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RelativePath_delete-Tuple{Ptr{UA_RelativePath}}","page":"Home","title":"open62541.UA_RelativePath_delete","text":"UA_RelativePath_delete(x::Ptr{UA_RelativePath})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RelativePath_deleteMembers-Tuple{Ptr{UA_RelativePath}}","page":"Home","title":"open62541.UA_RelativePath_deleteMembers","text":"UA_RelativePath_deleteMembers(x::Ptr{UA_RelativePath})\n\n(deprecated, use UA_RelativePath_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_RelativePath_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RelativePath_init-Tuple{Ptr{UA_RelativePath}}","page":"Home","title":"open62541.UA_RelativePath_init","text":"UA_RelativePath_init\"(x::Ptr{UA_RelativePath})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RelativePath_new-Tuple{}","page":"Home","title":"open62541.UA_RelativePath_new","text":"UA_RelativePath_new\"()::Ptr{UA_RelativePath}\n\ncreates and initializes a UA_RelativePath object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_RelativePath_delete(x::Ptr{UA_RelativePath})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RepublishRequest_clear-Tuple{Ptr{UA_RepublishRequest}}","page":"Home","title":"open62541.UA_RepublishRequest_clear","text":"UA_RepublishRequest_clear\"(x::Ptr{UA_RepublishRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_RepublishRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RepublishRequest_copy-Tuple{UA_RepublishRequest, Ptr{UA_RepublishRequest}}","page":"Home","title":"open62541.UA_RepublishRequest_copy","text":"UA_RepublishRequest_copy\"(src::Ptr{UA_RepublishRequest}, dst::Ptr{UA_RepublishRequest})::UA_STATUSCODE\nUA_RepublishRequest_copy\"(src::UA_RepublishRequest, dst::Ptr{UA_RepublishRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RepublishRequest_delete-Tuple{Ptr{UA_RepublishRequest}}","page":"Home","title":"open62541.UA_RepublishRequest_delete","text":"UA_RepublishRequest_delete(x::Ptr{UA_RepublishRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RepublishRequest_deleteMembers-Tuple{Ptr{UA_RepublishRequest}}","page":"Home","title":"open62541.UA_RepublishRequest_deleteMembers","text":"UA_RepublishRequest_deleteMembers(x::Ptr{UA_RepublishRequest})\n\n(deprecated, use UA_RepublishRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_RepublishRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RepublishRequest_init-Tuple{Ptr{UA_RepublishRequest}}","page":"Home","title":"open62541.UA_RepublishRequest_init","text":"UA_RepublishRequest_init\"(x::Ptr{UA_RepublishRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RepublishRequest_new-Tuple{}","page":"Home","title":"open62541.UA_RepublishRequest_new","text":"UA_RepublishRequest_new\"()::Ptr{UA_RepublishRequest}\n\ncreates and initializes a UA_RepublishRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_RepublishRequest_delete(x::Ptr{UA_RepublishRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RepublishResponse_clear-Tuple{Ptr{UA_RepublishResponse}}","page":"Home","title":"open62541.UA_RepublishResponse_clear","text":"UA_RepublishResponse_clear\"(x::Ptr{UA_RepublishResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_RepublishResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RepublishResponse_copy-Tuple{UA_RepublishResponse, Ptr{UA_RepublishResponse}}","page":"Home","title":"open62541.UA_RepublishResponse_copy","text":"UA_RepublishResponse_copy\"(src::Ptr{UA_RepublishResponse}, dst::Ptr{UA_RepublishResponse})::UA_STATUSCODE\nUA_RepublishResponse_copy\"(src::UA_RepublishResponse, dst::Ptr{UA_RepublishResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RepublishResponse_delete-Tuple{Ptr{UA_RepublishResponse}}","page":"Home","title":"open62541.UA_RepublishResponse_delete","text":"UA_RepublishResponse_delete(x::Ptr{UA_RepublishResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RepublishResponse_deleteMembers-Tuple{Ptr{UA_RepublishResponse}}","page":"Home","title":"open62541.UA_RepublishResponse_deleteMembers","text":"UA_RepublishResponse_deleteMembers(x::Ptr{UA_RepublishResponse})\n\n(deprecated, use UA_RepublishResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_RepublishResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RepublishResponse_init-Tuple{Ptr{UA_RepublishResponse}}","page":"Home","title":"open62541.UA_RepublishResponse_init","text":"UA_RepublishResponse_init\"(x::Ptr{UA_RepublishResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RepublishResponse_new-Tuple{}","page":"Home","title":"open62541.UA_RepublishResponse_new","text":"UA_RepublishResponse_new\"()::Ptr{UA_RepublishResponse}\n\ncreates and initializes a UA_RepublishResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_RepublishResponse_delete(x::Ptr{UA_RepublishResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RequestHeader_clear-Tuple{Ptr{UA_RequestHeader}}","page":"Home","title":"open62541.UA_RequestHeader_clear","text":"UA_RequestHeader_clear\"(x::Ptr{UA_RequestHeader})\n\ndeletes the dynamically allocated content of the object x and calls UA_RequestHeader_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RequestHeader_copy-Tuple{UA_RequestHeader, Ptr{UA_RequestHeader}}","page":"Home","title":"open62541.UA_RequestHeader_copy","text":"UA_RequestHeader_copy\"(src::Ptr{UA_RequestHeader}, dst::Ptr{UA_RequestHeader})::UA_STATUSCODE\nUA_RequestHeader_copy\"(src::UA_RequestHeader, dst::Ptr{UA_RequestHeader})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RequestHeader_delete-Tuple{Ptr{UA_RequestHeader}}","page":"Home","title":"open62541.UA_RequestHeader_delete","text":"UA_RequestHeader_delete(x::Ptr{UA_RequestHeader})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RequestHeader_deleteMembers-Tuple{Ptr{UA_RequestHeader}}","page":"Home","title":"open62541.UA_RequestHeader_deleteMembers","text":"UA_RequestHeader_deleteMembers(x::Ptr{UA_RequestHeader})\n\n(deprecated, use UA_RequestHeader_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_RequestHeader_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RequestHeader_init-Tuple{Ptr{UA_RequestHeader}}","page":"Home","title":"open62541.UA_RequestHeader_init","text":"UA_RequestHeader_init\"(x::Ptr{UA_RequestHeader})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_RequestHeader_new-Tuple{}","page":"Home","title":"open62541.UA_RequestHeader_new","text":"UA_RequestHeader_new\"()::Ptr{UA_RequestHeader}\n\ncreates and initializes a UA_RequestHeader object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_RequestHeader_delete(x::Ptr{UA_RequestHeader})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ResponseHeader_clear-Tuple{Ptr{UA_ResponseHeader}}","page":"Home","title":"open62541.UA_ResponseHeader_clear","text":"UA_ResponseHeader_clear\"(x::Ptr{UA_ResponseHeader})\n\ndeletes the dynamically allocated content of the object x and calls UA_ResponseHeader_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ResponseHeader_copy-Tuple{UA_ResponseHeader, Ptr{UA_ResponseHeader}}","page":"Home","title":"open62541.UA_ResponseHeader_copy","text":"UA_ResponseHeader_copy\"(src::Ptr{UA_ResponseHeader}, dst::Ptr{UA_ResponseHeader})::UA_STATUSCODE\nUA_ResponseHeader_copy\"(src::UA_ResponseHeader, dst::Ptr{UA_ResponseHeader})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ResponseHeader_delete-Tuple{Ptr{UA_ResponseHeader}}","page":"Home","title":"open62541.UA_ResponseHeader_delete","text":"UA_ResponseHeader_delete(x::Ptr{UA_ResponseHeader})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ResponseHeader_deleteMembers-Tuple{Ptr{UA_ResponseHeader}}","page":"Home","title":"open62541.UA_ResponseHeader_deleteMembers","text":"UA_ResponseHeader_deleteMembers(x::Ptr{UA_ResponseHeader})\n\n(deprecated, use UA_ResponseHeader_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ResponseHeader_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ResponseHeader_init-Tuple{Ptr{UA_ResponseHeader}}","page":"Home","title":"open62541.UA_ResponseHeader_init","text":"UA_ResponseHeader_init\"(x::Ptr{UA_ResponseHeader})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ResponseHeader_new-Tuple{}","page":"Home","title":"open62541.UA_ResponseHeader_new","text":"UA_ResponseHeader_new\"()::Ptr{UA_ResponseHeader}\n\ncreates and initializes a UA_ResponseHeader object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ResponseHeader_delete(x::Ptr{UA_ResponseHeader})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SByte_clear-Tuple{Ptr{Int8}}","page":"Home","title":"open62541.UA_SByte_clear","text":"Int8_clear\"(x::Ptr{Int8})\n\ndeletes the dynamically allocated content of the object x and calls Int8_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SByte_copy-Tuple{Int8, Ptr{Int8}}","page":"Home","title":"open62541.UA_SByte_copy","text":"Int8_copy\"(src::Ptr{Int8}, dst::Ptr{Int8})::UA_STATUSCODE\nInt8_copy\"(src::Int8, dst::Ptr{Int8})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SByte_delete-Tuple{Ptr{Int8}}","page":"Home","title":"open62541.UA_SByte_delete","text":"Int8_delete(x::Ptr{Int8})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SByte_deleteMembers-Tuple{Ptr{Int8}}","page":"Home","title":"open62541.UA_SByte_deleteMembers","text":"Int8_deleteMembers(x::Ptr{Int8})\n\n(deprecated, use Int8_clear(x) instead) deletes the dynamically allocated content of the object x and calls Int8_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SByte_init-Tuple{Ptr{Int8}}","page":"Home","title":"open62541.UA_SByte_init","text":"Int8_init\"(x::Ptr{Int8})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SByte_new-Tuple{}","page":"Home","title":"open62541.UA_SByte_new","text":"Int8_new\"()::Ptr{Int8}\n\ncreates and initializes a Int8 object whose memory is allocated by C. After use, it needs to be  cleaned up with Int8_delete(x::Ptr{Int8})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_STRING-Tuple{AbstractString}","page":"Home","title":"open62541.UA_STRING","text":"UA_STRING(s::AbstractString)::Ptr{UA_String}\n\ncreates a UA_String object from s. Memory is allocated by C and needs to be cleaned up with UAStringdelete(x::Ptr{UA_String})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_STRING_ALLOC-Tuple{AbstractString}","page":"Home","title":"open62541.UA_STRING_ALLOC","text":"UA_STRING_ALLOC(s::AbstractString)::Ptr{UA_String}\n\ncreates a UA_String object from s. Memory is allocated by C and needs to be cleaned up with UAStringdelete(x::Ptr{UA_String})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SecurityPolicy_None-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_SecurityPolicy_None","text":"UA_SecurityPolicy_None(policy, localCertificate, logger)\n\n** amalgamated original file \"/srcdir/open62541/plugins/include/open62541/plugin/securitypolicy_default.h\" ***\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SecurityTokenRequestType_clear-Tuple{Ptr{UA_SecurityTokenRequestType}}","page":"Home","title":"open62541.UA_SecurityTokenRequestType_clear","text":"UA_SecurityTokenRequestType_clear\"(x::Ptr{UA_SecurityTokenRequestType})\n\ndeletes the dynamically allocated content of the object x and calls UA_SecurityTokenRequestType_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SecurityTokenRequestType_copy-Tuple{UA_SecurityTokenRequestType, Ptr{UA_SecurityTokenRequestType}}","page":"Home","title":"open62541.UA_SecurityTokenRequestType_copy","text":"UA_SecurityTokenRequestType_copy\"(src::Ptr{UA_SecurityTokenRequestType}, dst::Ptr{UA_SecurityTokenRequestType})::UA_STATUSCODE\nUA_SecurityTokenRequestType_copy\"(src::UA_SecurityTokenRequestType, dst::Ptr{UA_SecurityTokenRequestType})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SecurityTokenRequestType_delete-Tuple{Ptr{UA_SecurityTokenRequestType}}","page":"Home","title":"open62541.UA_SecurityTokenRequestType_delete","text":"UA_SecurityTokenRequestType_delete(x::Ptr{UA_SecurityTokenRequestType})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SecurityTokenRequestType_deleteMembers-Tuple{Ptr{UA_SecurityTokenRequestType}}","page":"Home","title":"open62541.UA_SecurityTokenRequestType_deleteMembers","text":"UA_SecurityTokenRequestType_deleteMembers(x::Ptr{UA_SecurityTokenRequestType})\n\n(deprecated, use UA_SecurityTokenRequestType_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_SecurityTokenRequestType_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SecurityTokenRequestType_init-Tuple{Ptr{UA_SecurityTokenRequestType}}","page":"Home","title":"open62541.UA_SecurityTokenRequestType_init","text":"UA_SecurityTokenRequestType_init\"(x::Ptr{UA_SecurityTokenRequestType})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SecurityTokenRequestType_new-Tuple{}","page":"Home","title":"open62541.UA_SecurityTokenRequestType_new","text":"UA_SecurityTokenRequestType_new\"()::Ptr{UA_SecurityTokenRequestType}\n\ncreates and initializes a UA_SecurityTokenRequestType object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_SecurityTokenRequestType_delete(x::Ptr{UA_SecurityTokenRequestType})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerCallback_generate-Tuple{Function}","page":"Home","title":"open62541.UA_ServerCallback_generate","text":"UA_ServerCallback_generate(f::Function)\n\ncreates a UA_ServerCallback object that can be used in UA_Server_addTimedCallback or UA_Server_addRepeatedCallback.\n\nf must be a Julia function with the following signature: f(server::Ptr{UA_Server}, data::Ptr{Cvoid}))::Nothing\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerConfig_setDefault-Tuple{Any}","page":"Home","title":"open62541.UA_ServerConfig_setDefault","text":"UA_ServerConfig_setDefault(config)\n\nCreates a server config on the default port 4840 with no server certificate.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerConfig_setMinimal-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_ServerConfig_setMinimal","text":"UA_ServerConfig_setMinimal(config, portNumber, certificate)\n\ncreates a new server config with one endpoint. The config will set the tcp network layer to the given port and adds a single endpoint with the security policy SecurityPolicyNone to the server. A server certificate may be supplied but is optional.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerDiagnosticsSummaryDataType_clear-Tuple{Ptr{UA_ServerDiagnosticsSummaryDataType}}","page":"Home","title":"open62541.UA_ServerDiagnosticsSummaryDataType_clear","text":"UA_ServerDiagnosticsSummaryDataType_clear\"(x::Ptr{UA_ServerDiagnosticsSummaryDataType})\n\ndeletes the dynamically allocated content of the object x and calls UA_ServerDiagnosticsSummaryDataType_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerDiagnosticsSummaryDataType_copy-Tuple{UA_ServerDiagnosticsSummaryDataType, Ptr{UA_ServerDiagnosticsSummaryDataType}}","page":"Home","title":"open62541.UA_ServerDiagnosticsSummaryDataType_copy","text":"UA_ServerDiagnosticsSummaryDataType_copy\"(src::Ptr{UA_ServerDiagnosticsSummaryDataType}, dst::Ptr{UA_ServerDiagnosticsSummaryDataType})::UA_STATUSCODE\nUA_ServerDiagnosticsSummaryDataType_copy\"(src::UA_ServerDiagnosticsSummaryDataType, dst::Ptr{UA_ServerDiagnosticsSummaryDataType})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerDiagnosticsSummaryDataType_delete-Tuple{Ptr{UA_ServerDiagnosticsSummaryDataType}}","page":"Home","title":"open62541.UA_ServerDiagnosticsSummaryDataType_delete","text":"UA_ServerDiagnosticsSummaryDataType_delete(x::Ptr{UA_ServerDiagnosticsSummaryDataType})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerDiagnosticsSummaryDataType_deleteMembers-Tuple{Ptr{UA_ServerDiagnosticsSummaryDataType}}","page":"Home","title":"open62541.UA_ServerDiagnosticsSummaryDataType_deleteMembers","text":"UA_ServerDiagnosticsSummaryDataType_deleteMembers(x::Ptr{UA_ServerDiagnosticsSummaryDataType})\n\n(deprecated, use UA_ServerDiagnosticsSummaryDataType_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ServerDiagnosticsSummaryDataType_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerDiagnosticsSummaryDataType_init-Tuple{Ptr{UA_ServerDiagnosticsSummaryDataType}}","page":"Home","title":"open62541.UA_ServerDiagnosticsSummaryDataType_init","text":"UA_ServerDiagnosticsSummaryDataType_init\"(x::Ptr{UA_ServerDiagnosticsSummaryDataType})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerDiagnosticsSummaryDataType_new-Tuple{}","page":"Home","title":"open62541.UA_ServerDiagnosticsSummaryDataType_new","text":"UA_ServerDiagnosticsSummaryDataType_new\"()::Ptr{UA_ServerDiagnosticsSummaryDataType}\n\ncreates and initializes a UA_ServerDiagnosticsSummaryDataType object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ServerDiagnosticsSummaryDataType_delete(x::Ptr{UA_ServerDiagnosticsSummaryDataType})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerState_clear-Tuple{Ptr{UA_ServerState}}","page":"Home","title":"open62541.UA_ServerState_clear","text":"UA_ServerState_clear\"(x::Ptr{UA_ServerState})\n\ndeletes the dynamically allocated content of the object x and calls UA_ServerState_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerState_copy-Tuple{UA_ServerState, Ptr{UA_ServerState}}","page":"Home","title":"open62541.UA_ServerState_copy","text":"UA_ServerState_copy\"(src::Ptr{UA_ServerState}, dst::Ptr{UA_ServerState})::UA_STATUSCODE\nUA_ServerState_copy\"(src::UA_ServerState, dst::Ptr{UA_ServerState})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerState_delete-Tuple{Ptr{UA_ServerState}}","page":"Home","title":"open62541.UA_ServerState_delete","text":"UA_ServerState_delete(x::Ptr{UA_ServerState})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerState_deleteMembers-Tuple{Ptr{UA_ServerState}}","page":"Home","title":"open62541.UA_ServerState_deleteMembers","text":"UA_ServerState_deleteMembers(x::Ptr{UA_ServerState})\n\n(deprecated, use UA_ServerState_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ServerState_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerState_init-Tuple{Ptr{UA_ServerState}}","page":"Home","title":"open62541.UA_ServerState_init","text":"UA_ServerState_init\"(x::Ptr{UA_ServerState})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerState_new-Tuple{}","page":"Home","title":"open62541.UA_ServerState_new","text":"UA_ServerState_new\"()::Ptr{UA_ServerState}\n\ncreates and initializes a UA_ServerState object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ServerState_delete(x::Ptr{UA_ServerState})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerStatusDataType_clear-Tuple{Ptr{UA_ServerStatusDataType}}","page":"Home","title":"open62541.UA_ServerStatusDataType_clear","text":"UA_ServerStatusDataType_clear\"(x::Ptr{UA_ServerStatusDataType})\n\ndeletes the dynamically allocated content of the object x and calls UA_ServerStatusDataType_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerStatusDataType_copy-Tuple{UA_ServerStatusDataType, Ptr{UA_ServerStatusDataType}}","page":"Home","title":"open62541.UA_ServerStatusDataType_copy","text":"UA_ServerStatusDataType_copy\"(src::Ptr{UA_ServerStatusDataType}, dst::Ptr{UA_ServerStatusDataType})::UA_STATUSCODE\nUA_ServerStatusDataType_copy\"(src::UA_ServerStatusDataType, dst::Ptr{UA_ServerStatusDataType})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerStatusDataType_delete-Tuple{Ptr{UA_ServerStatusDataType}}","page":"Home","title":"open62541.UA_ServerStatusDataType_delete","text":"UA_ServerStatusDataType_delete(x::Ptr{UA_ServerStatusDataType})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerStatusDataType_deleteMembers-Tuple{Ptr{UA_ServerStatusDataType}}","page":"Home","title":"open62541.UA_ServerStatusDataType_deleteMembers","text":"UA_ServerStatusDataType_deleteMembers(x::Ptr{UA_ServerStatusDataType})\n\n(deprecated, use UA_ServerStatusDataType_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ServerStatusDataType_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerStatusDataType_init-Tuple{Ptr{UA_ServerStatusDataType}}","page":"Home","title":"open62541.UA_ServerStatusDataType_init","text":"UA_ServerStatusDataType_init\"(x::Ptr{UA_ServerStatusDataType})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServerStatusDataType_new-Tuple{}","page":"Home","title":"open62541.UA_ServerStatusDataType_new","text":"UA_ServerStatusDataType_new\"()::Ptr{UA_ServerStatusDataType}\n\ncreates and initializes a UA_ServerStatusDataType object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ServerStatusDataType_delete(x::Ptr{UA_ServerStatusDataType})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_addMethodNode-Tuple{Any, Any, Any, Any, Any, Any, Function, Any, Any, Any, Any, Any, Any}","page":"Home","title":"open62541.UA_Server_addMethodNode","text":"UA_Server_addMethodNode(server::Ptr{UA_Server}, requestednewnodeid::Ptr{UA_NodeId}, \n        parentnodeid::Ptr{UA_NodeId}, referenceTypeId::Ptr{UA_NodeId}, \n        browseName::Ptr{UA_QualifiedName}, attr::Ptr{UA_MethodAttributes}, \n        method::Function, inputArgumentsSize::Csize_t, inputArguments::Union{UA_Argument, AbstractArray{UA_Argument}}, \n        outputArgumentsSize::Csize_t, outputArguments::Union{UA_Argument, AbstractArray{UA_Argument}}, \n        nodeContext::Ptr{UA_NodeId}, outNewNodeId::Ptr{UA_NodeId})::UA_StatusCode\n\nuses the server API to add a method node with the callback method to the server. UA_MethodCallback_generate is internally called on the method supplied and thus its function signature must match its requirements.\n\nSee UA_MethodAttributes_generate on how to define valid method attributes.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_addNode_begin-NTuple{11, Any}","page":"Home","title":"open62541.UA_Server_addNode_begin","text":"UA_Server_addNode_begin(server, nodeClass, requestedNewNodeId, parentNodeId, referenceTypeId, browseName, typeDefinition, attr, attributeType, nodeContext, outNewNodeId)\n\nThe method pair UA_Server_addNode_begin and _finish splits the AddNodes service in two parts. This is useful if the node shall be modified before finish the instantiation. For example to add children with specific NodeIds. Otherwise, mandatory children (e.g. of an ObjectType) are added with pseudo-random unique NodeIds. Existing children are detected during the _finish part via their matching BrowseName.\n\nThe _begin method: - prepares the node and adds it to the nodestore - copies some unassigned attributes from the TypeDefinition node internally - adds the references to the parent (and the TypeDefinition if applicable) - performs type-checking of variables.\n\nYou can add an object node without a parent if you set the parentNodeId and referenceTypeId to UA_NODE_ID_NULL. Then you need to add the parent reference and hasTypeDef reference yourself before calling the _finish method. Not that this is only allowed for object nodes.\n\nThe _finish method: - copies mandatory children - calls the node constructor(s) at the end - may remove the node if it encounters an error.\n\nThe special UA_Server_addMethodNode_finish method needs to be used for method nodes, since there you need to explicitly specifiy the input and output arguments which are added in the finish step (if not yet already there)\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_addReference-NTuple{5, Any}","page":"Home","title":"open62541.UA_Server_addReference","text":"UA_Server_addReference(server, sourceId, refTypeId, targetId, isForward)\n\nReference Management ––––––––––\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_browse-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_browse","text":"UA_Server_browse(server, maxReferences, bd)\n\nBrowsing ––––\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_call-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_call","text":"UA_Server_call(server::Ptr{UA_Server}, request::Ptr{UA_CallMethodRequest}, result::Ptr{UA_CallMethodResult})::Nothing\n\nuses the server API to process the method call request request on the server. Note that result is mutated.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_closeSession-Tuple{Any, Any}","page":"Home","title":"open62541.UA_Server_closeSession","text":"UA_Server_closeSession(server, sessionId)\n\nSession Handling –––––––– A new session is announced via the AccessControl plugin. The session identifier is forwarded to the relevant callbacks back into userland. The following methods enable an interaction with a particular session.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_findDataType-Tuple{Any, Any}","page":"Home","title":"open62541.UA_Server_findDataType","text":"UA_Server_findDataType(server, typeId)\n\nUtility Functions ––––––––-\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_new-Tuple{}","page":"Home","title":"open62541.UA_Server_new","text":"UA_Server_new()\n\n** amalgamated original file \"/srcdir/open62541/plugins/include/open62541/server_config_default.h\" ***\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_processBinaryMessage-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_processBinaryMessage","text":"UA_Server_processBinaryMessage(server, connection, message)\n\nServer Network Layer –––––––––– The server exposes two functions to interact with remote clients: processBinaryMessage and removeConnection. These functions are called by the server network layer.\n\nIt is the job of the server network layer to listen on a TCP socket, to accept new connections, to call the server with received messages and to signal closed connections to the server.\n\nThe network layer is part of the server config. So users can provide a custom implementation if the provided example does not fit their architecture. The network layer is invoked only from the server's main loop. So the network layer does not need to be thread-safe. If the network layer receives a positive duration for blocking listening, the server's main loop will block until a message is received or the duration times out.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_readAccessLevel","page":"Home","title":"open62541.UA_Server_readAccessLevel","text":"UA_Server_readAccessLevel(server, nodeId, out = UA_Byte_new())\n\nUses the Server API to read the value of the attribute AccessLevel  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readArrayDimensions","page":"Home","title":"open62541.UA_Server_readArrayDimensions","text":"UA_Server_readArrayDimensions(server, nodeId, out = UA_Variant_new())\n\nUses the Server API to read the value of the attribute ArrayDimensions  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readBrowseName","page":"Home","title":"open62541.UA_Server_readBrowseName","text":"UA_Server_readBrowseName(server, nodeId, out = UA_QualifiedName_new())\n\nUses the Server API to read the value of the attribute BrowseName  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readContainsNoLoops","page":"Home","title":"open62541.UA_Server_readContainsNoLoops","text":"UA_Server_readContainsNoLoops(server, nodeId, out = UA_Boolean_new())\n\nUses the Server API to read the value of the attribute ContainsNoLoops  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readDataType","page":"Home","title":"open62541.UA_Server_readDataType","text":"UA_Server_readDataType(server, nodeId, out = UA_NodeId_new())\n\nUses the Server API to read the value of the attribute DataType  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readDescription","page":"Home","title":"open62541.UA_Server_readDescription","text":"UA_Server_readDescription(server, nodeId, out = UA_LocalizedText_new())\n\nUses the Server API to read the value of the attribute Description  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readDisplayName","page":"Home","title":"open62541.UA_Server_readDisplayName","text":"UA_Server_readDisplayName(server, nodeId, out = UA_LocalizedText_new())\n\nUses the Server API to read the value of the attribute DisplayName  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readEventNotifier","page":"Home","title":"open62541.UA_Server_readEventNotifier","text":"UA_Server_readEventNotifier(server, nodeId, out = UA_Byte_new())\n\nUses the Server API to read the value of the attribute EventNotifier  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readExecutable","page":"Home","title":"open62541.UA_Server_readExecutable","text":"UA_Server_readExecutable(server, nodeId, out = UA_Boolean_new())\n\nUses the Server API to read the value of the attribute Executable  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readHistorizing","page":"Home","title":"open62541.UA_Server_readHistorizing","text":"UA_Server_readHistorizing(server, nodeId, out = UA_Boolean_new())\n\nUses the Server API to read the value of the attribute Historizing  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readInverseName","page":"Home","title":"open62541.UA_Server_readInverseName","text":"UA_Server_readInverseName(server, nodeId, out = UA_LocalizedText_new())\n\nUses the Server API to read the value of the attribute InverseName  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readIsAbstract","page":"Home","title":"open62541.UA_Server_readIsAbstract","text":"UA_Server_readIsAbstract(server, nodeId, out = UA_Boolean_new())\n\nUses the Server API to read the value of the attribute IsAbstract  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readMinimumSamplingInterval","page":"Home","title":"open62541.UA_Server_readMinimumSamplingInterval","text":"UA_Server_readMinimumSamplingInterval(server, nodeId, out = UA_Double_new())\n\nUses the Server API to read the value of the attribute MinimumSamplingInterval  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readNodeClass","page":"Home","title":"open62541.UA_Server_readNodeClass","text":"UA_Server_readNodeClass(server, nodeId, out = UA_NodeClass_new())\n\nUses the Server API to read the value of the attribute NodeClass  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readNodeId","page":"Home","title":"open62541.UA_Server_readNodeId","text":"UA_Server_readNodeId(server, nodeId, out = UA_NodeId_new())\n\nUses the Server API to read the value of the attribute NodeId  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readSymmetric","page":"Home","title":"open62541.UA_Server_readSymmetric","text":"UA_Server_readSymmetric(server, nodeId, out = UA_Boolean_new())\n\nUses the Server API to read the value of the attribute Symmetric  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readValue","page":"Home","title":"open62541.UA_Server_readValue","text":"UA_Server_readValue(server, nodeId, out = UA_Variant_new())\n\nUses the Server API to read the value of the attribute Value  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readValueRank","page":"Home","title":"open62541.UA_Server_readValueRank","text":"UA_Server_readValueRank(server, nodeId, out = UA_Int32_new())\n\nUses the Server API to read the value of the attribute ValueRank  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_readWriteMask","page":"Home","title":"open62541.UA_Server_readWriteMask","text":"UA_Server_readWriteMask(server, nodeId, out = UA_UInt32_new())\n\nUses the Server API to read the value of the attribute WriteMask  from the NodeId nodeId located on server server. The result is saved  into the buffer out.\n\n\n\n\n\n","category":"function"},{"location":"#open62541.UA_Server_setAdminSessionContext-Tuple{Any, Any}","page":"Home","title":"open62541.UA_Server_setAdminSessionContext","text":"UA_Server_setAdminSessionContext(server, context)\n\nInformation Model Callbacks –––––––––––––-\n\nThere are three places where a callback from an information model to user-defined code can happen.\n\nCustom node constructors and destructors - Linking VariableNodes with an external data source - MethodNode callbacks\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_setVariableNode_dataSource-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_setVariableNode_dataSource","text":"UA_Server_setVariableNode_dataSource(server, nodeId, dataSource)\n\n.. _datasource:\n\nData Source Callback ^^^^^^^^^^^^^^^^^^^^\n\nThe server has a unique way of dealing with the content of variables. Instead of storing a variant attached to the variable node, the node can point to a function with a local data provider. Whenever the value attribute is read, the function will be called and asked to provide a UA_DataValue return value that contains the value content and additional timestamps.\n\nIt is expected that the read callback is implemented. The write callback can be set to a null-pointer.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_updateCertificate-NTuple{6, Any}","page":"Home","title":"open62541.UA_Server_updateCertificate","text":"UA_Server_updateCertificate(server, oldCertificate, newCertificate, newPrivateKey, closeSessions, closeSecureChannels)\n\nUpdate the Server Certificate at Runtime ––––––––––––––––––––\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_writeAccessLevel-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_writeAccessLevel","text":"UA_Server_writeAccessLevel(server, nodeId, new_val)\n\nUses the Server API to write the value new_val to the attribute AccessLevel  of the NodeId nodeId located on server server. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_writeArrayDimensions-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_writeArrayDimensions","text":"UA_Server_writeArrayDimensions(server, nodeId, new_val)\n\nUses the Server API to write the value new_val to the attribute ArrayDimensions  of the NodeId nodeId located on server server. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_writeBrowseName-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_writeBrowseName","text":"UA_Server_writeBrowseName(server, nodeId, new_val)\n\nUses the Server API to write the value new_val to the attribute BrowseName  of the NodeId nodeId located on server server. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_writeDataType-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_writeDataType","text":"UA_Server_writeDataType(server, nodeId, new_val)\n\nUses the Server API to write the value new_val to the attribute DataType  of the NodeId nodeId located on server server. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_writeDataValue-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_writeDataValue","text":"UA_Server_writeDataValue(server, nodeId, new_val)\n\nUses the Server API to write the value new_val to the attribute DataValue  of the NodeId nodeId located on server server. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_writeDescription-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_writeDescription","text":"UA_Server_writeDescription(server, nodeId, new_val)\n\nUses the Server API to write the value new_val to the attribute Description  of the NodeId nodeId located on server server. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_writeDisplayName-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_writeDisplayName","text":"UA_Server_writeDisplayName(server, nodeId, new_val)\n\nUses the Server API to write the value new_val to the attribute DisplayName  of the NodeId nodeId located on server server. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_writeEventNotifier-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_writeEventNotifier","text":"UA_Server_writeEventNotifier(server, nodeId, new_val)\n\nUses the Server API to write the value new_val to the attribute EventNotifier  of the NodeId nodeId located on server server. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_writeExecutable-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_writeExecutable","text":"UA_Server_writeExecutable(server, nodeId, new_val)\n\nUses the Server API to write the value new_val to the attribute Executable  of the NodeId nodeId located on server server. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_writeHistorizing-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_writeHistorizing","text":"UA_Server_writeHistorizing(server, nodeId, new_val)\n\nUses the Server API to write the value new_val to the attribute Historizing  of the NodeId nodeId located on server server. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_writeInverseName-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_writeInverseName","text":"UA_Server_writeInverseName(server, nodeId, new_val)\n\nUses the Server API to write the value new_val to the attribute InverseName  of the NodeId nodeId located on server server. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_writeIsAbstract-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_writeIsAbstract","text":"UA_Server_writeIsAbstract(server, nodeId, new_val)\n\nUses the Server API to write the value new_val to the attribute IsAbstract  of the NodeId nodeId located on server server. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_writeMinimumSamplingInterval-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_writeMinimumSamplingInterval","text":"UA_Server_writeMinimumSamplingInterval(server, nodeId, new_val)\n\nUses the Server API to write the value new_val to the attribute MinimumSamplingInterval  of the NodeId nodeId located on server server. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_writeValue-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_writeValue","text":"UA_Server_writeValue(server, nodeId, new_val)\n\nUses the Server API to write the value new_val to the attribute Value  of the NodeId nodeId located on server server. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_writeValueRank-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_writeValueRank","text":"UA_Server_writeValueRank(server, nodeId, new_val)\n\nUses the Server API to write the value new_val to the attribute ValueRank  of the NodeId nodeId located on server server. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_writeWriteMask-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_writeWriteMask","text":"UA_Server_writeWriteMask(server, nodeId, new_val)\n\nUses the Server API to write the value new_val to the attribute WriteMask  of the NodeId nodeId located on server server. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServiceFault_clear-Tuple{Ptr{UA_ServiceFault}}","page":"Home","title":"open62541.UA_ServiceFault_clear","text":"UA_ServiceFault_clear\"(x::Ptr{UA_ServiceFault})\n\ndeletes the dynamically allocated content of the object x and calls UA_ServiceFault_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServiceFault_copy-Tuple{UA_ServiceFault, Ptr{UA_ServiceFault}}","page":"Home","title":"open62541.UA_ServiceFault_copy","text":"UA_ServiceFault_copy\"(src::Ptr{UA_ServiceFault}, dst::Ptr{UA_ServiceFault})::UA_STATUSCODE\nUA_ServiceFault_copy\"(src::UA_ServiceFault, dst::Ptr{UA_ServiceFault})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServiceFault_delete-Tuple{Ptr{UA_ServiceFault}}","page":"Home","title":"open62541.UA_ServiceFault_delete","text":"UA_ServiceFault_delete(x::Ptr{UA_ServiceFault})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServiceFault_deleteMembers-Tuple{Ptr{UA_ServiceFault}}","page":"Home","title":"open62541.UA_ServiceFault_deleteMembers","text":"UA_ServiceFault_deleteMembers(x::Ptr{UA_ServiceFault})\n\n(deprecated, use UA_ServiceFault_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ServiceFault_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServiceFault_init-Tuple{Ptr{UA_ServiceFault}}","page":"Home","title":"open62541.UA_ServiceFault_init","text":"UA_ServiceFault_init\"(x::Ptr{UA_ServiceFault})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ServiceFault_new-Tuple{}","page":"Home","title":"open62541.UA_ServiceFault_new","text":"UA_ServiceFault_new\"()::Ptr{UA_ServiceFault}\n\ncreates and initializes a UA_ServiceFault object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ServiceFault_delete(x::Ptr{UA_ServiceFault})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetMonitoringModeRequest_clear-Tuple{Ptr{UA_SetMonitoringModeRequest}}","page":"Home","title":"open62541.UA_SetMonitoringModeRequest_clear","text":"UA_SetMonitoringModeRequest_clear\"(x::Ptr{UA_SetMonitoringModeRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_SetMonitoringModeRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetMonitoringModeRequest_copy-Tuple{UA_SetMonitoringModeRequest, Ptr{UA_SetMonitoringModeRequest}}","page":"Home","title":"open62541.UA_SetMonitoringModeRequest_copy","text":"UA_SetMonitoringModeRequest_copy\"(src::Ptr{UA_SetMonitoringModeRequest}, dst::Ptr{UA_SetMonitoringModeRequest})::UA_STATUSCODE\nUA_SetMonitoringModeRequest_copy\"(src::UA_SetMonitoringModeRequest, dst::Ptr{UA_SetMonitoringModeRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetMonitoringModeRequest_delete-Tuple{Ptr{UA_SetMonitoringModeRequest}}","page":"Home","title":"open62541.UA_SetMonitoringModeRequest_delete","text":"UA_SetMonitoringModeRequest_delete(x::Ptr{UA_SetMonitoringModeRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetMonitoringModeRequest_deleteMembers-Tuple{Ptr{UA_SetMonitoringModeRequest}}","page":"Home","title":"open62541.UA_SetMonitoringModeRequest_deleteMembers","text":"UA_SetMonitoringModeRequest_deleteMembers(x::Ptr{UA_SetMonitoringModeRequest})\n\n(deprecated, use UA_SetMonitoringModeRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_SetMonitoringModeRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetMonitoringModeRequest_init-Tuple{Ptr{UA_SetMonitoringModeRequest}}","page":"Home","title":"open62541.UA_SetMonitoringModeRequest_init","text":"UA_SetMonitoringModeRequest_init\"(x::Ptr{UA_SetMonitoringModeRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetMonitoringModeRequest_new-Tuple{}","page":"Home","title":"open62541.UA_SetMonitoringModeRequest_new","text":"UA_SetMonitoringModeRequest_new\"()::Ptr{UA_SetMonitoringModeRequest}\n\ncreates and initializes a UA_SetMonitoringModeRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_SetMonitoringModeRequest_delete(x::Ptr{UA_SetMonitoringModeRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetMonitoringModeResponse_clear-Tuple{Ptr{UA_SetMonitoringModeResponse}}","page":"Home","title":"open62541.UA_SetMonitoringModeResponse_clear","text":"UA_SetMonitoringModeResponse_clear\"(x::Ptr{UA_SetMonitoringModeResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_SetMonitoringModeResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetMonitoringModeResponse_copy-Tuple{UA_SetMonitoringModeResponse, Ptr{UA_SetMonitoringModeResponse}}","page":"Home","title":"open62541.UA_SetMonitoringModeResponse_copy","text":"UA_SetMonitoringModeResponse_copy\"(src::Ptr{UA_SetMonitoringModeResponse}, dst::Ptr{UA_SetMonitoringModeResponse})::UA_STATUSCODE\nUA_SetMonitoringModeResponse_copy\"(src::UA_SetMonitoringModeResponse, dst::Ptr{UA_SetMonitoringModeResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetMonitoringModeResponse_delete-Tuple{Ptr{UA_SetMonitoringModeResponse}}","page":"Home","title":"open62541.UA_SetMonitoringModeResponse_delete","text":"UA_SetMonitoringModeResponse_delete(x::Ptr{UA_SetMonitoringModeResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetMonitoringModeResponse_deleteMembers-Tuple{Ptr{UA_SetMonitoringModeResponse}}","page":"Home","title":"open62541.UA_SetMonitoringModeResponse_deleteMembers","text":"UA_SetMonitoringModeResponse_deleteMembers(x::Ptr{UA_SetMonitoringModeResponse})\n\n(deprecated, use UA_SetMonitoringModeResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_SetMonitoringModeResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetMonitoringModeResponse_init-Tuple{Ptr{UA_SetMonitoringModeResponse}}","page":"Home","title":"open62541.UA_SetMonitoringModeResponse_init","text":"UA_SetMonitoringModeResponse_init\"(x::Ptr{UA_SetMonitoringModeResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetMonitoringModeResponse_new-Tuple{}","page":"Home","title":"open62541.UA_SetMonitoringModeResponse_new","text":"UA_SetMonitoringModeResponse_new\"()::Ptr{UA_SetMonitoringModeResponse}\n\ncreates and initializes a UA_SetMonitoringModeResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_SetMonitoringModeResponse_delete(x::Ptr{UA_SetMonitoringModeResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetPublishingModeRequest_clear-Tuple{Ptr{UA_SetPublishingModeRequest}}","page":"Home","title":"open62541.UA_SetPublishingModeRequest_clear","text":"UA_SetPublishingModeRequest_clear\"(x::Ptr{UA_SetPublishingModeRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_SetPublishingModeRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetPublishingModeRequest_copy-Tuple{UA_SetPublishingModeRequest, Ptr{UA_SetPublishingModeRequest}}","page":"Home","title":"open62541.UA_SetPublishingModeRequest_copy","text":"UA_SetPublishingModeRequest_copy\"(src::Ptr{UA_SetPublishingModeRequest}, dst::Ptr{UA_SetPublishingModeRequest})::UA_STATUSCODE\nUA_SetPublishingModeRequest_copy\"(src::UA_SetPublishingModeRequest, dst::Ptr{UA_SetPublishingModeRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetPublishingModeRequest_delete-Tuple{Ptr{UA_SetPublishingModeRequest}}","page":"Home","title":"open62541.UA_SetPublishingModeRequest_delete","text":"UA_SetPublishingModeRequest_delete(x::Ptr{UA_SetPublishingModeRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetPublishingModeRequest_deleteMembers-Tuple{Ptr{UA_SetPublishingModeRequest}}","page":"Home","title":"open62541.UA_SetPublishingModeRequest_deleteMembers","text":"UA_SetPublishingModeRequest_deleteMembers(x::Ptr{UA_SetPublishingModeRequest})\n\n(deprecated, use UA_SetPublishingModeRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_SetPublishingModeRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetPublishingModeRequest_init-Tuple{Ptr{UA_SetPublishingModeRequest}}","page":"Home","title":"open62541.UA_SetPublishingModeRequest_init","text":"UA_SetPublishingModeRequest_init\"(x::Ptr{UA_SetPublishingModeRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetPublishingModeRequest_new-Tuple{}","page":"Home","title":"open62541.UA_SetPublishingModeRequest_new","text":"UA_SetPublishingModeRequest_new\"()::Ptr{UA_SetPublishingModeRequest}\n\ncreates and initializes a UA_SetPublishingModeRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_SetPublishingModeRequest_delete(x::Ptr{UA_SetPublishingModeRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetPublishingModeResponse_clear-Tuple{Ptr{UA_SetPublishingModeResponse}}","page":"Home","title":"open62541.UA_SetPublishingModeResponse_clear","text":"UA_SetPublishingModeResponse_clear\"(x::Ptr{UA_SetPublishingModeResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_SetPublishingModeResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetPublishingModeResponse_copy-Tuple{UA_SetPublishingModeResponse, Ptr{UA_SetPublishingModeResponse}}","page":"Home","title":"open62541.UA_SetPublishingModeResponse_copy","text":"UA_SetPublishingModeResponse_copy\"(src::Ptr{UA_SetPublishingModeResponse}, dst::Ptr{UA_SetPublishingModeResponse})::UA_STATUSCODE\nUA_SetPublishingModeResponse_copy\"(src::UA_SetPublishingModeResponse, dst::Ptr{UA_SetPublishingModeResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetPublishingModeResponse_delete-Tuple{Ptr{UA_SetPublishingModeResponse}}","page":"Home","title":"open62541.UA_SetPublishingModeResponse_delete","text":"UA_SetPublishingModeResponse_delete(x::Ptr{UA_SetPublishingModeResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetPublishingModeResponse_deleteMembers-Tuple{Ptr{UA_SetPublishingModeResponse}}","page":"Home","title":"open62541.UA_SetPublishingModeResponse_deleteMembers","text":"UA_SetPublishingModeResponse_deleteMembers(x::Ptr{UA_SetPublishingModeResponse})\n\n(deprecated, use UA_SetPublishingModeResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_SetPublishingModeResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetPublishingModeResponse_init-Tuple{Ptr{UA_SetPublishingModeResponse}}","page":"Home","title":"open62541.UA_SetPublishingModeResponse_init","text":"UA_SetPublishingModeResponse_init\"(x::Ptr{UA_SetPublishingModeResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetPublishingModeResponse_new-Tuple{}","page":"Home","title":"open62541.UA_SetPublishingModeResponse_new","text":"UA_SetPublishingModeResponse_new\"()::Ptr{UA_SetPublishingModeResponse}\n\ncreates and initializes a UA_SetPublishingModeResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_SetPublishingModeResponse_delete(x::Ptr{UA_SetPublishingModeResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetTriggeringRequest_clear-Tuple{Ptr{UA_SetTriggeringRequest}}","page":"Home","title":"open62541.UA_SetTriggeringRequest_clear","text":"UA_SetTriggeringRequest_clear\"(x::Ptr{UA_SetTriggeringRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_SetTriggeringRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetTriggeringRequest_copy-Tuple{UA_SetTriggeringRequest, Ptr{UA_SetTriggeringRequest}}","page":"Home","title":"open62541.UA_SetTriggeringRequest_copy","text":"UA_SetTriggeringRequest_copy\"(src::Ptr{UA_SetTriggeringRequest}, dst::Ptr{UA_SetTriggeringRequest})::UA_STATUSCODE\nUA_SetTriggeringRequest_copy\"(src::UA_SetTriggeringRequest, dst::Ptr{UA_SetTriggeringRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetTriggeringRequest_delete-Tuple{Ptr{UA_SetTriggeringRequest}}","page":"Home","title":"open62541.UA_SetTriggeringRequest_delete","text":"UA_SetTriggeringRequest_delete(x::Ptr{UA_SetTriggeringRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetTriggeringRequest_deleteMembers-Tuple{Ptr{UA_SetTriggeringRequest}}","page":"Home","title":"open62541.UA_SetTriggeringRequest_deleteMembers","text":"UA_SetTriggeringRequest_deleteMembers(x::Ptr{UA_SetTriggeringRequest})\n\n(deprecated, use UA_SetTriggeringRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_SetTriggeringRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetTriggeringRequest_init-Tuple{Ptr{UA_SetTriggeringRequest}}","page":"Home","title":"open62541.UA_SetTriggeringRequest_init","text":"UA_SetTriggeringRequest_init\"(x::Ptr{UA_SetTriggeringRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetTriggeringRequest_new-Tuple{}","page":"Home","title":"open62541.UA_SetTriggeringRequest_new","text":"UA_SetTriggeringRequest_new\"()::Ptr{UA_SetTriggeringRequest}\n\ncreates and initializes a UA_SetTriggeringRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_SetTriggeringRequest_delete(x::Ptr{UA_SetTriggeringRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetTriggeringResponse_clear-Tuple{Ptr{UA_SetTriggeringResponse}}","page":"Home","title":"open62541.UA_SetTriggeringResponse_clear","text":"UA_SetTriggeringResponse_clear\"(x::Ptr{UA_SetTriggeringResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_SetTriggeringResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetTriggeringResponse_copy-Tuple{UA_SetTriggeringResponse, Ptr{UA_SetTriggeringResponse}}","page":"Home","title":"open62541.UA_SetTriggeringResponse_copy","text":"UA_SetTriggeringResponse_copy\"(src::Ptr{UA_SetTriggeringResponse}, dst::Ptr{UA_SetTriggeringResponse})::UA_STATUSCODE\nUA_SetTriggeringResponse_copy\"(src::UA_SetTriggeringResponse, dst::Ptr{UA_SetTriggeringResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetTriggeringResponse_delete-Tuple{Ptr{UA_SetTriggeringResponse}}","page":"Home","title":"open62541.UA_SetTriggeringResponse_delete","text":"UA_SetTriggeringResponse_delete(x::Ptr{UA_SetTriggeringResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetTriggeringResponse_deleteMembers-Tuple{Ptr{UA_SetTriggeringResponse}}","page":"Home","title":"open62541.UA_SetTriggeringResponse_deleteMembers","text":"UA_SetTriggeringResponse_deleteMembers(x::Ptr{UA_SetTriggeringResponse})\n\n(deprecated, use UA_SetTriggeringResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_SetTriggeringResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetTriggeringResponse_init-Tuple{Ptr{UA_SetTriggeringResponse}}","page":"Home","title":"open62541.UA_SetTriggeringResponse_init","text":"UA_SetTriggeringResponse_init\"(x::Ptr{UA_SetTriggeringResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SetTriggeringResponse_new-Tuple{}","page":"Home","title":"open62541.UA_SetTriggeringResponse_new","text":"UA_SetTriggeringResponse_new\"()::Ptr{UA_SetTriggeringResponse}\n\ncreates and initializes a UA_SetTriggeringResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_SetTriggeringResponse_delete(x::Ptr{UA_SetTriggeringResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SignatureData_clear-Tuple{Ptr{UA_SignatureData}}","page":"Home","title":"open62541.UA_SignatureData_clear","text":"UA_SignatureData_clear\"(x::Ptr{UA_SignatureData})\n\ndeletes the dynamically allocated content of the object x and calls UA_SignatureData_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SignatureData_copy-Tuple{UA_SignatureData, Ptr{UA_SignatureData}}","page":"Home","title":"open62541.UA_SignatureData_copy","text":"UA_SignatureData_copy\"(src::Ptr{UA_SignatureData}, dst::Ptr{UA_SignatureData})::UA_STATUSCODE\nUA_SignatureData_copy\"(src::UA_SignatureData, dst::Ptr{UA_SignatureData})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SignatureData_delete-Tuple{Ptr{UA_SignatureData}}","page":"Home","title":"open62541.UA_SignatureData_delete","text":"UA_SignatureData_delete(x::Ptr{UA_SignatureData})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SignatureData_deleteMembers-Tuple{Ptr{UA_SignatureData}}","page":"Home","title":"open62541.UA_SignatureData_deleteMembers","text":"UA_SignatureData_deleteMembers(x::Ptr{UA_SignatureData})\n\n(deprecated, use UA_SignatureData_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_SignatureData_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SignatureData_init-Tuple{Ptr{UA_SignatureData}}","page":"Home","title":"open62541.UA_SignatureData_init","text":"UA_SignatureData_init\"(x::Ptr{UA_SignatureData})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SignatureData_new-Tuple{}","page":"Home","title":"open62541.UA_SignatureData_new","text":"UA_SignatureData_new\"()::Ptr{UA_SignatureData}\n\ncreates and initializes a UA_SignatureData object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_SignatureData_delete(x::Ptr{UA_SignatureData})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SignedSoftwareCertificate_clear-Tuple{Ptr{UA_SignedSoftwareCertificate}}","page":"Home","title":"open62541.UA_SignedSoftwareCertificate_clear","text":"UA_SignedSoftwareCertificate_clear\"(x::Ptr{UA_SignedSoftwareCertificate})\n\ndeletes the dynamically allocated content of the object x and calls UA_SignedSoftwareCertificate_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SignedSoftwareCertificate_copy-Tuple{UA_SignedSoftwareCertificate, Ptr{UA_SignedSoftwareCertificate}}","page":"Home","title":"open62541.UA_SignedSoftwareCertificate_copy","text":"UA_SignedSoftwareCertificate_copy\"(src::Ptr{UA_SignedSoftwareCertificate}, dst::Ptr{UA_SignedSoftwareCertificate})::UA_STATUSCODE\nUA_SignedSoftwareCertificate_copy\"(src::UA_SignedSoftwareCertificate, dst::Ptr{UA_SignedSoftwareCertificate})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SignedSoftwareCertificate_delete-Tuple{Ptr{UA_SignedSoftwareCertificate}}","page":"Home","title":"open62541.UA_SignedSoftwareCertificate_delete","text":"UA_SignedSoftwareCertificate_delete(x::Ptr{UA_SignedSoftwareCertificate})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SignedSoftwareCertificate_deleteMembers-Tuple{Ptr{UA_SignedSoftwareCertificate}}","page":"Home","title":"open62541.UA_SignedSoftwareCertificate_deleteMembers","text":"UA_SignedSoftwareCertificate_deleteMembers(x::Ptr{UA_SignedSoftwareCertificate})\n\n(deprecated, use UA_SignedSoftwareCertificate_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_SignedSoftwareCertificate_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SignedSoftwareCertificate_init-Tuple{Ptr{UA_SignedSoftwareCertificate}}","page":"Home","title":"open62541.UA_SignedSoftwareCertificate_init","text":"UA_SignedSoftwareCertificate_init\"(x::Ptr{UA_SignedSoftwareCertificate})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SignedSoftwareCertificate_new-Tuple{}","page":"Home","title":"open62541.UA_SignedSoftwareCertificate_new","text":"UA_SignedSoftwareCertificate_new\"()::Ptr{UA_SignedSoftwareCertificate}\n\ncreates and initializes a UA_SignedSoftwareCertificate object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_SignedSoftwareCertificate_delete(x::Ptr{UA_SignedSoftwareCertificate})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SimpleAttributeOperand_clear-Tuple{Ptr{UA_SimpleAttributeOperand}}","page":"Home","title":"open62541.UA_SimpleAttributeOperand_clear","text":"UA_SimpleAttributeOperand_clear\"(x::Ptr{UA_SimpleAttributeOperand})\n\ndeletes the dynamically allocated content of the object x and calls UA_SimpleAttributeOperand_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SimpleAttributeOperand_copy-Tuple{UA_SimpleAttributeOperand, Ptr{UA_SimpleAttributeOperand}}","page":"Home","title":"open62541.UA_SimpleAttributeOperand_copy","text":"UA_SimpleAttributeOperand_copy\"(src::Ptr{UA_SimpleAttributeOperand}, dst::Ptr{UA_SimpleAttributeOperand})::UA_STATUSCODE\nUA_SimpleAttributeOperand_copy\"(src::UA_SimpleAttributeOperand, dst::Ptr{UA_SimpleAttributeOperand})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SimpleAttributeOperand_delete-Tuple{Ptr{UA_SimpleAttributeOperand}}","page":"Home","title":"open62541.UA_SimpleAttributeOperand_delete","text":"UA_SimpleAttributeOperand_delete(x::Ptr{UA_SimpleAttributeOperand})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SimpleAttributeOperand_deleteMembers-Tuple{Ptr{UA_SimpleAttributeOperand}}","page":"Home","title":"open62541.UA_SimpleAttributeOperand_deleteMembers","text":"UA_SimpleAttributeOperand_deleteMembers(x::Ptr{UA_SimpleAttributeOperand})\n\n(deprecated, use UA_SimpleAttributeOperand_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_SimpleAttributeOperand_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SimpleAttributeOperand_init-Tuple{Ptr{UA_SimpleAttributeOperand}}","page":"Home","title":"open62541.UA_SimpleAttributeOperand_init","text":"UA_SimpleAttributeOperand_init\"(x::Ptr{UA_SimpleAttributeOperand})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SimpleAttributeOperand_new-Tuple{}","page":"Home","title":"open62541.UA_SimpleAttributeOperand_new","text":"UA_SimpleAttributeOperand_new\"()::Ptr{UA_SimpleAttributeOperand}\n\ncreates and initializes a UA_SimpleAttributeOperand object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_SimpleAttributeOperand_delete(x::Ptr{UA_SimpleAttributeOperand})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StatusChangeNotification_clear-Tuple{Ptr{UA_StatusChangeNotification}}","page":"Home","title":"open62541.UA_StatusChangeNotification_clear","text":"UA_StatusChangeNotification_clear\"(x::Ptr{UA_StatusChangeNotification})\n\ndeletes the dynamically allocated content of the object x and calls UA_StatusChangeNotification_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StatusChangeNotification_copy-Tuple{UA_StatusChangeNotification, Ptr{UA_StatusChangeNotification}}","page":"Home","title":"open62541.UA_StatusChangeNotification_copy","text":"UA_StatusChangeNotification_copy\"(src::Ptr{UA_StatusChangeNotification}, dst::Ptr{UA_StatusChangeNotification})::UA_STATUSCODE\nUA_StatusChangeNotification_copy\"(src::UA_StatusChangeNotification, dst::Ptr{UA_StatusChangeNotification})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StatusChangeNotification_delete-Tuple{Ptr{UA_StatusChangeNotification}}","page":"Home","title":"open62541.UA_StatusChangeNotification_delete","text":"UA_StatusChangeNotification_delete(x::Ptr{UA_StatusChangeNotification})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StatusChangeNotification_deleteMembers-Tuple{Ptr{UA_StatusChangeNotification}}","page":"Home","title":"open62541.UA_StatusChangeNotification_deleteMembers","text":"UA_StatusChangeNotification_deleteMembers(x::Ptr{UA_StatusChangeNotification})\n\n(deprecated, use UA_StatusChangeNotification_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_StatusChangeNotification_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StatusChangeNotification_init-Tuple{Ptr{UA_StatusChangeNotification}}","page":"Home","title":"open62541.UA_StatusChangeNotification_init","text":"UA_StatusChangeNotification_init\"(x::Ptr{UA_StatusChangeNotification})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StatusChangeNotification_new-Tuple{}","page":"Home","title":"open62541.UA_StatusChangeNotification_new","text":"UA_StatusChangeNotification_new\"()::Ptr{UA_StatusChangeNotification}\n\ncreates and initializes a UA_StatusChangeNotification object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_StatusChangeNotification_delete(x::Ptr{UA_StatusChangeNotification})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StatusCode_clear-Tuple{Ptr{UInt32}}","page":"Home","title":"open62541.UA_StatusCode_clear","text":"UInt32_clear\"(x::Ptr{UInt32})\n\ndeletes the dynamically allocated content of the object x and calls UInt32_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StatusCode_copy-Tuple{UInt32, Ptr{UInt32}}","page":"Home","title":"open62541.UA_StatusCode_copy","text":"UInt32_copy\"(src::Ptr{UInt32}, dst::Ptr{UInt32})::UA_STATUSCODE\nUInt32_copy\"(src::UInt32, dst::Ptr{UInt32})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StatusCode_delete-Tuple{Ptr{UInt32}}","page":"Home","title":"open62541.UA_StatusCode_delete","text":"UInt32_delete(x::Ptr{UInt32})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StatusCode_deleteMembers-Tuple{Ptr{UInt32}}","page":"Home","title":"open62541.UA_StatusCode_deleteMembers","text":"UInt32_deleteMembers(x::Ptr{UInt32})\n\n(deprecated, use UInt32_clear(x) instead) deletes the dynamically allocated content of the object x and calls UInt32_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StatusCode_init-Tuple{Ptr{UInt32}}","page":"Home","title":"open62541.UA_StatusCode_init","text":"UInt32_init\"(x::Ptr{UInt32})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StatusCode_new-Tuple{}","page":"Home","title":"open62541.UA_StatusCode_new","text":"UInt32_new\"()::Ptr{UInt32}\n\ncreates and initializes a UInt32 object whose memory is allocated by C. After use, it needs to be  cleaned up with UInt32_delete(x::Ptr{UInt32})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_String_clear-Tuple{Ptr{UA_String}}","page":"Home","title":"open62541.UA_String_clear","text":"UA_String_clear\"(x::Ptr{UA_String})\n\ndeletes the dynamically allocated content of the object x and calls UA_String_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_String_copy-Tuple{UA_String, Ptr{UA_String}}","page":"Home","title":"open62541.UA_String_copy","text":"UA_String_copy\"(src::Ptr{UA_String}, dst::Ptr{UA_String})::UA_STATUSCODE\nUA_String_copy\"(src::UA_String, dst::Ptr{UA_String})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_String_delete-Tuple{Ptr{UA_String}}","page":"Home","title":"open62541.UA_String_delete","text":"UA_String_delete(x::Ptr{UA_String})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_String_deleteMembers-Tuple{Ptr{UA_String}}","page":"Home","title":"open62541.UA_String_deleteMembers","text":"UA_String_deleteMembers(x::Ptr{UA_String})\n\n(deprecated, use UA_String_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_String_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_String_init-Tuple{Ptr{UA_String}}","page":"Home","title":"open62541.UA_String_init","text":"UA_String_init\"(x::Ptr{UA_String})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_String_new-Tuple{}","page":"Home","title":"open62541.UA_String_new","text":"UA_String_new\"()::Ptr{UA_String}\n\ncreates and initializes a UA_String object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_String_delete(x::Ptr{UA_String})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureDefinition_clear-Tuple{Ptr{UA_StructureDefinition}}","page":"Home","title":"open62541.UA_StructureDefinition_clear","text":"UA_StructureDefinition_clear\"(x::Ptr{UA_StructureDefinition})\n\ndeletes the dynamically allocated content of the object x and calls UA_StructureDefinition_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureDefinition_copy-Tuple{UA_StructureDefinition, Ptr{UA_StructureDefinition}}","page":"Home","title":"open62541.UA_StructureDefinition_copy","text":"UA_StructureDefinition_copy\"(src::Ptr{UA_StructureDefinition}, dst::Ptr{UA_StructureDefinition})::UA_STATUSCODE\nUA_StructureDefinition_copy\"(src::UA_StructureDefinition, dst::Ptr{UA_StructureDefinition})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureDefinition_delete-Tuple{Ptr{UA_StructureDefinition}}","page":"Home","title":"open62541.UA_StructureDefinition_delete","text":"UA_StructureDefinition_delete(x::Ptr{UA_StructureDefinition})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureDefinition_deleteMembers-Tuple{Ptr{UA_StructureDefinition}}","page":"Home","title":"open62541.UA_StructureDefinition_deleteMembers","text":"UA_StructureDefinition_deleteMembers(x::Ptr{UA_StructureDefinition})\n\n(deprecated, use UA_StructureDefinition_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_StructureDefinition_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureDefinition_init-Tuple{Ptr{UA_StructureDefinition}}","page":"Home","title":"open62541.UA_StructureDefinition_init","text":"UA_StructureDefinition_init\"(x::Ptr{UA_StructureDefinition})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureDefinition_new-Tuple{}","page":"Home","title":"open62541.UA_StructureDefinition_new","text":"UA_StructureDefinition_new\"()::Ptr{UA_StructureDefinition}\n\ncreates and initializes a UA_StructureDefinition object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_StructureDefinition_delete(x::Ptr{UA_StructureDefinition})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureField_clear-Tuple{Ptr{UA_StructureField}}","page":"Home","title":"open62541.UA_StructureField_clear","text":"UA_StructureField_clear\"(x::Ptr{UA_StructureField})\n\ndeletes the dynamically allocated content of the object x and calls UA_StructureField_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureField_copy-Tuple{UA_StructureField, Ptr{UA_StructureField}}","page":"Home","title":"open62541.UA_StructureField_copy","text":"UA_StructureField_copy\"(src::Ptr{UA_StructureField}, dst::Ptr{UA_StructureField})::UA_STATUSCODE\nUA_StructureField_copy\"(src::UA_StructureField, dst::Ptr{UA_StructureField})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureField_delete-Tuple{Ptr{UA_StructureField}}","page":"Home","title":"open62541.UA_StructureField_delete","text":"UA_StructureField_delete(x::Ptr{UA_StructureField})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureField_deleteMembers-Tuple{Ptr{UA_StructureField}}","page":"Home","title":"open62541.UA_StructureField_deleteMembers","text":"UA_StructureField_deleteMembers(x::Ptr{UA_StructureField})\n\n(deprecated, use UA_StructureField_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_StructureField_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureField_init-Tuple{Ptr{UA_StructureField}}","page":"Home","title":"open62541.UA_StructureField_init","text":"UA_StructureField_init\"(x::Ptr{UA_StructureField})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureField_new-Tuple{}","page":"Home","title":"open62541.UA_StructureField_new","text":"UA_StructureField_new\"()::Ptr{UA_StructureField}\n\ncreates and initializes a UA_StructureField object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_StructureField_delete(x::Ptr{UA_StructureField})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureType_clear-Tuple{Ptr{UA_StructureType}}","page":"Home","title":"open62541.UA_StructureType_clear","text":"UA_StructureType_clear\"(x::Ptr{UA_StructureType})\n\ndeletes the dynamically allocated content of the object x and calls UA_StructureType_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureType_copy-Tuple{UA_StructureType, Ptr{UA_StructureType}}","page":"Home","title":"open62541.UA_StructureType_copy","text":"UA_StructureType_copy\"(src::Ptr{UA_StructureType}, dst::Ptr{UA_StructureType})::UA_STATUSCODE\nUA_StructureType_copy\"(src::UA_StructureType, dst::Ptr{UA_StructureType})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureType_delete-Tuple{Ptr{UA_StructureType}}","page":"Home","title":"open62541.UA_StructureType_delete","text":"UA_StructureType_delete(x::Ptr{UA_StructureType})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureType_deleteMembers-Tuple{Ptr{UA_StructureType}}","page":"Home","title":"open62541.UA_StructureType_deleteMembers","text":"UA_StructureType_deleteMembers(x::Ptr{UA_StructureType})\n\n(deprecated, use UA_StructureType_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_StructureType_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureType_init-Tuple{Ptr{UA_StructureType}}","page":"Home","title":"open62541.UA_StructureType_init","text":"UA_StructureType_init\"(x::Ptr{UA_StructureType})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_StructureType_new-Tuple{}","page":"Home","title":"open62541.UA_StructureType_new","text":"UA_StructureType_new\"()::Ptr{UA_StructureType}\n\ncreates and initializes a UA_StructureType object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_StructureType_delete(x::Ptr{UA_StructureType})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SubscriptionAcknowledgement_clear-Tuple{Ptr{UA_SubscriptionAcknowledgement}}","page":"Home","title":"open62541.UA_SubscriptionAcknowledgement_clear","text":"UA_SubscriptionAcknowledgement_clear\"(x::Ptr{UA_SubscriptionAcknowledgement})\n\ndeletes the dynamically allocated content of the object x and calls UA_SubscriptionAcknowledgement_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SubscriptionAcknowledgement_copy-Tuple{UA_SubscriptionAcknowledgement, Ptr{UA_SubscriptionAcknowledgement}}","page":"Home","title":"open62541.UA_SubscriptionAcknowledgement_copy","text":"UA_SubscriptionAcknowledgement_copy\"(src::Ptr{UA_SubscriptionAcknowledgement}, dst::Ptr{UA_SubscriptionAcknowledgement})::UA_STATUSCODE\nUA_SubscriptionAcknowledgement_copy\"(src::UA_SubscriptionAcknowledgement, dst::Ptr{UA_SubscriptionAcknowledgement})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SubscriptionAcknowledgement_delete-Tuple{Ptr{UA_SubscriptionAcknowledgement}}","page":"Home","title":"open62541.UA_SubscriptionAcknowledgement_delete","text":"UA_SubscriptionAcknowledgement_delete(x::Ptr{UA_SubscriptionAcknowledgement})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SubscriptionAcknowledgement_deleteMembers-Tuple{Ptr{UA_SubscriptionAcknowledgement}}","page":"Home","title":"open62541.UA_SubscriptionAcknowledgement_deleteMembers","text":"UA_SubscriptionAcknowledgement_deleteMembers(x::Ptr{UA_SubscriptionAcknowledgement})\n\n(deprecated, use UA_SubscriptionAcknowledgement_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_SubscriptionAcknowledgement_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SubscriptionAcknowledgement_init-Tuple{Ptr{UA_SubscriptionAcknowledgement}}","page":"Home","title":"open62541.UA_SubscriptionAcknowledgement_init","text":"UA_SubscriptionAcknowledgement_init\"(x::Ptr{UA_SubscriptionAcknowledgement})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SubscriptionAcknowledgement_new-Tuple{}","page":"Home","title":"open62541.UA_SubscriptionAcknowledgement_new","text":"UA_SubscriptionAcknowledgement_new\"()::Ptr{UA_SubscriptionAcknowledgement}\n\ncreates and initializes a UA_SubscriptionAcknowledgement object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_SubscriptionAcknowledgement_delete(x::Ptr{UA_SubscriptionAcknowledgement})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TimeZoneDataType_clear-Tuple{Ptr{UA_TimeZoneDataType}}","page":"Home","title":"open62541.UA_TimeZoneDataType_clear","text":"UA_TimeZoneDataType_clear\"(x::Ptr{UA_TimeZoneDataType})\n\ndeletes the dynamically allocated content of the object x and calls UA_TimeZoneDataType_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TimeZoneDataType_copy-Tuple{UA_TimeZoneDataType, Ptr{UA_TimeZoneDataType}}","page":"Home","title":"open62541.UA_TimeZoneDataType_copy","text":"UA_TimeZoneDataType_copy\"(src::Ptr{UA_TimeZoneDataType}, dst::Ptr{UA_TimeZoneDataType})::UA_STATUSCODE\nUA_TimeZoneDataType_copy\"(src::UA_TimeZoneDataType, dst::Ptr{UA_TimeZoneDataType})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TimeZoneDataType_delete-Tuple{Ptr{UA_TimeZoneDataType}}","page":"Home","title":"open62541.UA_TimeZoneDataType_delete","text":"UA_TimeZoneDataType_delete(x::Ptr{UA_TimeZoneDataType})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TimeZoneDataType_deleteMembers-Tuple{Ptr{UA_TimeZoneDataType}}","page":"Home","title":"open62541.UA_TimeZoneDataType_deleteMembers","text":"UA_TimeZoneDataType_deleteMembers(x::Ptr{UA_TimeZoneDataType})\n\n(deprecated, use UA_TimeZoneDataType_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_TimeZoneDataType_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TimeZoneDataType_init-Tuple{Ptr{UA_TimeZoneDataType}}","page":"Home","title":"open62541.UA_TimeZoneDataType_init","text":"UA_TimeZoneDataType_init\"(x::Ptr{UA_TimeZoneDataType})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TimeZoneDataType_new-Tuple{}","page":"Home","title":"open62541.UA_TimeZoneDataType_new","text":"UA_TimeZoneDataType_new\"()::Ptr{UA_TimeZoneDataType}\n\ncreates and initializes a UA_TimeZoneDataType object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_TimeZoneDataType_delete(x::Ptr{UA_TimeZoneDataType})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TimestampsToReturn_clear-Tuple{Ptr{UA_TimestampsToReturn}}","page":"Home","title":"open62541.UA_TimestampsToReturn_clear","text":"UA_TimestampsToReturn_clear\"(x::Ptr{UA_TimestampsToReturn})\n\ndeletes the dynamically allocated content of the object x and calls UA_TimestampsToReturn_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TimestampsToReturn_copy-Tuple{UA_TimestampsToReturn, Ptr{UA_TimestampsToReturn}}","page":"Home","title":"open62541.UA_TimestampsToReturn_copy","text":"UA_TimestampsToReturn_copy\"(src::Ptr{UA_TimestampsToReturn}, dst::Ptr{UA_TimestampsToReturn})::UA_STATUSCODE\nUA_TimestampsToReturn_copy\"(src::UA_TimestampsToReturn, dst::Ptr{UA_TimestampsToReturn})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TimestampsToReturn_delete-Tuple{Ptr{UA_TimestampsToReturn}}","page":"Home","title":"open62541.UA_TimestampsToReturn_delete","text":"UA_TimestampsToReturn_delete(x::Ptr{UA_TimestampsToReturn})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TimestampsToReturn_deleteMembers-Tuple{Ptr{UA_TimestampsToReturn}}","page":"Home","title":"open62541.UA_TimestampsToReturn_deleteMembers","text":"UA_TimestampsToReturn_deleteMembers(x::Ptr{UA_TimestampsToReturn})\n\n(deprecated, use UA_TimestampsToReturn_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_TimestampsToReturn_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TimestampsToReturn_init-Tuple{Ptr{UA_TimestampsToReturn}}","page":"Home","title":"open62541.UA_TimestampsToReturn_init","text":"UA_TimestampsToReturn_init\"(x::Ptr{UA_TimestampsToReturn})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TimestampsToReturn_new-Tuple{}","page":"Home","title":"open62541.UA_TimestampsToReturn_new","text":"UA_TimestampsToReturn_new\"()::Ptr{UA_TimestampsToReturn}\n\ncreates and initializes a UA_TimestampsToReturn object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_TimestampsToReturn_delete(x::Ptr{UA_TimestampsToReturn})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferResult_clear-Tuple{Ptr{UA_TransferResult}}","page":"Home","title":"open62541.UA_TransferResult_clear","text":"UA_TransferResult_clear\"(x::Ptr{UA_TransferResult})\n\ndeletes the dynamically allocated content of the object x and calls UA_TransferResult_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferResult_copy-Tuple{UA_TransferResult, Ptr{UA_TransferResult}}","page":"Home","title":"open62541.UA_TransferResult_copy","text":"UA_TransferResult_copy\"(src::Ptr{UA_TransferResult}, dst::Ptr{UA_TransferResult})::UA_STATUSCODE\nUA_TransferResult_copy\"(src::UA_TransferResult, dst::Ptr{UA_TransferResult})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferResult_delete-Tuple{Ptr{UA_TransferResult}}","page":"Home","title":"open62541.UA_TransferResult_delete","text":"UA_TransferResult_delete(x::Ptr{UA_TransferResult})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferResult_deleteMembers-Tuple{Ptr{UA_TransferResult}}","page":"Home","title":"open62541.UA_TransferResult_deleteMembers","text":"UA_TransferResult_deleteMembers(x::Ptr{UA_TransferResult})\n\n(deprecated, use UA_TransferResult_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_TransferResult_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferResult_init-Tuple{Ptr{UA_TransferResult}}","page":"Home","title":"open62541.UA_TransferResult_init","text":"UA_TransferResult_init\"(x::Ptr{UA_TransferResult})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferResult_new-Tuple{}","page":"Home","title":"open62541.UA_TransferResult_new","text":"UA_TransferResult_new\"()::Ptr{UA_TransferResult}\n\ncreates and initializes a UA_TransferResult object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_TransferResult_delete(x::Ptr{UA_TransferResult})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferSubscriptionsRequest_clear-Tuple{Ptr{UA_TransferSubscriptionsRequest}}","page":"Home","title":"open62541.UA_TransferSubscriptionsRequest_clear","text":"UA_TransferSubscriptionsRequest_clear\"(x::Ptr{UA_TransferSubscriptionsRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_TransferSubscriptionsRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferSubscriptionsRequest_copy-Tuple{UA_TransferSubscriptionsRequest, Ptr{UA_TransferSubscriptionsRequest}}","page":"Home","title":"open62541.UA_TransferSubscriptionsRequest_copy","text":"UA_TransferSubscriptionsRequest_copy\"(src::Ptr{UA_TransferSubscriptionsRequest}, dst::Ptr{UA_TransferSubscriptionsRequest})::UA_STATUSCODE\nUA_TransferSubscriptionsRequest_copy\"(src::UA_TransferSubscriptionsRequest, dst::Ptr{UA_TransferSubscriptionsRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferSubscriptionsRequest_delete-Tuple{Ptr{UA_TransferSubscriptionsRequest}}","page":"Home","title":"open62541.UA_TransferSubscriptionsRequest_delete","text":"UA_TransferSubscriptionsRequest_delete(x::Ptr{UA_TransferSubscriptionsRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferSubscriptionsRequest_deleteMembers-Tuple{Ptr{UA_TransferSubscriptionsRequest}}","page":"Home","title":"open62541.UA_TransferSubscriptionsRequest_deleteMembers","text":"UA_TransferSubscriptionsRequest_deleteMembers(x::Ptr{UA_TransferSubscriptionsRequest})\n\n(deprecated, use UA_TransferSubscriptionsRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_TransferSubscriptionsRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferSubscriptionsRequest_init-Tuple{Ptr{UA_TransferSubscriptionsRequest}}","page":"Home","title":"open62541.UA_TransferSubscriptionsRequest_init","text":"UA_TransferSubscriptionsRequest_init\"(x::Ptr{UA_TransferSubscriptionsRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferSubscriptionsRequest_new-Tuple{}","page":"Home","title":"open62541.UA_TransferSubscriptionsRequest_new","text":"UA_TransferSubscriptionsRequest_new\"()::Ptr{UA_TransferSubscriptionsRequest}\n\ncreates and initializes a UA_TransferSubscriptionsRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_TransferSubscriptionsRequest_delete(x::Ptr{UA_TransferSubscriptionsRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferSubscriptionsResponse_clear-Tuple{Ptr{UA_TransferSubscriptionsResponse}}","page":"Home","title":"open62541.UA_TransferSubscriptionsResponse_clear","text":"UA_TransferSubscriptionsResponse_clear\"(x::Ptr{UA_TransferSubscriptionsResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_TransferSubscriptionsResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferSubscriptionsResponse_copy-Tuple{UA_TransferSubscriptionsResponse, Ptr{UA_TransferSubscriptionsResponse}}","page":"Home","title":"open62541.UA_TransferSubscriptionsResponse_copy","text":"UA_TransferSubscriptionsResponse_copy\"(src::Ptr{UA_TransferSubscriptionsResponse}, dst::Ptr{UA_TransferSubscriptionsResponse})::UA_STATUSCODE\nUA_TransferSubscriptionsResponse_copy\"(src::UA_TransferSubscriptionsResponse, dst::Ptr{UA_TransferSubscriptionsResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferSubscriptionsResponse_delete-Tuple{Ptr{UA_TransferSubscriptionsResponse}}","page":"Home","title":"open62541.UA_TransferSubscriptionsResponse_delete","text":"UA_TransferSubscriptionsResponse_delete(x::Ptr{UA_TransferSubscriptionsResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferSubscriptionsResponse_deleteMembers-Tuple{Ptr{UA_TransferSubscriptionsResponse}}","page":"Home","title":"open62541.UA_TransferSubscriptionsResponse_deleteMembers","text":"UA_TransferSubscriptionsResponse_deleteMembers(x::Ptr{UA_TransferSubscriptionsResponse})\n\n(deprecated, use UA_TransferSubscriptionsResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_TransferSubscriptionsResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferSubscriptionsResponse_init-Tuple{Ptr{UA_TransferSubscriptionsResponse}}","page":"Home","title":"open62541.UA_TransferSubscriptionsResponse_init","text":"UA_TransferSubscriptionsResponse_init\"(x::Ptr{UA_TransferSubscriptionsResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TransferSubscriptionsResponse_new-Tuple{}","page":"Home","title":"open62541.UA_TransferSubscriptionsResponse_new","text":"UA_TransferSubscriptionsResponse_new\"()::Ptr{UA_TransferSubscriptionsResponse}\n\ncreates and initializes a UA_TransferSubscriptionsResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_TransferSubscriptionsResponse_delete(x::Ptr{UA_TransferSubscriptionsResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TranslateBrowsePathsToNodeIdsRequest_clear-Tuple{Ptr{UA_TranslateBrowsePathsToNodeIdsRequest}}","page":"Home","title":"open62541.UA_TranslateBrowsePathsToNodeIdsRequest_clear","text":"UA_TranslateBrowsePathsToNodeIdsRequest_clear\"(x::Ptr{UA_TranslateBrowsePathsToNodeIdsRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_TranslateBrowsePathsToNodeIdsRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TranslateBrowsePathsToNodeIdsRequest_copy-Tuple{UA_TranslateBrowsePathsToNodeIdsRequest, Ptr{UA_TranslateBrowsePathsToNodeIdsRequest}}","page":"Home","title":"open62541.UA_TranslateBrowsePathsToNodeIdsRequest_copy","text":"UA_TranslateBrowsePathsToNodeIdsRequest_copy\"(src::Ptr{UA_TranslateBrowsePathsToNodeIdsRequest}, dst::Ptr{UA_TranslateBrowsePathsToNodeIdsRequest})::UA_STATUSCODE\nUA_TranslateBrowsePathsToNodeIdsRequest_copy\"(src::UA_TranslateBrowsePathsToNodeIdsRequest, dst::Ptr{UA_TranslateBrowsePathsToNodeIdsRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TranslateBrowsePathsToNodeIdsRequest_delete-Tuple{Ptr{UA_TranslateBrowsePathsToNodeIdsRequest}}","page":"Home","title":"open62541.UA_TranslateBrowsePathsToNodeIdsRequest_delete","text":"UA_TranslateBrowsePathsToNodeIdsRequest_delete(x::Ptr{UA_TranslateBrowsePathsToNodeIdsRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TranslateBrowsePathsToNodeIdsRequest_deleteMembers-Tuple{Ptr{UA_TranslateBrowsePathsToNodeIdsRequest}}","page":"Home","title":"open62541.UA_TranslateBrowsePathsToNodeIdsRequest_deleteMembers","text":"UA_TranslateBrowsePathsToNodeIdsRequest_deleteMembers(x::Ptr{UA_TranslateBrowsePathsToNodeIdsRequest})\n\n(deprecated, use UA_TranslateBrowsePathsToNodeIdsRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_TranslateBrowsePathsToNodeIdsRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TranslateBrowsePathsToNodeIdsRequest_init-Tuple{Ptr{UA_TranslateBrowsePathsToNodeIdsRequest}}","page":"Home","title":"open62541.UA_TranslateBrowsePathsToNodeIdsRequest_init","text":"UA_TranslateBrowsePathsToNodeIdsRequest_init\"(x::Ptr{UA_TranslateBrowsePathsToNodeIdsRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TranslateBrowsePathsToNodeIdsRequest_new-Tuple{}","page":"Home","title":"open62541.UA_TranslateBrowsePathsToNodeIdsRequest_new","text":"UA_TranslateBrowsePathsToNodeIdsRequest_new\"()::Ptr{UA_TranslateBrowsePathsToNodeIdsRequest}\n\ncreates and initializes a UA_TranslateBrowsePathsToNodeIdsRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_TranslateBrowsePathsToNodeIdsRequest_delete(x::Ptr{UA_TranslateBrowsePathsToNodeIdsRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TranslateBrowsePathsToNodeIdsResponse_clear-Tuple{Ptr{UA_TranslateBrowsePathsToNodeIdsResponse}}","page":"Home","title":"open62541.UA_TranslateBrowsePathsToNodeIdsResponse_clear","text":"UA_TranslateBrowsePathsToNodeIdsResponse_clear\"(x::Ptr{UA_TranslateBrowsePathsToNodeIdsResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_TranslateBrowsePathsToNodeIdsResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TranslateBrowsePathsToNodeIdsResponse_copy-Tuple{UA_TranslateBrowsePathsToNodeIdsResponse, Ptr{UA_TranslateBrowsePathsToNodeIdsResponse}}","page":"Home","title":"open62541.UA_TranslateBrowsePathsToNodeIdsResponse_copy","text":"UA_TranslateBrowsePathsToNodeIdsResponse_copy\"(src::Ptr{UA_TranslateBrowsePathsToNodeIdsResponse}, dst::Ptr{UA_TranslateBrowsePathsToNodeIdsResponse})::UA_STATUSCODE\nUA_TranslateBrowsePathsToNodeIdsResponse_copy\"(src::UA_TranslateBrowsePathsToNodeIdsResponse, dst::Ptr{UA_TranslateBrowsePathsToNodeIdsResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TranslateBrowsePathsToNodeIdsResponse_delete-Tuple{Ptr{UA_TranslateBrowsePathsToNodeIdsResponse}}","page":"Home","title":"open62541.UA_TranslateBrowsePathsToNodeIdsResponse_delete","text":"UA_TranslateBrowsePathsToNodeIdsResponse_delete(x::Ptr{UA_TranslateBrowsePathsToNodeIdsResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TranslateBrowsePathsToNodeIdsResponse_deleteMembers-Tuple{Ptr{UA_TranslateBrowsePathsToNodeIdsResponse}}","page":"Home","title":"open62541.UA_TranslateBrowsePathsToNodeIdsResponse_deleteMembers","text":"UA_TranslateBrowsePathsToNodeIdsResponse_deleteMembers(x::Ptr{UA_TranslateBrowsePathsToNodeIdsResponse})\n\n(deprecated, use UA_TranslateBrowsePathsToNodeIdsResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_TranslateBrowsePathsToNodeIdsResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TranslateBrowsePathsToNodeIdsResponse_init-Tuple{Ptr{UA_TranslateBrowsePathsToNodeIdsResponse}}","page":"Home","title":"open62541.UA_TranslateBrowsePathsToNodeIdsResponse_init","text":"UA_TranslateBrowsePathsToNodeIdsResponse_init\"(x::Ptr{UA_TranslateBrowsePathsToNodeIdsResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_TranslateBrowsePathsToNodeIdsResponse_new-Tuple{}","page":"Home","title":"open62541.UA_TranslateBrowsePathsToNodeIdsResponse_new","text":"UA_TranslateBrowsePathsToNodeIdsResponse_new\"()::Ptr{UA_TranslateBrowsePathsToNodeIdsResponse}\n\ncreates and initializes a UA_TranslateBrowsePathsToNodeIdsResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_TranslateBrowsePathsToNodeIdsResponse_delete(x::Ptr{UA_TranslateBrowsePathsToNodeIdsResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt16_clear-Tuple{Ptr{UInt16}}","page":"Home","title":"open62541.UA_UInt16_clear","text":"UInt16_clear\"(x::Ptr{UInt16})\n\ndeletes the dynamically allocated content of the object x and calls UInt16_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt16_copy-Tuple{UInt16, Ptr{UInt16}}","page":"Home","title":"open62541.UA_UInt16_copy","text":"UInt16_copy\"(src::Ptr{UInt16}, dst::Ptr{UInt16})::UA_STATUSCODE\nUInt16_copy\"(src::UInt16, dst::Ptr{UInt16})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt16_delete-Tuple{Ptr{UInt16}}","page":"Home","title":"open62541.UA_UInt16_delete","text":"UInt16_delete(x::Ptr{UInt16})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt16_deleteMembers-Tuple{Ptr{UInt16}}","page":"Home","title":"open62541.UA_UInt16_deleteMembers","text":"UInt16_deleteMembers(x::Ptr{UInt16})\n\n(deprecated, use UInt16_clear(x) instead) deletes the dynamically allocated content of the object x and calls UInt16_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt16_init-Tuple{Ptr{UInt16}}","page":"Home","title":"open62541.UA_UInt16_init","text":"UInt16_init\"(x::Ptr{UInt16})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt16_new-Tuple{}","page":"Home","title":"open62541.UA_UInt16_new","text":"UInt16_new\"()::Ptr{UInt16}\n\ncreates and initializes a UInt16 object whose memory is allocated by C. After use, it needs to be  cleaned up with UInt16_delete(x::Ptr{UInt16})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt32_clear-Tuple{Ptr{UInt32}}","page":"Home","title":"open62541.UA_UInt32_clear","text":"UInt32_clear\"(x::Ptr{UInt32})\n\ndeletes the dynamically allocated content of the object x and calls UInt32_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt32_copy-Tuple{UInt32, Ptr{UInt32}}","page":"Home","title":"open62541.UA_UInt32_copy","text":"UInt32_copy\"(src::Ptr{UInt32}, dst::Ptr{UInt32})::UA_STATUSCODE\nUInt32_copy\"(src::UInt32, dst::Ptr{UInt32})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt32_delete-Tuple{Ptr{UInt32}}","page":"Home","title":"open62541.UA_UInt32_delete","text":"UInt32_delete(x::Ptr{UInt32})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt32_deleteMembers-Tuple{Ptr{UInt32}}","page":"Home","title":"open62541.UA_UInt32_deleteMembers","text":"UInt32_deleteMembers(x::Ptr{UInt32})\n\n(deprecated, use UInt32_clear(x) instead) deletes the dynamically allocated content of the object x and calls UInt32_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt32_init-Tuple{Ptr{UInt32}}","page":"Home","title":"open62541.UA_UInt32_init","text":"UInt32_init\"(x::Ptr{UInt32})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt32_new-Tuple{}","page":"Home","title":"open62541.UA_UInt32_new","text":"UInt32_new\"()::Ptr{UInt32}\n\ncreates and initializes a UInt32 object whose memory is allocated by C. After use, it needs to be  cleaned up with UInt32_delete(x::Ptr{UInt32})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt64_clear-Tuple{Ptr{UInt64}}","page":"Home","title":"open62541.UA_UInt64_clear","text":"UInt64_clear\"(x::Ptr{UInt64})\n\ndeletes the dynamically allocated content of the object x and calls UInt64_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt64_copy-Tuple{UInt64, Ptr{UInt64}}","page":"Home","title":"open62541.UA_UInt64_copy","text":"UInt64_copy\"(src::Ptr{UInt64}, dst::Ptr{UInt64})::UA_STATUSCODE\nUInt64_copy\"(src::UInt64, dst::Ptr{UInt64})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt64_delete-Tuple{Ptr{UInt64}}","page":"Home","title":"open62541.UA_UInt64_delete","text":"UInt64_delete(x::Ptr{UInt64})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt64_deleteMembers-Tuple{Ptr{UInt64}}","page":"Home","title":"open62541.UA_UInt64_deleteMembers","text":"UInt64_deleteMembers(x::Ptr{UInt64})\n\n(deprecated, use UInt64_clear(x) instead) deletes the dynamically allocated content of the object x and calls UInt64_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt64_init-Tuple{Ptr{UInt64}}","page":"Home","title":"open62541.UA_UInt64_init","text":"UInt64_init\"(x::Ptr{UInt64})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UInt64_new-Tuple{}","page":"Home","title":"open62541.UA_UInt64_new","text":"UInt64_new\"()::Ptr{UInt64}\n\ncreates and initializes a UInt64 object whose memory is allocated by C. After use, it needs to be  cleaned up with UInt64_delete(x::Ptr{UInt64})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UnregisterNodesRequest_clear-Tuple{Ptr{UA_UnregisterNodesRequest}}","page":"Home","title":"open62541.UA_UnregisterNodesRequest_clear","text":"UA_UnregisterNodesRequest_clear\"(x::Ptr{UA_UnregisterNodesRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_UnregisterNodesRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UnregisterNodesRequest_copy-Tuple{UA_UnregisterNodesRequest, Ptr{UA_UnregisterNodesRequest}}","page":"Home","title":"open62541.UA_UnregisterNodesRequest_copy","text":"UA_UnregisterNodesRequest_copy\"(src::Ptr{UA_UnregisterNodesRequest}, dst::Ptr{UA_UnregisterNodesRequest})::UA_STATUSCODE\nUA_UnregisterNodesRequest_copy\"(src::UA_UnregisterNodesRequest, dst::Ptr{UA_UnregisterNodesRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UnregisterNodesRequest_delete-Tuple{Ptr{UA_UnregisterNodesRequest}}","page":"Home","title":"open62541.UA_UnregisterNodesRequest_delete","text":"UA_UnregisterNodesRequest_delete(x::Ptr{UA_UnregisterNodesRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UnregisterNodesRequest_deleteMembers-Tuple{Ptr{UA_UnregisterNodesRequest}}","page":"Home","title":"open62541.UA_UnregisterNodesRequest_deleteMembers","text":"UA_UnregisterNodesRequest_deleteMembers(x::Ptr{UA_UnregisterNodesRequest})\n\n(deprecated, use UA_UnregisterNodesRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_UnregisterNodesRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UnregisterNodesRequest_init-Tuple{Ptr{UA_UnregisterNodesRequest}}","page":"Home","title":"open62541.UA_UnregisterNodesRequest_init","text":"UA_UnregisterNodesRequest_init\"(x::Ptr{UA_UnregisterNodesRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UnregisterNodesRequest_new-Tuple{}","page":"Home","title":"open62541.UA_UnregisterNodesRequest_new","text":"UA_UnregisterNodesRequest_new\"()::Ptr{UA_UnregisterNodesRequest}\n\ncreates and initializes a UA_UnregisterNodesRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_UnregisterNodesRequest_delete(x::Ptr{UA_UnregisterNodesRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UnregisterNodesResponse_clear-Tuple{Ptr{UA_UnregisterNodesResponse}}","page":"Home","title":"open62541.UA_UnregisterNodesResponse_clear","text":"UA_UnregisterNodesResponse_clear\"(x::Ptr{UA_UnregisterNodesResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_UnregisterNodesResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UnregisterNodesResponse_copy-Tuple{UA_UnregisterNodesResponse, Ptr{UA_UnregisterNodesResponse}}","page":"Home","title":"open62541.UA_UnregisterNodesResponse_copy","text":"UA_UnregisterNodesResponse_copy\"(src::Ptr{UA_UnregisterNodesResponse}, dst::Ptr{UA_UnregisterNodesResponse})::UA_STATUSCODE\nUA_UnregisterNodesResponse_copy\"(src::UA_UnregisterNodesResponse, dst::Ptr{UA_UnregisterNodesResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UnregisterNodesResponse_delete-Tuple{Ptr{UA_UnregisterNodesResponse}}","page":"Home","title":"open62541.UA_UnregisterNodesResponse_delete","text":"UA_UnregisterNodesResponse_delete(x::Ptr{UA_UnregisterNodesResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UnregisterNodesResponse_deleteMembers-Tuple{Ptr{UA_UnregisterNodesResponse}}","page":"Home","title":"open62541.UA_UnregisterNodesResponse_deleteMembers","text":"UA_UnregisterNodesResponse_deleteMembers(x::Ptr{UA_UnregisterNodesResponse})\n\n(deprecated, use UA_UnregisterNodesResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_UnregisterNodesResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UnregisterNodesResponse_init-Tuple{Ptr{UA_UnregisterNodesResponse}}","page":"Home","title":"open62541.UA_UnregisterNodesResponse_init","text":"UA_UnregisterNodesResponse_init\"(x::Ptr{UA_UnregisterNodesResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UnregisterNodesResponse_new-Tuple{}","page":"Home","title":"open62541.UA_UnregisterNodesResponse_new","text":"UA_UnregisterNodesResponse_new\"()::Ptr{UA_UnregisterNodesResponse}\n\ncreates and initializes a UA_UnregisterNodesResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_UnregisterNodesResponse_delete(x::Ptr{UA_UnregisterNodesResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UpdateDataDetails_clear-Tuple{Ptr{UA_UpdateDataDetails}}","page":"Home","title":"open62541.UA_UpdateDataDetails_clear","text":"UA_UpdateDataDetails_clear\"(x::Ptr{UA_UpdateDataDetails})\n\ndeletes the dynamically allocated content of the object x and calls UA_UpdateDataDetails_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UpdateDataDetails_copy-Tuple{UA_UpdateDataDetails, Ptr{UA_UpdateDataDetails}}","page":"Home","title":"open62541.UA_UpdateDataDetails_copy","text":"UA_UpdateDataDetails_copy\"(src::Ptr{UA_UpdateDataDetails}, dst::Ptr{UA_UpdateDataDetails})::UA_STATUSCODE\nUA_UpdateDataDetails_copy\"(src::UA_UpdateDataDetails, dst::Ptr{UA_UpdateDataDetails})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UpdateDataDetails_delete-Tuple{Ptr{UA_UpdateDataDetails}}","page":"Home","title":"open62541.UA_UpdateDataDetails_delete","text":"UA_UpdateDataDetails_delete(x::Ptr{UA_UpdateDataDetails})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UpdateDataDetails_deleteMembers-Tuple{Ptr{UA_UpdateDataDetails}}","page":"Home","title":"open62541.UA_UpdateDataDetails_deleteMembers","text":"UA_UpdateDataDetails_deleteMembers(x::Ptr{UA_UpdateDataDetails})\n\n(deprecated, use UA_UpdateDataDetails_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_UpdateDataDetails_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UpdateDataDetails_init-Tuple{Ptr{UA_UpdateDataDetails}}","page":"Home","title":"open62541.UA_UpdateDataDetails_init","text":"UA_UpdateDataDetails_init\"(x::Ptr{UA_UpdateDataDetails})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UpdateDataDetails_new-Tuple{}","page":"Home","title":"open62541.UA_UpdateDataDetails_new","text":"UA_UpdateDataDetails_new\"()::Ptr{UA_UpdateDataDetails}\n\ncreates and initializes a UA_UpdateDataDetails object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_UpdateDataDetails_delete(x::Ptr{UA_UpdateDataDetails})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserIdentityToken_clear-Tuple{Ptr{UA_UserIdentityToken}}","page":"Home","title":"open62541.UA_UserIdentityToken_clear","text":"UA_UserIdentityToken_clear\"(x::Ptr{UA_UserIdentityToken})\n\ndeletes the dynamically allocated content of the object x and calls UA_UserIdentityToken_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserIdentityToken_copy-Tuple{UA_UserIdentityToken, Ptr{UA_UserIdentityToken}}","page":"Home","title":"open62541.UA_UserIdentityToken_copy","text":"UA_UserIdentityToken_copy\"(src::Ptr{UA_UserIdentityToken}, dst::Ptr{UA_UserIdentityToken})::UA_STATUSCODE\nUA_UserIdentityToken_copy\"(src::UA_UserIdentityToken, dst::Ptr{UA_UserIdentityToken})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserIdentityToken_delete-Tuple{Ptr{UA_UserIdentityToken}}","page":"Home","title":"open62541.UA_UserIdentityToken_delete","text":"UA_UserIdentityToken_delete(x::Ptr{UA_UserIdentityToken})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserIdentityToken_deleteMembers-Tuple{Ptr{UA_UserIdentityToken}}","page":"Home","title":"open62541.UA_UserIdentityToken_deleteMembers","text":"UA_UserIdentityToken_deleteMembers(x::Ptr{UA_UserIdentityToken})\n\n(deprecated, use UA_UserIdentityToken_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_UserIdentityToken_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserIdentityToken_init-Tuple{Ptr{UA_UserIdentityToken}}","page":"Home","title":"open62541.UA_UserIdentityToken_init","text":"UA_UserIdentityToken_init\"(x::Ptr{UA_UserIdentityToken})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserIdentityToken_new-Tuple{}","page":"Home","title":"open62541.UA_UserIdentityToken_new","text":"UA_UserIdentityToken_new\"()::Ptr{UA_UserIdentityToken}\n\ncreates and initializes a UA_UserIdentityToken object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_UserIdentityToken_delete(x::Ptr{UA_UserIdentityToken})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserNameIdentityToken_clear-Tuple{Ptr{UA_UserNameIdentityToken}}","page":"Home","title":"open62541.UA_UserNameIdentityToken_clear","text":"UA_UserNameIdentityToken_clear\"(x::Ptr{UA_UserNameIdentityToken})\n\ndeletes the dynamically allocated content of the object x and calls UA_UserNameIdentityToken_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserNameIdentityToken_copy-Tuple{UA_UserNameIdentityToken, Ptr{UA_UserNameIdentityToken}}","page":"Home","title":"open62541.UA_UserNameIdentityToken_copy","text":"UA_UserNameIdentityToken_copy\"(src::Ptr{UA_UserNameIdentityToken}, dst::Ptr{UA_UserNameIdentityToken})::UA_STATUSCODE\nUA_UserNameIdentityToken_copy\"(src::UA_UserNameIdentityToken, dst::Ptr{UA_UserNameIdentityToken})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserNameIdentityToken_delete-Tuple{Ptr{UA_UserNameIdentityToken}}","page":"Home","title":"open62541.UA_UserNameIdentityToken_delete","text":"UA_UserNameIdentityToken_delete(x::Ptr{UA_UserNameIdentityToken})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserNameIdentityToken_deleteMembers-Tuple{Ptr{UA_UserNameIdentityToken}}","page":"Home","title":"open62541.UA_UserNameIdentityToken_deleteMembers","text":"UA_UserNameIdentityToken_deleteMembers(x::Ptr{UA_UserNameIdentityToken})\n\n(deprecated, use UA_UserNameIdentityToken_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_UserNameIdentityToken_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserNameIdentityToken_init-Tuple{Ptr{UA_UserNameIdentityToken}}","page":"Home","title":"open62541.UA_UserNameIdentityToken_init","text":"UA_UserNameIdentityToken_init\"(x::Ptr{UA_UserNameIdentityToken})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserNameIdentityToken_new-Tuple{}","page":"Home","title":"open62541.UA_UserNameIdentityToken_new","text":"UA_UserNameIdentityToken_new\"()::Ptr{UA_UserNameIdentityToken}\n\ncreates and initializes a UA_UserNameIdentityToken object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_UserNameIdentityToken_delete(x::Ptr{UA_UserNameIdentityToken})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserTokenPolicy_clear-Tuple{Ptr{UA_UserTokenPolicy}}","page":"Home","title":"open62541.UA_UserTokenPolicy_clear","text":"UA_UserTokenPolicy_clear\"(x::Ptr{UA_UserTokenPolicy})\n\ndeletes the dynamically allocated content of the object x and calls UA_UserTokenPolicy_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserTokenPolicy_copy-Tuple{UA_UserTokenPolicy, Ptr{UA_UserTokenPolicy}}","page":"Home","title":"open62541.UA_UserTokenPolicy_copy","text":"UA_UserTokenPolicy_copy\"(src::Ptr{UA_UserTokenPolicy}, dst::Ptr{UA_UserTokenPolicy})::UA_STATUSCODE\nUA_UserTokenPolicy_copy\"(src::UA_UserTokenPolicy, dst::Ptr{UA_UserTokenPolicy})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserTokenPolicy_delete-Tuple{Ptr{UA_UserTokenPolicy}}","page":"Home","title":"open62541.UA_UserTokenPolicy_delete","text":"UA_UserTokenPolicy_delete(x::Ptr{UA_UserTokenPolicy})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserTokenPolicy_deleteMembers-Tuple{Ptr{UA_UserTokenPolicy}}","page":"Home","title":"open62541.UA_UserTokenPolicy_deleteMembers","text":"UA_UserTokenPolicy_deleteMembers(x::Ptr{UA_UserTokenPolicy})\n\n(deprecated, use UA_UserTokenPolicy_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_UserTokenPolicy_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserTokenPolicy_init-Tuple{Ptr{UA_UserTokenPolicy}}","page":"Home","title":"open62541.UA_UserTokenPolicy_init","text":"UA_UserTokenPolicy_init\"(x::Ptr{UA_UserTokenPolicy})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserTokenPolicy_new-Tuple{}","page":"Home","title":"open62541.UA_UserTokenPolicy_new","text":"UA_UserTokenPolicy_new\"()::Ptr{UA_UserTokenPolicy}\n\ncreates and initializes a UA_UserTokenPolicy object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_UserTokenPolicy_delete(x::Ptr{UA_UserTokenPolicy})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserTokenType_clear-Tuple{Ptr{UA_UserTokenType}}","page":"Home","title":"open62541.UA_UserTokenType_clear","text":"UA_UserTokenType_clear\"(x::Ptr{UA_UserTokenType})\n\ndeletes the dynamically allocated content of the object x and calls UA_UserTokenType_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserTokenType_copy-Tuple{UA_UserTokenType, Ptr{UA_UserTokenType}}","page":"Home","title":"open62541.UA_UserTokenType_copy","text":"UA_UserTokenType_copy\"(src::Ptr{UA_UserTokenType}, dst::Ptr{UA_UserTokenType})::UA_STATUSCODE\nUA_UserTokenType_copy\"(src::UA_UserTokenType, dst::Ptr{UA_UserTokenType})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserTokenType_delete-Tuple{Ptr{UA_UserTokenType}}","page":"Home","title":"open62541.UA_UserTokenType_delete","text":"UA_UserTokenType_delete(x::Ptr{UA_UserTokenType})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserTokenType_deleteMembers-Tuple{Ptr{UA_UserTokenType}}","page":"Home","title":"open62541.UA_UserTokenType_deleteMembers","text":"UA_UserTokenType_deleteMembers(x::Ptr{UA_UserTokenType})\n\n(deprecated, use UA_UserTokenType_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_UserTokenType_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserTokenType_init-Tuple{Ptr{UA_UserTokenType}}","page":"Home","title":"open62541.UA_UserTokenType_init","text":"UA_UserTokenType_init\"(x::Ptr{UA_UserTokenType})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UserTokenType_new-Tuple{}","page":"Home","title":"open62541.UA_UserTokenType_new","text":"UA_UserTokenType_new\"()::Ptr{UA_UserTokenType}\n\ncreates and initializes a UA_UserTokenType object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_UserTokenType_delete(x::Ptr{UA_UserTokenType})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UtcTime_clear-Tuple{Ptr{Int64}}","page":"Home","title":"open62541.UA_UtcTime_clear","text":"Int64_clear\"(x::Ptr{Int64})\n\ndeletes the dynamically allocated content of the object x and calls Int64_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UtcTime_copy-Tuple{Int64, Ptr{Int64}}","page":"Home","title":"open62541.UA_UtcTime_copy","text":"Int64_copy\"(src::Ptr{Int64}, dst::Ptr{Int64})::UA_STATUSCODE\nInt64_copy\"(src::Int64, dst::Ptr{Int64})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UtcTime_delete-Tuple{Ptr{Int64}}","page":"Home","title":"open62541.UA_UtcTime_delete","text":"Int64_delete(x::Ptr{Int64})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UtcTime_deleteMembers-Tuple{Ptr{Int64}}","page":"Home","title":"open62541.UA_UtcTime_deleteMembers","text":"Int64_deleteMembers(x::Ptr{Int64})\n\n(deprecated, use Int64_clear(x) instead) deletes the dynamically allocated content of the object x and calls Int64_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UtcTime_init-Tuple{Ptr{Int64}}","page":"Home","title":"open62541.UA_UtcTime_init","text":"Int64_init\"(x::Ptr{Int64})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_UtcTime_new-Tuple{}","page":"Home","title":"open62541.UA_UtcTime_new","text":"Int64_new\"()::Ptr{Int64}\n\ncreates and initializes a Int64 object whose memory is allocated by C. After use, it needs to be  cleaned up with Int64_delete(x::Ptr{Int64})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ValueCallback_onRead_generate-Tuple{Function}","page":"Home","title":"open62541.UA_ValueCallback_onRead_generate","text":"UA_ValueCallback_onRead_generate(f::Function)\n\ncreates a function pointer for the onRead field of a UA_ValueCallback object.\n\nf must be a Julia function with the following signature:\n\n        nodeid::Ptr{Cvoid}, nodecontext::Ptr{Cvoid}, range::Ptr{UA_NumericRange}, \n        data::Ptr{UA_DataValue})::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ValueCallback_onWrite_generate-Tuple{Function}","page":"Home","title":"open62541.UA_ValueCallback_onWrite_generate","text":"UA_ValueCallback_onWrite_generate(f::Function)\n\ncreates a function pointer for the onWrite field of a UA_ValueCallback object.\n\nf must be a Julia function with the following signature:\n\n        nodeid::Ptr{Cvoid}, nodecontext::Ptr{Cvoid}, range::Ptr{UA_NumericRange}, \n        data::Ptr{UA_DataValue})::Nothing```\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_VariableAttributes_clear-Tuple{Ptr{UA_VariableAttributes}}","page":"Home","title":"open62541.UA_VariableAttributes_clear","text":"UA_VariableAttributes_clear\"(x::Ptr{UA_VariableAttributes})\n\ndeletes the dynamically allocated content of the object x and calls UA_VariableAttributes_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_VariableAttributes_copy-Tuple{UA_VariableAttributes, Ptr{UA_VariableAttributes}}","page":"Home","title":"open62541.UA_VariableAttributes_copy","text":"UA_VariableAttributes_copy\"(src::Ptr{UA_VariableAttributes}, dst::Ptr{UA_VariableAttributes})::UA_STATUSCODE\nUA_VariableAttributes_copy\"(src::UA_VariableAttributes, dst::Ptr{UA_VariableAttributes})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_VariableAttributes_delete-Tuple{Ptr{UA_VariableAttributes}}","page":"Home","title":"open62541.UA_VariableAttributes_delete","text":"UA_VariableAttributes_delete(x::Ptr{UA_VariableAttributes})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_VariableAttributes_deleteMembers-Tuple{Ptr{UA_VariableAttributes}}","page":"Home","title":"open62541.UA_VariableAttributes_deleteMembers","text":"UA_VariableAttributes_deleteMembers(x::Ptr{UA_VariableAttributes})\n\n(deprecated, use UA_VariableAttributes_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_VariableAttributes_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_VariableAttributes_generate-Union{Tuple{}, Tuple{T}} where T<:Union{AbstractFloat, AbstractString, Integer}","page":"Home","title":"open62541.UA_VariableAttributes_generate","text":"UA_VariableAttributes_generate(; value::Union{AbstractArray{T}, T},\n    displayname::AbstractString, description::AbstractString,\n    localization::AbstractString = \"en-US\",\n    writemask::Union{Nothing, UInt32} = nothing,\n    userwritemask::Union{Nothing, UInt32} = nothing,\n    accesslevel::Union{Nothing, UInt8} = nothing,\n    useraccesslevel::Union{Nothing, UInt8} = nothing,\n    minimumsamplinginterval::Union{Nothing, Float64} = nothing,\n    historizing::Union{Nothing, Bool} = nothing,\n    valuerank::Union{Integer, Nothing} = nothing)::Ptr{UA_VariableAttributes} where {T <: Union{AbstractFloat, Integer, AbstractString}}\n\ngenerates a UA_VariableAttributes object. Memory for the object is allocated by C and needs to be cleaned up by calling UA_VariableAttributes_delete(x) after usage.\n\nFor keywords given as nothing, the respective default value is used, see UA_VariableAttributes_default[]. If nothing is given for keyword valuerank, then it is either set to UA_VALUERANK_SCALAR (if value is a scalar), or to the dimensionality of the supplied array (i.e., N for an AbstractArray{T,N}).\n\nSee also UA_WRITEMASK, UA_USERWRITEMASK, UA_ACCESSLEVEL, and UA_USERACCESSLEVEL for information on how to generate the respective keyword inputs.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_VariableAttributes_init-Tuple{Ptr{UA_VariableAttributes}}","page":"Home","title":"open62541.UA_VariableAttributes_init","text":"UA_VariableAttributes_init\"(x::Ptr{UA_VariableAttributes})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_VariableAttributes_new-Tuple{}","page":"Home","title":"open62541.UA_VariableAttributes_new","text":"UA_VariableAttributes_new\"()::Ptr{UA_VariableAttributes}\n\ncreates and initializes a UA_VariableAttributes object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_VariableAttributes_delete(x::Ptr{UA_VariableAttributes})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_VariableTypeAttributes_clear-Tuple{Ptr{UA_VariableTypeAttributes}}","page":"Home","title":"open62541.UA_VariableTypeAttributes_clear","text":"UA_VariableTypeAttributes_clear\"(x::Ptr{UA_VariableTypeAttributes})\n\ndeletes the dynamically allocated content of the object x and calls UA_VariableTypeAttributes_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_VariableTypeAttributes_copy-Tuple{UA_VariableTypeAttributes, Ptr{UA_VariableTypeAttributes}}","page":"Home","title":"open62541.UA_VariableTypeAttributes_copy","text":"UA_VariableTypeAttributes_copy\"(src::Ptr{UA_VariableTypeAttributes}, dst::Ptr{UA_VariableTypeAttributes})::UA_STATUSCODE\nUA_VariableTypeAttributes_copy\"(src::UA_VariableTypeAttributes, dst::Ptr{UA_VariableTypeAttributes})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_VariableTypeAttributes_delete-Tuple{Ptr{UA_VariableTypeAttributes}}","page":"Home","title":"open62541.UA_VariableTypeAttributes_delete","text":"UA_VariableTypeAttributes_delete(x::Ptr{UA_VariableTypeAttributes})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_VariableTypeAttributes_deleteMembers-Tuple{Ptr{UA_VariableTypeAttributes}}","page":"Home","title":"open62541.UA_VariableTypeAttributes_deleteMembers","text":"UA_VariableTypeAttributes_deleteMembers(x::Ptr{UA_VariableTypeAttributes})\n\n(deprecated, use UA_VariableTypeAttributes_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_VariableTypeAttributes_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_VariableTypeAttributes_generate-Union{Tuple{}, Tuple{T}} where T<:Union{AbstractFloat, Integer}","page":"Home","title":"open62541.UA_VariableTypeAttributes_generate","text":"UA_VariableTypeAttributes_generate(; value::Union{AbstractArray{T}, T},\n    displayname::AbstractString, description::AbstractString,\n    localization::AbstractString = \"en-US\",\n    writemask::Union{Nothing, UInt32} = nothing,\n    userwritemask::Union{Nothing, UInt32} = nothing,\n    valuerank::Union{Nothing, Integer} = nothing,\n    isabstract::Union{Nothing, Bool})::Ptr{UA_VariableTypeAttributes} where {T <: Union{AbstractFloat, Integer, AbstractString}}\n\ngenerates a UA_VariableTypeAttributes object. Memory for the object is allocated by C and needs to be cleaned up by calling UA_VariableAttributes_delete(x) after usage.\n\nFor keywords given as nothing, the respective default value is used, see UA_VariableAttributes_default[]. If nothing is given for keyword valuerank, then it is either set to UA_VALUERANK_SCALAR (if value is a scalar), or to the dimensionality of the supplied array (i.e., N for an AbstractArray{T,N}).\n\nSee also UA_WRITEMASK, UA_USERWRITEMASK for information on how to generate the respective keyword inputs.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_VariableTypeAttributes_init-Tuple{Ptr{UA_VariableTypeAttributes}}","page":"Home","title":"open62541.UA_VariableTypeAttributes_init","text":"UA_VariableTypeAttributes_init\"(x::Ptr{UA_VariableTypeAttributes})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_VariableTypeAttributes_new-Tuple{}","page":"Home","title":"open62541.UA_VariableTypeAttributes_new","text":"UA_VariableTypeAttributes_new\"()::Ptr{UA_VariableTypeAttributes}\n\ncreates and initializes a UA_VariableTypeAttributes object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_VariableTypeAttributes_delete(x::Ptr{UA_VariableTypeAttributes})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Variant_clear-Tuple{Ptr{UA_Variant}}","page":"Home","title":"open62541.UA_Variant_clear","text":"UA_Variant_clear\"(x::Ptr{UA_Variant})\n\ndeletes the dynamically allocated content of the object x and calls UA_Variant_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Variant_copy-Tuple{UA_Variant, Ptr{UA_Variant}}","page":"Home","title":"open62541.UA_Variant_copy","text":"UA_Variant_copy\"(src::Ptr{UA_Variant}, dst::Ptr{UA_Variant})::UA_STATUSCODE\nUA_Variant_copy\"(src::UA_Variant, dst::Ptr{UA_Variant})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Variant_delete-Tuple{Ptr{UA_Variant}}","page":"Home","title":"open62541.UA_Variant_delete","text":"UA_Variant_delete(x::Ptr{UA_Variant})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Variant_deleteMembers-Tuple{Ptr{UA_Variant}}","page":"Home","title":"open62541.UA_Variant_deleteMembers","text":"UA_Variant_deleteMembers(x::Ptr{UA_Variant})\n\n(deprecated, use UA_Variant_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_Variant_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Variant_init-Tuple{Ptr{UA_Variant}}","page":"Home","title":"open62541.UA_Variant_init","text":"UA_Variant_init\"(x::Ptr{UA_Variant})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Variant_new-Tuple{}","page":"Home","title":"open62541.UA_Variant_new","text":"UA_Variant_new\"()::Ptr{UA_Variant}\n\ncreates and initializes a UA_Variant object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_Variant_delete(x::Ptr{UA_Variant})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ViewAttributes_clear-Tuple{Ptr{UA_ViewAttributes}}","page":"Home","title":"open62541.UA_ViewAttributes_clear","text":"UA_ViewAttributes_clear\"(x::Ptr{UA_ViewAttributes})\n\ndeletes the dynamically allocated content of the object x and calls UA_ViewAttributes_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ViewAttributes_copy-Tuple{UA_ViewAttributes, Ptr{UA_ViewAttributes}}","page":"Home","title":"open62541.UA_ViewAttributes_copy","text":"UA_ViewAttributes_copy\"(src::Ptr{UA_ViewAttributes}, dst::Ptr{UA_ViewAttributes})::UA_STATUSCODE\nUA_ViewAttributes_copy\"(src::UA_ViewAttributes, dst::Ptr{UA_ViewAttributes})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ViewAttributes_delete-Tuple{Ptr{UA_ViewAttributes}}","page":"Home","title":"open62541.UA_ViewAttributes_delete","text":"UA_ViewAttributes_delete(x::Ptr{UA_ViewAttributes})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ViewAttributes_deleteMembers-Tuple{Ptr{UA_ViewAttributes}}","page":"Home","title":"open62541.UA_ViewAttributes_deleteMembers","text":"UA_ViewAttributes_deleteMembers(x::Ptr{UA_ViewAttributes})\n\n(deprecated, use UA_ViewAttributes_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ViewAttributes_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ViewAttributes_generate-Tuple{}","page":"Home","title":"open62541.UA_ViewAttributes_generate","text":"UA_ViewAttributes_generate(; displayname::AbstractString,\n    description::AbstractString, localization::AbstractString = \"en-US\",\n    writemask::Union{Nothing, UInt32} = nothing,\n    userwritemask::Union{Nothing, UInt32} = nothing,\n    containsnoloops::Union{Nothing, Bool} = nothing,\n    eventnotifier::Union{Nothing, UInt8} = nothing)::Ptr{UA_ViewAttributes}\n\ngenerates a UA_ViewAttributes object. Memory for the object is allocated by C and needs to be cleaned up by calling UA_ViewAttributes_delete(x) after usage.\n\nFor keywords given as nothing, the respective default value is used, see UA_ViewAttributes_default[]\n\nSee also UA_WRITEMASK, UA_USERWRITEMASK and UA_EVENTNOTIFIER for information on how to generate the respective keyword inputs.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ViewAttributes_init-Tuple{Ptr{UA_ViewAttributes}}","page":"Home","title":"open62541.UA_ViewAttributes_init","text":"UA_ViewAttributes_init\"(x::Ptr{UA_ViewAttributes})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ViewAttributes_new-Tuple{}","page":"Home","title":"open62541.UA_ViewAttributes_new","text":"UA_ViewAttributes_new\"()::Ptr{UA_ViewAttributes}\n\ncreates and initializes a UA_ViewAttributes object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ViewAttributes_delete(x::Ptr{UA_ViewAttributes})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ViewDescription_clear-Tuple{Ptr{UA_ViewDescription}}","page":"Home","title":"open62541.UA_ViewDescription_clear","text":"UA_ViewDescription_clear\"(x::Ptr{UA_ViewDescription})\n\ndeletes the dynamically allocated content of the object x and calls UA_ViewDescription_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ViewDescription_copy-Tuple{UA_ViewDescription, Ptr{UA_ViewDescription}}","page":"Home","title":"open62541.UA_ViewDescription_copy","text":"UA_ViewDescription_copy\"(src::Ptr{UA_ViewDescription}, dst::Ptr{UA_ViewDescription})::UA_STATUSCODE\nUA_ViewDescription_copy\"(src::UA_ViewDescription, dst::Ptr{UA_ViewDescription})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ViewDescription_delete-Tuple{Ptr{UA_ViewDescription}}","page":"Home","title":"open62541.UA_ViewDescription_delete","text":"UA_ViewDescription_delete(x::Ptr{UA_ViewDescription})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ViewDescription_deleteMembers-Tuple{Ptr{UA_ViewDescription}}","page":"Home","title":"open62541.UA_ViewDescription_deleteMembers","text":"UA_ViewDescription_deleteMembers(x::Ptr{UA_ViewDescription})\n\n(deprecated, use UA_ViewDescription_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_ViewDescription_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ViewDescription_init-Tuple{Ptr{UA_ViewDescription}}","page":"Home","title":"open62541.UA_ViewDescription_init","text":"UA_ViewDescription_init\"(x::Ptr{UA_ViewDescription})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_ViewDescription_new-Tuple{}","page":"Home","title":"open62541.UA_ViewDescription_new","text":"UA_ViewDescription_new\"()::Ptr{UA_ViewDescription}\n\ncreates and initializes a UA_ViewDescription object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_ViewDescription_delete(x::Ptr{UA_ViewDescription})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WRITEMASK-Tuple{}","page":"Home","title":"open62541.UA_WRITEMASK","text":"UA_WRITEMASK(; accesslevel = false, arraydimensions = false,\n        browsename = false, containsnoloops = false, datatype = false,\n        description = false, displayname = false, eventnotifier = false,\n        executable = false, historizing = false, inversename = false,\n        isabstract = false, minimumsamplinginterval = false, nodeclass = false,\n        nodeid = false, symmetric = false, useraccesslevel = false, \n        userexecutable = false, userwritemask = false, valuerank = false,\n        writemask = false, valueforvariabletype = false)::UInt32\n\ncalculates a UInt32 number expressing which attributes of a node are writeable. The meaning of the keywords is explained here: https://reference.opcfoundation.org/Core/Part3/v105/docs/8.60\n\nIf the specific node type does not support an attribute, the corresponding keyword must be set to false. This is currently not enforced automatically.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteRequest_clear-Tuple{Ptr{UA_WriteRequest}}","page":"Home","title":"open62541.UA_WriteRequest_clear","text":"UA_WriteRequest_clear\"(x::Ptr{UA_WriteRequest})\n\ndeletes the dynamically allocated content of the object x and calls UA_WriteRequest_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteRequest_copy-Tuple{UA_WriteRequest, Ptr{UA_WriteRequest}}","page":"Home","title":"open62541.UA_WriteRequest_copy","text":"UA_WriteRequest_copy\"(src::Ptr{UA_WriteRequest}, dst::Ptr{UA_WriteRequest})::UA_STATUSCODE\nUA_WriteRequest_copy\"(src::UA_WriteRequest, dst::Ptr{UA_WriteRequest})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteRequest_delete-Tuple{Ptr{UA_WriteRequest}}","page":"Home","title":"open62541.UA_WriteRequest_delete","text":"UA_WriteRequest_delete(x::Ptr{UA_WriteRequest})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteRequest_deleteMembers-Tuple{Ptr{UA_WriteRequest}}","page":"Home","title":"open62541.UA_WriteRequest_deleteMembers","text":"UA_WriteRequest_deleteMembers(x::Ptr{UA_WriteRequest})\n\n(deprecated, use UA_WriteRequest_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_WriteRequest_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteRequest_init-Tuple{Ptr{UA_WriteRequest}}","page":"Home","title":"open62541.UA_WriteRequest_init","text":"UA_WriteRequest_init\"(x::Ptr{UA_WriteRequest})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteRequest_new-Tuple{}","page":"Home","title":"open62541.UA_WriteRequest_new","text":"UA_WriteRequest_new\"()::Ptr{UA_WriteRequest}\n\ncreates and initializes a UA_WriteRequest object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_WriteRequest_delete(x::Ptr{UA_WriteRequest})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteResponse_clear-Tuple{Ptr{UA_WriteResponse}}","page":"Home","title":"open62541.UA_WriteResponse_clear","text":"UA_WriteResponse_clear\"(x::Ptr{UA_WriteResponse})\n\ndeletes the dynamically allocated content of the object x and calls UA_WriteResponse_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteResponse_copy-Tuple{UA_WriteResponse, Ptr{UA_WriteResponse}}","page":"Home","title":"open62541.UA_WriteResponse_copy","text":"UA_WriteResponse_copy\"(src::Ptr{UA_WriteResponse}, dst::Ptr{UA_WriteResponse})::UA_STATUSCODE\nUA_WriteResponse_copy\"(src::UA_WriteResponse, dst::Ptr{UA_WriteResponse})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteResponse_delete-Tuple{Ptr{UA_WriteResponse}}","page":"Home","title":"open62541.UA_WriteResponse_delete","text":"UA_WriteResponse_delete(x::Ptr{UA_WriteResponse})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteResponse_deleteMembers-Tuple{Ptr{UA_WriteResponse}}","page":"Home","title":"open62541.UA_WriteResponse_deleteMembers","text":"UA_WriteResponse_deleteMembers(x::Ptr{UA_WriteResponse})\n\n(deprecated, use UA_WriteResponse_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_WriteResponse_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteResponse_init-Tuple{Ptr{UA_WriteResponse}}","page":"Home","title":"open62541.UA_WriteResponse_init","text":"UA_WriteResponse_init\"(x::Ptr{UA_WriteResponse})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteResponse_new-Tuple{}","page":"Home","title":"open62541.UA_WriteResponse_new","text":"UA_WriteResponse_new\"()::Ptr{UA_WriteResponse}\n\ncreates and initializes a UA_WriteResponse object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_WriteResponse_delete(x::Ptr{UA_WriteResponse})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteValue_clear-Tuple{Ptr{UA_WriteValue}}","page":"Home","title":"open62541.UA_WriteValue_clear","text":"UA_WriteValue_clear\"(x::Ptr{UA_WriteValue})\n\ndeletes the dynamically allocated content of the object x and calls UA_WriteValue_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteValue_copy-Tuple{UA_WriteValue, Ptr{UA_WriteValue}}","page":"Home","title":"open62541.UA_WriteValue_copy","text":"UA_WriteValue_copy\"(src::Ptr{UA_WriteValue}, dst::Ptr{UA_WriteValue})::UA_STATUSCODE\nUA_WriteValue_copy\"(src::UA_WriteValue, dst::Ptr{UA_WriteValue})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteValue_delete-Tuple{Ptr{UA_WriteValue}}","page":"Home","title":"open62541.UA_WriteValue_delete","text":"UA_WriteValue_delete(x::Ptr{UA_WriteValue})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteValue_deleteMembers-Tuple{Ptr{UA_WriteValue}}","page":"Home","title":"open62541.UA_WriteValue_deleteMembers","text":"UA_WriteValue_deleteMembers(x::Ptr{UA_WriteValue})\n\n(deprecated, use UA_WriteValue_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_WriteValue_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteValue_init-Tuple{Ptr{UA_WriteValue}}","page":"Home","title":"open62541.UA_WriteValue_init","text":"UA_WriteValue_init\"(x::Ptr{UA_WriteValue})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_WriteValue_new-Tuple{}","page":"Home","title":"open62541.UA_WriteValue_new","text":"UA_WriteValue_new\"()::Ptr{UA_WriteValue}\n\ncreates and initializes a UA_WriteValue object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_WriteValue_delete(x::Ptr{UA_WriteValue})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_X509IdentityToken_clear-Tuple{Ptr{UA_X509IdentityToken}}","page":"Home","title":"open62541.UA_X509IdentityToken_clear","text":"UA_X509IdentityToken_clear\"(x::Ptr{UA_X509IdentityToken})\n\ndeletes the dynamically allocated content of the object x and calls UA_X509IdentityToken_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_X509IdentityToken_copy-Tuple{UA_X509IdentityToken, Ptr{UA_X509IdentityToken}}","page":"Home","title":"open62541.UA_X509IdentityToken_copy","text":"UA_X509IdentityToken_copy\"(src::Ptr{UA_X509IdentityToken}, dst::Ptr{UA_X509IdentityToken})::UA_STATUSCODE\nUA_X509IdentityToken_copy\"(src::UA_X509IdentityToken, dst::Ptr{UA_X509IdentityToken})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_X509IdentityToken_delete-Tuple{Ptr{UA_X509IdentityToken}}","page":"Home","title":"open62541.UA_X509IdentityToken_delete","text":"UA_X509IdentityToken_delete(x::Ptr{UA_X509IdentityToken})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_X509IdentityToken_deleteMembers-Tuple{Ptr{UA_X509IdentityToken}}","page":"Home","title":"open62541.UA_X509IdentityToken_deleteMembers","text":"UA_X509IdentityToken_deleteMembers(x::Ptr{UA_X509IdentityToken})\n\n(deprecated, use UA_X509IdentityToken_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_X509IdentityToken_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_X509IdentityToken_init-Tuple{Ptr{UA_X509IdentityToken}}","page":"Home","title":"open62541.UA_X509IdentityToken_init","text":"UA_X509IdentityToken_init\"(x::Ptr{UA_X509IdentityToken})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_X509IdentityToken_new-Tuple{}","page":"Home","title":"open62541.UA_X509IdentityToken_new","text":"UA_X509IdentityToken_new\"()::Ptr{UA_X509IdentityToken}\n\ncreates and initializes a UA_X509IdentityToken object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_X509IdentityToken_delete(x::Ptr{UA_X509IdentityToken})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_XVType_clear-Tuple{Ptr{UA_XVType}}","page":"Home","title":"open62541.UA_XVType_clear","text":"UA_XVType_clear\"(x::Ptr{UA_XVType})\n\ndeletes the dynamically allocated content of the object x and calls UA_XVType_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_XVType_copy-Tuple{UA_XVType, Ptr{UA_XVType}}","page":"Home","title":"open62541.UA_XVType_copy","text":"UA_XVType_copy\"(src::Ptr{UA_XVType}, dst::Ptr{UA_XVType})::UA_STATUSCODE\nUA_XVType_copy\"(src::UA_XVType, dst::Ptr{UA_XVType})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_XVType_delete-Tuple{Ptr{UA_XVType}}","page":"Home","title":"open62541.UA_XVType_delete","text":"UA_XVType_delete(x::Ptr{UA_XVType})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_XVType_deleteMembers-Tuple{Ptr{UA_XVType}}","page":"Home","title":"open62541.UA_XVType_deleteMembers","text":"UA_XVType_deleteMembers(x::Ptr{UA_XVType})\n\n(deprecated, use UA_XVType_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_XVType_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_XVType_init-Tuple{Ptr{UA_XVType}}","page":"Home","title":"open62541.UA_XVType_init","text":"UA_XVType_init\"(x::Ptr{UA_XVType})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_XVType_new-Tuple{}","page":"Home","title":"open62541.UA_XVType_new","text":"UA_XVType_new\"()::Ptr{UA_XVType}\n\ncreates and initializes a UA_XVType object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_XVType_delete(x::Ptr{UA_XVType})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_XmlElement_clear-Tuple{Ptr{UA_String}}","page":"Home","title":"open62541.UA_XmlElement_clear","text":"UA_String_clear\"(x::Ptr{UA_String})\n\ndeletes the dynamically allocated content of the object x and calls UA_String_init(x) to reset the type and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_XmlElement_copy-Tuple{UA_String, Ptr{UA_String}}","page":"Home","title":"open62541.UA_XmlElement_copy","text":"UA_String_copy\"(src::Ptr{UA_String}, dst::Ptr{UA_String})::UA_STATUSCODE\nUA_String_copy\"(src::UA_String, dst::Ptr{UA_String})::UA_STATUSCODE\n\nCopy the content of the source object src to the destination object dst. Returns UA_STATUSCODE_GOOD or UA_STATUSCODE_BADOUTOFMEMORY.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_XmlElement_delete-Tuple{Ptr{UA_String}}","page":"Home","title":"open62541.UA_XmlElement_delete","text":"UA_String_delete(x::Ptr{UA_String})\n\ndeletes the content of object x and its memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_XmlElement_deleteMembers-Tuple{Ptr{UA_String}}","page":"Home","title":"open62541.UA_XmlElement_deleteMembers","text":"UA_String_deleteMembers(x::Ptr{UA_String})\n\n(deprecated, use UA_String_clear(x) instead) deletes the dynamically allocated content of the object x and calls UA_String_init(x) to reset the type and its memory.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_XmlElement_init-Tuple{Ptr{UA_String}}","page":"Home","title":"open62541.UA_XmlElement_init","text":"UA_String_init\"(x::Ptr{UA_String})\n\ninitializes the object x. This is synonymous with zeroing out the allocated memory. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_XmlElement_new-Tuple{}","page":"Home","title":"open62541.UA_XmlElement_new","text":"UA_String_new\"()::Ptr{UA_String}\n\ncreates and initializes a UA_String object whose memory is allocated by C. After use, it needs to be  cleaned up with UA_String_delete(x::Ptr{UA_String})\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_calcSizeBinary-Tuple{Any, Any}","page":"Home","title":"open62541.UA_calcSizeBinary","text":"UA_calcSizeBinary(p, type)\n\nEncoding/Decoding ^^^^^^^^^^^^^^^^^^ Encoding and decoding routines for the available formats. For all formats the _calcSize, _encode and _decode methods are provided.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_findDataType-Tuple{Any}","page":"Home","title":"open62541.UA_findDataType","text":"UA_findDataType(typeId)\n\nBuiltin data types can be accessed as UA_TYPES[UA_TYPES_XXX], where XXX is the name of the data type. If only the NodeId of a type is known, use the following method to retrieve the data type description.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_random_seed-Tuple{Any}","page":"Home","title":"open62541.UA_random_seed","text":"UA_random_seed(seed)\n\nRandom Number Generator –––––––––––- If UA_MULTITHREADING is defined, then the seed is stored in thread local storage. The seed is initialized for every thread in the server/client.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.__UA_Client_Service-NTuple{5, Any}","page":"Home","title":"open62541.__UA_Client_Service","text":"__UA_Client_Service(client, request, requestType, response, responseType)\n\n.. _client-services:\n\nServices ––––\n\nThe raw OPC UA services are exposed to the client. But most of them time, it is better to use the convenience functions from ua_client_highlevelh that wrap the raw services.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.__UA_Client_readAttribute-NTuple{5, Any}","page":"Home","title":"open62541.__UA_Client_readAttribute","text":"__UA_Client_readAttribute(client, nodeId, attributeId, out, outDataType)\n\n.. _client-highlevel:\n\nHighlevel Client Functionality –––––––––––––––\n\nThe following definitions are convenience functions making use of the standard OPC UA services in the background. This is a less flexible way of handling the stack, because at many places sensible defaults are presumed; at the same time using these functions is the easiest way of implementing an OPC UA application, as you will not have to consider all the details that go into the OPC UA services. If more flexibility is needed, you can always achieve the same functionality using the raw :ref:OPC UA services <client-services>.\n\nRead Attributes ^^^^^^^^^^^^^^^ The following functions can be used to retrieve a single node attribute. Use the regular service to read several attributes at once.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.__UA_Client_writeAttribute-NTuple{5, Any}","page":"Home","title":"open62541.__UA_Client_writeAttribute","text":"__UA_Client_writeAttribute(client, nodeId, attributeId, in, inDataType)\n\nWrite Attributes ^^^^^^^^^^^^^^^^\n\nThe following functions can be use to write a single node attribute at a time. Use the regular write service to write several attributes at once.\n\n\n\n\n\n","category":"method"},{"location":"#open62541.__UA_Client_writeAttribute_async-NTuple{8, Any}","page":"Home","title":"open62541.__UA_Client_writeAttribute_async","text":"__UA_Client_writeAttribute_async(client, nodeId, attributeId, in, inDataType, callback, userdata, reqId)\n\nWrite Attribute ^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"method"}]
}
