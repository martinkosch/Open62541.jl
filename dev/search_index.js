var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = open62541","category":"page"},{"location":"#open62541","page":"Home","title":"open62541","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for open62541.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [open62541]","category":"page"},{"location":"#open62541.UA_AccessControl","page":"Home","title":"open62541.UA_AccessControl","text":"UA_AccessControl\n\n.. _access-control:\n\nAccess Control Plugin API ========================= The access control callback is used to authenticate sessions and grant access rights accordingly.\n\nThe sessionId and sessionContext can be both NULL. This is the case when, for example, a MonitoredItem (the underlying Subscription) is detached from its Session but continues to run. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ActivateSessionRequest","page":"Home","title":"open62541.UA_ActivateSessionRequest","text":"UA_ActivateSessionRequest\n\nActivateSessionRequest ^^^^^^^^^^^^^^^^^^^^^^ Activates a session with the server. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ActivateSessionResponse","page":"Home","title":"open62541.UA_ActivateSessionResponse","text":"UA_ActivateSessionResponse\n\nActivateSessionResponse ^^^^^^^^^^^^^^^^^^^^^^^ Activates a session with the server. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AddNodesItem","page":"Home","title":"open62541.UA_AddNodesItem","text":"UA_AddNodesItem\n\nAddNodesItem ^^^^^^^^^^^^ A request to add a node to the server address space. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AddNodesRequest","page":"Home","title":"open62541.UA_AddNodesRequest","text":"UA_AddNodesRequest\n\nAddNodesRequest ^^^^^^^^^^^^^^^ Adds one or more nodes to the server address space. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AddNodesResponse","page":"Home","title":"open62541.UA_AddNodesResponse","text":"UA_AddNodesResponse\n\nAddNodesResponse ^^^^^^^^^^^^^^^^ Adds one or more nodes to the server address space. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AddNodesResult","page":"Home","title":"open62541.UA_AddNodesResult","text":"UA_AddNodesResult\n\nAddNodesResult ^^^^^^^^^^^^^^ A result of an add node operation. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AddReferencesItem","page":"Home","title":"open62541.UA_AddReferencesItem","text":"UA_AddReferencesItem\n\nAddReferencesItem ^^^^^^^^^^^^^^^^^ A request to add a reference to the server address space. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AddReferencesRequest","page":"Home","title":"open62541.UA_AddReferencesRequest","text":"UA_AddReferencesRequest\n\nAddReferencesRequest ^^^^^^^^^^^^^^^^^^^^ Adds one or more references to the server address space. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AddReferencesResponse","page":"Home","title":"open62541.UA_AddReferencesResponse","text":"UA_AddReferencesResponse\n\nAddReferencesResponse ^^^^^^^^^^^^^^^^^^^^^ Adds one or more references to the server address space. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AggregateConfiguration","page":"Home","title":"open62541.UA_AggregateConfiguration","text":"UA_AggregateConfiguration\n\nAggregateConfiguration ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AggregateFilter","page":"Home","title":"open62541.UA_AggregateFilter","text":"UA_AggregateFilter\n\nAggregateFilter ^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AnonymousIdentityToken","page":"Home","title":"open62541.UA_AnonymousIdentityToken","text":"UA_AnonymousIdentityToken\n\nAnonymousIdentityToken ^^^^^^^^^^^^^^^^^^^^^^ A token representing an anonymous user. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ApplicationDescription","page":"Home","title":"open62541.UA_ApplicationDescription","text":"UA_ApplicationDescription\n\nApplicationDescription ^^^^^^^^^^^^^^^^^^^^^^ Describes an application and how to find it. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ApplicationType","page":"Home","title":"open62541.UA_ApplicationType","text":"UA_ApplicationType\n\nApplicationType ^^^^^^^^^^^^^^^ The types of applications. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Argument","page":"Home","title":"open62541.UA_Argument","text":"UA_Argument\n\nArgument ^^^^^^^^ An argument for a method. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AttributeId","page":"Home","title":"open62541.UA_AttributeId","text":"UA_AttributeId\n\nCommon Definitions ==================\n\nCommon definitions for Client, Server and PubSub.\n\n.. _attribute-id:\n\nAttribute Id –––––– Every node in an OPC UA information model contains attributes depending on the node type. Possible attributes are as follows: \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AttributeOperand","page":"Home","title":"open62541.UA_AttributeOperand","text":"UA_AttributeOperand\n\nAttributeOperand ^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AxisInformation","page":"Home","title":"open62541.UA_AxisInformation","text":"UA_AxisInformation\n\nAxisInformation ^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_AxisScaleEnumeration","page":"Home","title":"open62541.UA_AxisScaleEnumeration","text":"UA_AxisScaleEnumeration\n\nAxisScaleEnumeration ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Boolean","page":"Home","title":"open62541.UA_Boolean","text":".. _types:\n\nData Types ==========\n\nThe OPC UA protocol defines 25 builtin data types and three ways of combining them into higher-order types: arrays, structures and unions. In open62541, only the builtin data types are defined manually. All other data types are generated from standard XML definitions. Their exact definitions can be looked up at https://opcfoundation.org/UA/schemas/Opc.Ua.Types.bsd.\n\nFor users that are new to open62541, take a look at the :ref:tutorial for working with data types<types-tutorial> before diving into the implementation details.\n\nBuiltin Types ––––––-\n\nBoolean ^^^^^^^ A two-state logical value (true or false). \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowseDescription","page":"Home","title":"open62541.UA_BrowseDescription","text":"UA_BrowseDescription\n\nBrowseDescription ^^^^^^^^^^^^^^^^^ A request to browse the the references from a node. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowseDirection","page":"Home","title":"open62541.UA_BrowseDirection","text":"UA_BrowseDirection\n\nBrowseDirection ^^^^^^^^^^^^^^^ The directions of the references to return. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowseNextRequest","page":"Home","title":"open62541.UA_BrowseNextRequest","text":"UA_BrowseNextRequest\n\nBrowseNextRequest ^^^^^^^^^^^^^^^^^ Continues one or more browse operations. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowseNextResponse","page":"Home","title":"open62541.UA_BrowseNextResponse","text":"UA_BrowseNextResponse\n\nBrowseNextResponse ^^^^^^^^^^^^^^^^^^ Continues one or more browse operations. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowsePath","page":"Home","title":"open62541.UA_BrowsePath","text":"UA_BrowsePath\n\nBrowsePath ^^^^^^^^^^ A request to translate a path into a node id. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowsePathResult","page":"Home","title":"open62541.UA_BrowsePathResult","text":"UA_BrowsePathResult\n\nBrowsePathResult ^^^^^^^^^^^^^^^^ The result of a translate opearation. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowsePathTarget","page":"Home","title":"open62541.UA_BrowsePathTarget","text":"UA_BrowsePathTarget\n\nBrowsePathTarget ^^^^^^^^^^^^^^^^ The target of the translated path. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowseRequest","page":"Home","title":"open62541.UA_BrowseRequest","text":"UA_BrowseRequest\n\nBrowseRequest ^^^^^^^^^^^^^ Browse the references for one or more nodes from the server address space. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowseResponse","page":"Home","title":"open62541.UA_BrowseResponse","text":"UA_BrowseResponse\n\nBrowseResponse ^^^^^^^^^^^^^^ Browse the references for one or more nodes from the server address space. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowseResult","page":"Home","title":"open62541.UA_BrowseResult","text":"UA_BrowseResult\n\nBrowseResult ^^^^^^^^^^^^ The result of a browse operation. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BrowseResultMask","page":"Home","title":"open62541.UA_BrowseResultMask","text":"UA_BrowseResultMask\n\nBrowseResultMask ^^^^^^^^^^^^^^^^ A bit mask which specifies what should be returned in a browse response. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_BuildInfo","page":"Home","title":"open62541.UA_BuildInfo","text":"UA_BuildInfo\n\nBuildInfo ^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Byte","page":"Home","title":"open62541.UA_Byte","text":"Byte ^^^^ An integer value between 0 and 255. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ByteString","page":"Home","title":"open62541.UA_ByteString","text":"ByteString ^^^^^^^^^^ A sequence of octets. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CallMethodRequest","page":"Home","title":"open62541.UA_CallMethodRequest","text":"UA_CallMethodRequest\n\nCallMethodRequest ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CallMethodResult","page":"Home","title":"open62541.UA_CallMethodResult","text":"UA_CallMethodResult\n\nCallMethodResult ^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CallRequest","page":"Home","title":"open62541.UA_CallRequest","text":"UA_CallRequest\n\nCallRequest ^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CallResponse","page":"Home","title":"open62541.UA_CallResponse","text":"UA_CallResponse\n\nCallResponse ^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CertificateVerification","page":"Home","title":"open62541.UA_CertificateVerification","text":"UA_CertificateVerification\n\nPublic Key Infrastructure Integration ===================================== This file contains interface definitions for integration in a Public Key Infrastructure (PKI). Currently only one plugin interface is defined.\n\nCertificate Verification –––––––––––– This plugin verifies that the origin of the certificate is trusted. It does not assign any access rights/roles to the holder of the certificate.\n\nUsually, implementations of the certificate verification plugin provide an initialization method that takes a trust-list and a revocation-list as input. The lifecycle of the plugin is attached to a server or client config. The clear method is called automatically when the config is destroyed. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ChannelSecurityToken","page":"Home","title":"open62541.UA_ChannelSecurityToken","text":"UA_ChannelSecurityToken\n\nChannelSecurityToken ^^^^^^^^^^^^^^^^^^^^ The token that identifies a set of keys for an active secure channel. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ClientAsyncAddNodesCallback","page":"Home","title":"open62541.UA_ClientAsyncAddNodesCallback","text":"Node Management ^^^^^^^^^^^^^^^ \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ClientAsyncReadCallback","page":"Home","title":"open62541.UA_ClientAsyncReadCallback","text":"Raw Services ^^^^^^^^^^^^ \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ClientAsyncServiceCallback","page":"Home","title":"open62541.UA_ClientAsyncServiceCallback","text":".. _client-async-services:\n\nAsynchronous Services ––––––––––- All OPC UA services are asynchronous in nature. So several service calls can be made without waiting for the individual responses. Depending on the server's priorities responses may come in a different ordering than sent.\n\nAs noted in :ref:the client overview<client> currently no means of handling asynchronous events automatically is provided. However, some synchronous function calls will trigger handling, but to ensure this happens a client should periodically call UA_Client_run_iterate explicitly.\n\nConnection and session management are also performed in UA_Client_run_iterate, so to keep a connection healthy any client need to consider how and when it is appropriate to do the call. This is especially true for the periodic renewal of a SecureChannel's SecurityToken which is designed to have a limited lifetime and will invalidate the connection if not renewed.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ClientCallback","page":"Home","title":"open62541.UA_ClientCallback","text":"Timed Callbacks –––––––- Repeated callbacks can be attached to a client and will be executed in the defined interval. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ClientConfig","page":"Home","title":"open62541.UA_ClientConfig","text":"UA_ClientConfig\n\n.. _client:\n\nClient ======\n\nThe client implementation allows remote access to all OPC UA services. For convenience, some functionality has been wrapped in :ref:high-level abstractions <client-highlevel>.\n\nHowever: At this time, the client does not yet contain its own thread or event-driven main-loop, meaning that the client will not perform any actions automatically in the background. This is especially relevant for connection/session management and subscriptions. The user will have to periodically call UA_Client_run_iterate to ensure that asynchronous events are handled, including keeping a secure connection established. See more about :ref:asynchronicity<client-async-services> and :ref:subscriptions<client-subscriptions>.\n\n.. _client-config:\n\nClient Configuration ––––––––––\n\nThe client configuration is used for setting connection parameters and additional settings used by the client. The configuration should not be modified after it is passed to a client. Currently, only one client can use a configuration at a time.\n\nExamples for configurations are provided in the plugins folder. The usual usage is as follows:\n\nCreate a client configuration with default settings as a starting point 2. Modifiy the configuration, e.g. modifying the timeout 3. Instantiate a client with it 4. After shutdown of the client, clean up the configuration (free memory)\n\nThe :ref:tutorials provide a good starting point for this. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Client_DeleteMonitoredItemCallback","page":"Home","title":"open62541.UA_Client_DeleteMonitoredItemCallback","text":"The clientHandle parameter can't be set by the user, any value will be replaced by the client before sending the request to the server. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Client_DeleteSubscriptionCallback","page":"Home","title":"open62541.UA_Client_DeleteSubscriptionCallback","text":".. _client-subscriptions:\n\nSubscriptions ––––––-\n\nSubscriptions in OPC UA are asynchronous. That is, the client sends several PublishRequests to the server. The server returns PublishResponses with notifications. But only when a notification has been generated. The client does not wait for the responses and continues normal operations.\n\nNote the difference between Subscriptions and MonitoredItems. Subscriptions are used to report back notifications. MonitoredItems are used to generate notifications. Every MonitoredItem is attached to exactly one Subscription. And a Subscription can contain many MonitoredItems.\n\nThe client automatically processes PublishResponses (with a callback) in the background and keeps enough PublishRequests in transit. The PublishResponses may be recieved during a synchronous service call or in [UAClientrun_iterate](@ref). See more about :ref:asynchronicity<client-async-services>.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CloseSecureChannelRequest","page":"Home","title":"open62541.UA_CloseSecureChannelRequest","text":"UA_CloseSecureChannelRequest\n\nCloseSecureChannelRequest ^^^^^^^^^^^^^^^^^^^^^^^^^ Closes a secure channel. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CloseSecureChannelResponse","page":"Home","title":"open62541.UA_CloseSecureChannelResponse","text":"UA_CloseSecureChannelResponse\n\nCloseSecureChannelResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^ Closes a secure channel. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CloseSessionRequest","page":"Home","title":"open62541.UA_CloseSessionRequest","text":"UA_CloseSessionRequest\n\nCloseSessionRequest ^^^^^^^^^^^^^^^^^^^ Closes a session with the server. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CloseSessionResponse","page":"Home","title":"open62541.UA_CloseSessionResponse","text":"UA_CloseSessionResponse\n\nCloseSessionResponse ^^^^^^^^^^^^^^^^^^^^ Closes a session with the server. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ComplexNumberType","page":"Home","title":"open62541.UA_ComplexNumberType","text":"UA_ComplexNumberType\n\nComplexNumberType ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Connection","page":"Home","title":"open62541.UA_Connection","text":"UA_Connection\n\n********************************* amalgamated original file \"/workspace/srcdir/open62541/include/open62541/plugin/network.h\" **********************************\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ConnectionConfig","page":"Home","title":"open62541.UA_ConnectionConfig","text":"UA_ConnectionConfig\n\n.. _networking:\n\nNetworking Plugin API =====================\n\nConnection ––––– Client-server connections are represented by a UA_Connection. The connection is stateful and stores partially received messages, and so on. In addition, the connection contains function pointers to the underlying networking implementation. An example for this is the send function. So the connection encapsulates all the required networking functionality. This lets users on embedded (or otherwise exotic) systems implement their own networking plugins with a clear interface to the main open62541 library. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ContentFilter","page":"Home","title":"open62541.UA_ContentFilter","text":"UA_ContentFilter\n\nContentFilter ^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ContentFilterElement","page":"Home","title":"open62541.UA_ContentFilterElement","text":"UA_ContentFilterElement\n\nContentFilterElement ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ContentFilterElementResult","page":"Home","title":"open62541.UA_ContentFilterElementResult","text":"UA_ContentFilterElementResult\n\nContentFilterElementResult ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ContentFilterResult","page":"Home","title":"open62541.UA_ContentFilterResult","text":"UA_ContentFilterResult\n\nContentFilterResult ^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CreateMonitoredItemsRequest","page":"Home","title":"open62541.UA_CreateMonitoredItemsRequest","text":"UA_CreateMonitoredItemsRequest\n\nCreateMonitoredItemsRequest ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CreateMonitoredItemsResponse","page":"Home","title":"open62541.UA_CreateMonitoredItemsResponse","text":"UA_CreateMonitoredItemsResponse\n\nCreateMonitoredItemsResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CreateSessionRequest","page":"Home","title":"open62541.UA_CreateSessionRequest","text":"UA_CreateSessionRequest\n\nCreateSessionRequest ^^^^^^^^^^^^^^^^^^^^ Creates a new session with the server. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CreateSessionResponse","page":"Home","title":"open62541.UA_CreateSessionResponse","text":"UA_CreateSessionResponse\n\nCreateSessionResponse ^^^^^^^^^^^^^^^^^^^^^ Creates a new session with the server. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CreateSubscriptionRequest","page":"Home","title":"open62541.UA_CreateSubscriptionRequest","text":"UA_CreateSubscriptionRequest\n\nCreateSubscriptionRequest ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CreateSubscriptionResponse","page":"Home","title":"open62541.UA_CreateSubscriptionResponse","text":"UA_CreateSubscriptionResponse\n\nCreateSubscriptionResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DataChangeFilter","page":"Home","title":"open62541.UA_DataChangeFilter","text":"UA_DataChangeFilter\n\nDataChangeFilter ^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DataChangeNotification","page":"Home","title":"open62541.UA_DataChangeNotification","text":"UA_DataChangeNotification\n\nDataChangeNotification ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DataChangeTrigger","page":"Home","title":"open62541.UA_DataChangeTrigger","text":"UA_DataChangeTrigger\n\nDataChangeTrigger ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DataType","page":"Home","title":"open62541.UA_DataType","text":"UA_DataType\n\n.. _variant:\n\nVariant ^^^^^^^\n\nVariants may contain values of any type together with a description of the content. See the section on :ref:generic-types on how types are described. The standard mandates that variants contain built-in data types only. If the value is not of a builtin type, it is wrapped into an :ref:extensionobject. open62541 hides this wrapping transparently in the encoding layer. If the data type is unknown to the receiver, the variant contains the original ExtensionObject in binary or XML encoding.\n\nVariants may contain a scalar value or an array. For details on the handling of arrays, see the section on :ref:array-handling. Array variants can have an additional dimensionality (matrix, 3-tensor, ...) defined in an array of dimension lengths. The actual values are kept in an array of dimensions one. For users who work with higher-dimensions arrays directly, keep in mind that dimensions of higher rank are serialized first (the highest rank dimension has stride 1 and elements follow each other directly). Usually it is simplest to interact with higher-dimensional arrays via [UA_NumericRange](@ref) descriptions (see :ref:array-handling).\n\nTo differentiate between scalar / array variants, the following definition is used. [UAVariantisScalar](@ref) provides simplified access to these checks.\n\narrayLength == 0  data == NULL: undefined array of length -1 - arrayLength == 0  data == UA_EMPTY_ARRAY_SENTINEL(ref): array of length 0 - arrayLength == 0  data  UA_EMPTY_ARRAY_SENTINEL(ref): scalar value - arrayLength  0: array of the given length\n\nVariants can also be empty. Then, the pointer to the type description is NULL. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DataTypeAttributes","page":"Home","title":"open62541.UA_DataTypeAttributes","text":"UA_DataTypeAttributes\n\nDataTypeAttributes ^^^^^^^^^^^^^^^^^^ The attributes for a data type node. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DataTypeMember","page":"Home","title":"open62541.UA_DataTypeMember","text":"UA_DataTypeMember\n\n.. _generic-types:\n\nGeneric Type Handling ––––––––––-\n\nAll information about a (builtin/structured) data type is stored in a [UADataType](@ref). The array ``UATYPES`` contains the description of all standard-defined types. This type description is used for the following generic operations that work on all types:\n\nvoid T_init(T *ptr): Initialize the data type. This is synonymous with zeroing out the memory, i.e. memset(ptr 0 sizeof(T)). - T* T_new(): Allocate and return the memory for the data type. The value is already initialized. - UA_StatusCode(ref) T_copy(const T *src T *dst): Copy the content of the data type. Returns [UASTATUSCODEGOOD](@ref) or [UASTATUSCODEBADOUTOFMEMORY](@ref). - void T_clear(T *ptr): Delete the dynamically allocated content of the data type and perform a T_init to reset the type. - void T_delete(T *ptr): Delete the content of the data type and the memory for the data type itself.\n\nSpecializations, such as UA_Int32_new(ref)() are derived from the generic type operations as static inline functions. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DataTypeNode","page":"Home","title":"open62541.UA_DataTypeNode","text":"UA_DataTypeNode\n\n.. _datatypenode:\n\nDataTypeNode ––––––\n\nDataTypes represent simple and structured data types. DataTypes may contain arrays. But they always describe the structure of a single instance. In open62541, DataTypeNodes in the information model hierarchy are matched to [UA_DataType](@ref) type descriptions for :ref:generic-types via their NodeId.\n\nAbstract DataTypes (e.g. Number) cannot be the type of actual values. They are used to constrain values to possible child DataTypes (e.g. UInt32). \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DataValue","page":"Home","title":"open62541.UA_DataValue","text":"UA_DataValue\n\n.. _datavalue:\n\nDataValue ^^^^^^^^^ A data value with an associated status code and timestamps. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DateTime","page":"Home","title":"open62541.UA_DateTime","text":".. _datetime:\n\nDateTime ^^^^^^^^ An instance in time. A DateTime value is encoded as a 64-bit signed integer which represents the number of 100 nanosecond intervals since January 1, 1601 (UTC).\n\nThe methods providing an interface to the system clock are architecture- specific. Usually, they provide a UTC clock that includes leap seconds. The OPC UA standard allows the use of International Atomic Time (TAI) for the DateTime instead. But this is still unusual and not implemented for most SDKs. Currently (2019), UTC and TAI are 37 seconds apart due to leap seconds. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeadbandType","page":"Home","title":"open62541.UA_DeadbandType","text":"UA_DeadbandType\n\nDeadbandType ^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteMonitoredItemsRequest","page":"Home","title":"open62541.UA_DeleteMonitoredItemsRequest","text":"UA_DeleteMonitoredItemsRequest\n\nDeleteMonitoredItemsRequest ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteMonitoredItemsResponse","page":"Home","title":"open62541.UA_DeleteMonitoredItemsResponse","text":"UA_DeleteMonitoredItemsResponse\n\nDeleteMonitoredItemsResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteNodesItem","page":"Home","title":"open62541.UA_DeleteNodesItem","text":"UA_DeleteNodesItem\n\nDeleteNodesItem ^^^^^^^^^^^^^^^ A request to delete a node to the server address space. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteNodesRequest","page":"Home","title":"open62541.UA_DeleteNodesRequest","text":"UA_DeleteNodesRequest\n\nDeleteNodesRequest ^^^^^^^^^^^^^^^^^^ Delete one or more nodes from the server address space. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteNodesResponse","page":"Home","title":"open62541.UA_DeleteNodesResponse","text":"UA_DeleteNodesResponse\n\nDeleteNodesResponse ^^^^^^^^^^^^^^^^^^^ Delete one or more nodes from the server address space. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteReferencesItem","page":"Home","title":"open62541.UA_DeleteReferencesItem","text":"UA_DeleteReferencesItem\n\nDeleteReferencesItem ^^^^^^^^^^^^^^^^^^^^ A request to delete a node from the server address space. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteReferencesRequest","page":"Home","title":"open62541.UA_DeleteReferencesRequest","text":"UA_DeleteReferencesRequest\n\nDeleteReferencesRequest ^^^^^^^^^^^^^^^^^^^^^^^ Delete one or more references from the server address space. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteReferencesResponse","page":"Home","title":"open62541.UA_DeleteReferencesResponse","text":"UA_DeleteReferencesResponse\n\nDeleteReferencesResponse ^^^^^^^^^^^^^^^^^^^^^^^^ Delete one or more references from the server address space. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteSubscriptionsRequest","page":"Home","title":"open62541.UA_DeleteSubscriptionsRequest","text":"UA_DeleteSubscriptionsRequest\n\nDeleteSubscriptionsRequest ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DeleteSubscriptionsResponse","page":"Home","title":"open62541.UA_DeleteSubscriptionsResponse","text":"UA_DeleteSubscriptionsResponse\n\nDeleteSubscriptionsResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DiagnosticInfo","page":"Home","title":"open62541.UA_DiagnosticInfo","text":"UA_DiagnosticInfo\n\nDiagnosticInfo ^^^^^^^^^^^^^^ A structure that contains detailed error and diagnostic information associated with a StatusCode. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Double","page":"Home","title":"open62541.UA_Double","text":"Double ^^^^^^ An IEEE double precision (64 bit) floating point value. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_DoubleComplexNumberType","page":"Home","title":"open62541.UA_DoubleComplexNumberType","text":"UA_DoubleComplexNumberType\n\nDoubleComplexNumberType ^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Duration","page":"Home","title":"open62541.UA_Duration","text":"Duration ^^^^^^^^ A period of time measured in milliseconds. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EUInformation","page":"Home","title":"open62541.UA_EUInformation","text":"UA_EUInformation\n\nEUInformation ^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ElementOperand","page":"Home","title":"open62541.UA_ElementOperand","text":"UA_ElementOperand\n\nElementOperand ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EndpointDescription","page":"Home","title":"open62541.UA_EndpointDescription","text":"UA_EndpointDescription\n\nEndpointDescription ^^^^^^^^^^^^^^^^^^^ The description of a endpoint that can be used to access a server. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EnumDefinition","page":"Home","title":"open62541.UA_EnumDefinition","text":"UA_EnumDefinition\n\nEnumDefinition ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EnumField","page":"Home","title":"open62541.UA_EnumField","text":"UA_EnumField\n\nEnumField ^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EnumValueType","page":"Home","title":"open62541.UA_EnumValueType","text":"UA_EnumValueType\n\nEnumValueType ^^^^^^^^^^^^^ A mapping between a value of an enumerated type and a name and description. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EventFieldList","page":"Home","title":"open62541.UA_EventFieldList","text":"UA_EventFieldList\n\nEventFieldList ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EventFilter","page":"Home","title":"open62541.UA_EventFilter","text":"UA_EventFilter\n\nEventFilter ^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EventFilterResult","page":"Home","title":"open62541.UA_EventFilterResult","text":"UA_EventFilterResult\n\nEventFilterResult ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_EventNotificationList","page":"Home","title":"open62541.UA_EventNotificationList","text":"UA_EventNotificationList\n\nEventNotificationList ^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ExpandedNodeId","page":"Home","title":"open62541.UA_ExpandedNodeId","text":"UA_ExpandedNodeId\n\nExpandedNodeId ^^^^^^^^^^^^^^ A NodeId that allows the namespace URI to be specified instead of an index. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ExtensionObjectEncoding","page":"Home","title":"open62541.UA_ExtensionObjectEncoding","text":"UA_ExtensionObjectEncoding\n\n.. _extensionobject:\n\nExtensionObject ^^^^^^^^^^^^^^^\n\nExtensionObjects may contain scalars of any data type. Even those that are unknown to the receiver. See the section on :ref:generic-types on how types are described. If the received data type is unknown, the encoded string and target NodeId is stored instead of the decoded value. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ExternalValueCallback","page":"Home","title":"open62541.UA_ExternalValueCallback","text":"UA_ExternalValueCallback\n\n.. _value-callback:\n\nValue Callback ~~~~~~~~~~~~~~ Value Callbacks can be attached to variable and variable type nodes. If not NULL, they are called before reading and after writing respectively. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_FilterOperand","page":"Home","title":"open62541.UA_FilterOperand","text":"FilterOperand ^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_FilterOperator","page":"Home","title":"open62541.UA_FilterOperator","text":"UA_FilterOperator\n\nFilterOperator ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_FindServersRequest","page":"Home","title":"open62541.UA_FindServersRequest","text":"UA_FindServersRequest\n\nFindServersRequest ^^^^^^^^^^^^^^^^^^ Finds the servers known to the discovery server. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_FindServersResponse","page":"Home","title":"open62541.UA_FindServersResponse","text":"UA_FindServersResponse\n\nFindServersResponse ^^^^^^^^^^^^^^^^^^^ Finds the servers known to the discovery server. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Float","page":"Home","title":"open62541.UA_Float","text":"Float ^^^^^ An IEEE single precision (32 bit) floating point value. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_GetEndpointsRequest","page":"Home","title":"open62541.UA_GetEndpointsRequest","text":"UA_GetEndpointsRequest\n\nGetEndpointsRequest ^^^^^^^^^^^^^^^^^^^ Gets the endpoints used by the server. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_GetEndpointsResponse","page":"Home","title":"open62541.UA_GetEndpointsResponse","text":"UA_GetEndpointsResponse\n\nGetEndpointsResponse ^^^^^^^^^^^^^^^^^^^^ Gets the endpoints used by the server. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_GlobalNodeLifecycle","page":"Home","title":"open62541.UA_GlobalNodeLifecycle","text":"UA_GlobalNodeLifecycle\n\n.. _information-modelling:\n\nInformation Modelling =====================\n\nInformation modelling in OPC UA combines concepts from object-orientation and semantic modelling. At the core, an OPC UA information model is a graph made up of\n\nNodes: There are eight possible Node types (variable, object, method, ...) - References: Typed and directed relations between two nodes\n\nEvery node is identified by a unique (within the server) :ref:nodeid. Reference are triples of the form (source-nodeid referencetype-nodeid target-nodeid). An example reference between nodes is a hasTypeDefinition reference between a Variable and its VariableType. Some ReferenceTypes are hierarchic and must not form directed loops. See the section on :ref:ReferenceTypes <referencetypenode> for more details on possible references and their semantics.\n\nWarning!! The structures defined in this section are only relevant for the developers of custom Nodestores. The interaction with the information model is possible only via the OPC UA :ref:services. So the following sections are purely informational so that users may have a clear mental model of the underlying representation.\n\n.. _node-lifecycle:\n\nNode Lifecycle: Constructors, Destructors and Node Contexts –––––––––––––––––––––––––––––-\n\nTo finalize the instantiation of a node, a (user-defined) constructor callback is executed. There can be both a global constructor for all nodes and node-type constructor specific to the TypeDefinition of the new node (attached to an ObjectTypeNode or VariableTypeNode).\n\nIn the hierarchy of ObjectTypes and VariableTypes, only the constructor of the (lowest) type defined for the new node is executed. Note that every Object and Variable can have only one isTypeOf reference. But type-nodes can technically have several hasSubType references to implement multiple inheritance. Issues of (multiple) inheritance in the constructor need to be solved by the user.\n\nWhen a node is destroyed, the node-type destructor is called before the global destructor. So the overall node lifecycle is as follows:\n\nGlobal Constructor (set in the server config) 2. Node-Type Constructor (for VariableType or ObjectTypes) 3. (Usage-period of the Node) 4. Node-Type Destructor 5. Global Destructor\n\nThe constructor and destructor callbacks can be set to NULL and are not used in that case. If the node-type constructor fails, the global destructor will be called before removing the node. The destructors are assumed to never fail.\n\nEvery node carries a user-context and a constructor-context pointer. The user-context is used to attach custom data to a node. But the (user-defined) constructors and destructors may replace the user-context pointer if they wish to do so. The initial value for the constructor-context is NULL. When the AddNodes service is used over the network, the user-context pointer of the new node is also initially set to NULL.\n\nGlobal Node Lifecycle ~~~~~~~~~~~~~~~~~~~~~~ Global constructor and destructor callbacks used for every node type. To be set in the server config.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Guid","page":"Home","title":"open62541.UA_Guid","text":"UA_Guid\n\nGuid ^^^^ A 16 byte value that can be used as a globally unique identifier. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Int16","page":"Home","title":"open62541.UA_Int16","text":"Int16 ^^^^^ An integer value between -32 768 and 32 767. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Int32","page":"Home","title":"open62541.UA_Int32","text":"Int32 ^^^^^ An integer value between -2 147 483 648 and 2 147 483 647. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Int64","page":"Home","title":"open62541.UA_Int64","text":"Int64 ^^^^^ An integer value between -9 223 372 036 854 775 808 and 9 223 372 036 854 775 807. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_IssuedIdentityToken","page":"Home","title":"open62541.UA_IssuedIdentityToken","text":"UA_IssuedIdentityToken\n\nIssuedIdentityToken ^^^^^^^^^^^^^^^^^^^ A token representing a user identified by a WS-Security XML token. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_LiteralOperand","page":"Home","title":"open62541.UA_LiteralOperand","text":"UA_LiteralOperand\n\nLiteralOperand ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_LocaleId","page":"Home","title":"open62541.UA_LocaleId","text":"LocaleId ^^^^^^^^ An identifier for a user locale. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_LocalizedText","page":"Home","title":"open62541.UA_LocalizedText","text":"UA_LocalizedText\n\nLocalizedText ^^^^^^^^^^^^^ Human readable text with an optional locale identifier. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_LogLevel","page":"Home","title":"open62541.UA_LogLevel","text":"UA_LogLevel\n\nLogging Plugin API ==================\n\nServers and clients define a logger in their configuration. The logger is a plugin. A default plugin that logs to stdout is provided as an example. The logger plugin is stateful and can point to custom data. So it is possible to keep open file handlers in the logger context.\n\nEvery log-message consists of a log-level, a log-category and a string message content. The timestamp of the log-message is created within the logger. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MessageSecurityMode","page":"Home","title":"open62541.UA_MessageSecurityMode","text":"UA_MessageSecurityMode\n\nMessageSecurityMode ^^^^^^^^^^^^^^^^^^^ The type of security to use on a message. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MethodAttributes","page":"Home","title":"open62541.UA_MethodAttributes","text":"UA_MethodAttributes\n\nMethodAttributes ^^^^^^^^^^^^^^^^ The attributes for a method node. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MethodCallback","page":"Home","title":"open62541.UA_MethodCallback","text":".. _methodnode:\n\nMethodNode –––––\n\nMethods define callable functions and are invoked using the :ref:Call <method-services> service. MethodNodes may have special properties (variable children with a hasProperty reference) with the :ref:qualifiedname (0 InputArguments) and (0 OutputArguments). The input and output arguments are both described via an array of [UA_Argument](@ref). While the Call service uses a generic array of :ref:variant for input and output, the actual argument values are checked to match the signature of the MethodNode.\n\nNote that the same MethodNode may be referenced from several objects (and object types). For this, the NodeId of the method and of the object providing context is part of a Call request message. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ModifyMonitoredItemsRequest","page":"Home","title":"open62541.UA_ModifyMonitoredItemsRequest","text":"UA_ModifyMonitoredItemsRequest\n\nModifyMonitoredItemsRequest ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ModifyMonitoredItemsResponse","page":"Home","title":"open62541.UA_ModifyMonitoredItemsResponse","text":"UA_ModifyMonitoredItemsResponse\n\nModifyMonitoredItemsResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ModifySubscriptionRequest","page":"Home","title":"open62541.UA_ModifySubscriptionRequest","text":"UA_ModifySubscriptionRequest\n\nModifySubscriptionRequest ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ModifySubscriptionResponse","page":"Home","title":"open62541.UA_ModifySubscriptionResponse","text":"UA_ModifySubscriptionResponse\n\nModifySubscriptionResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MonitoredItemCreateRequest","page":"Home","title":"open62541.UA_MonitoredItemCreateRequest","text":"UA_MonitoredItemCreateRequest\n\nMonitoredItemCreateRequest ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MonitoredItemCreateResult","page":"Home","title":"open62541.UA_MonitoredItemCreateResult","text":"UA_MonitoredItemCreateResult\n\nMonitoredItemCreateResult ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MonitoredItemModifyRequest","page":"Home","title":"open62541.UA_MonitoredItemModifyRequest","text":"UA_MonitoredItemModifyRequest\n\nMonitoredItemModifyRequest ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MonitoredItemModifyResult","page":"Home","title":"open62541.UA_MonitoredItemModifyResult","text":"UA_MonitoredItemModifyResult\n\nMonitoredItemModifyResult ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MonitoredItemNotification","page":"Home","title":"open62541.UA_MonitoredItemNotification","text":"UA_MonitoredItemNotification\n\nMonitoredItemNotification ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MonitoringMode","page":"Home","title":"open62541.UA_MonitoringMode","text":"UA_MonitoringMode\n\nMonitoringMode ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_MonitoringParameters","page":"Home","title":"open62541.UA_MonitoringParameters","text":"UA_MonitoringParameters\n\nMonitoringParameters ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NetworkStatistics","page":"Home","title":"open62541.UA_NetworkStatistics","text":"UA_NetworkStatistics\n\nStatistic counters –––––––––\n\nThe stack manage statistic counter for the following layers:\n\nNetwork - Secure channel - Session\n\nThe session layer counters are matching the counters of the ServerDiagnosticsSummaryDataType that are defined in the OPC UA Part 5 specification. Counter of the other layers are not specified by OPC UA but are harmonized with the session layer counters if possible. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Node","page":"Home","title":"open62541.UA_Node","text":"UA_Node\n\nNode Union –––––\n\nA union that represents any kind of node. The node head can always be used. Check the NodeClass before accessing specific content.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NodeAttributes","page":"Home","title":"open62541.UA_NodeAttributes","text":"UA_NodeAttributes\n\nNodeAttributes ^^^^^^^^^^^^^^ The base attributes for all nodes. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NodeAttributesMask","page":"Home","title":"open62541.UA_NodeAttributesMask","text":"UA_NodeAttributesMask\n\nNodeAttributesMask ^^^^^^^^^^^^^^^^^^ The bits used to specify default attributes for a new node. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NodeClass","page":"Home","title":"open62541.UA_NodeClass","text":"UA_NodeClass\n\nNodeClass ^^^^^^^^^ A mask specifying the class of the node. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NodeIdType","page":"Home","title":"open62541.UA_NodeIdType","text":"UA_NodeIdType\n\n.. _nodeid:\n\nNodeId ^^^^^^ An identifier for a node in the address space of an OPC UA Server. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NodeTypeLifecycle","page":"Home","title":"open62541.UA_NodeTypeLifecycle","text":"UA_NodeTypeLifecycle\n\nNode Type Lifecycle ~~~~~~~~~~~~~~~~~~~ Constructor and destructors for specific object and variable types. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NodestoreVisitor","page":"Home","title":"open62541.UA_NodestoreVisitor","text":"Nodestore Plugin API ––––––––––\n\nThe following definitions are used for implementing custom node storage backends. Most users will want to use the default nodestore and don't need to work with the nodestore API.\n\nOutside of custom nodestore implementations, users should not manually edit nodes. Please use the OPC UA services for that. Otherwise, all consistency checks are omitted. This can crash the application eventually. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NotificationMessage","page":"Home","title":"open62541.UA_NotificationMessage","text":"UA_NotificationMessage\n\nNotificationMessage ^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_NumericRangeDimension","page":"Home","title":"open62541.UA_NumericRangeDimension","text":"UA_NumericRangeDimension\n\n.. _numericrange:\n\nNumericRange ^^^^^^^^^^^^\n\nNumericRanges are used to indicate subsets of a (multidimensional) array. They no official data type in the OPC UA standard and are transmitted only with a string encoding, such as \"1:2,0:3,5\". The colon separates min/max index and the comma separates dimensions. A single value indicates a range with a single element (min==max). \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ObjectAttributes","page":"Home","title":"open62541.UA_ObjectAttributes","text":"UA_ObjectAttributes\n\nObjectAttributes ^^^^^^^^^^^^^^^^ The attributes for an object node. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ObjectNode","page":"Home","title":"open62541.UA_ObjectNode","text":"UA_ObjectNode\n\nObjectNode –––––\n\nObjects are used to represent systems, system components, real-world objects and software objects. Objects are instances of an :ref:object type<objecttypenode> and may contain variables, methods and further objects. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ObjectTypeAttributes","page":"Home","title":"open62541.UA_ObjectTypeAttributes","text":"UA_ObjectTypeAttributes\n\nObjectTypeAttributes ^^^^^^^^^^^^^^^^^^^^ The attributes for an object type node. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ObjectTypeNode","page":"Home","title":"open62541.UA_ObjectTypeNode","text":"UA_ObjectTypeNode\n\n.. _objecttypenode:\n\nObjectTypeNode –––––––\n\nObjectTypes provide definitions for Objects. Abstract objects cannot be instantiated. See :ref:node-lifecycle for the use of constructor and destructor callbacks. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_OpenSecureChannelRequest","page":"Home","title":"open62541.UA_OpenSecureChannelRequest","text":"UA_OpenSecureChannelRequest\n\nOpenSecureChannelRequest ^^^^^^^^^^^^^^^^^^^^^^^^ Creates a secure channel with a server. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_OpenSecureChannelResponse","page":"Home","title":"open62541.UA_OpenSecureChannelResponse","text":"UA_OpenSecureChannelResponse\n\nOpenSecureChannelResponse ^^^^^^^^^^^^^^^^^^^^^^^^^ Creates a secure channel with a server. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Order","page":"Home","title":"open62541.UA_Order","text":"UA_Order\n\nOrder ––-\n\nThe Order enum is used to establish an absolute ordering between elements.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_PubSubConfiguration","page":"Home","title":"open62541.UA_PubSubConfiguration","text":".. _server:\n\nServer ======\n\n.. _server-configuration:\n\nServer Configuration ––––––––––\n\nThe configuration structure is passed to the server during initialization. The server expects that the configuration is not modified during runtime. Currently, only one server can use a configuration at a time. During shutdown, the server will clean up the parts of the configuration that are modified at runtime through the provided API.\n\nExamples for configurations are provided in the plugins folder. The usual usage is as follows:\n\nCreate a server configuration with default settings as a starting point 2. Modifiy the configuration, e.g. by adding a server certificate 3. Instantiate a server with it 4. After shutdown of the server, clean up the configuration (free memory)\n\nThe :ref:tutorials provide a good starting point for this. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_PublishRequest","page":"Home","title":"open62541.UA_PublishRequest","text":"UA_PublishRequest\n\nPublishRequest ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_PublishResponse","page":"Home","title":"open62541.UA_PublishResponse","text":"UA_PublishResponse\n\nPublishResponse ^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_QualifiedName","page":"Home","title":"open62541.UA_QualifiedName","text":"UA_QualifiedName\n\n.. _qualifiedname:\n\nQualifiedName ^^^^^^^^^^^^^ A name qualified by a namespace. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Range","page":"Home","title":"open62541.UA_Range","text":"UA_Range\n\nRange ^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReadRequest","page":"Home","title":"open62541.UA_ReadRequest","text":"UA_ReadRequest\n\nReadRequest ^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReadResponse","page":"Home","title":"open62541.UA_ReadResponse","text":"UA_ReadResponse\n\nReadResponse ^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReadValueId","page":"Home","title":"open62541.UA_ReadValueId","text":"UA_ReadValueId\n\nReadValueId ^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RedundancySupport","page":"Home","title":"open62541.UA_RedundancySupport","text":"UA_RedundancySupport\n\nRedundancySupport ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReferenceDescription","page":"Home","title":"open62541.UA_ReferenceDescription","text":"UA_ReferenceDescription\n\nReferenceDescription ^^^^^^^^^^^^^^^^^^^^ The description of a reference. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReferenceTarget","page":"Home","title":"open62541.UA_ReferenceTarget","text":"UA_ReferenceTarget\n\nBase Node Attributes ––––––––––\n\nNodes contain attributes according to their node type. The base node attributes are common to all node types. In the OPC UA :ref:services, attributes are referred to via the :ref:nodeid of the containing node and an integer :ref:attribute-id.\n\nInternally, open62541 uses [UANode](@ref) in places where the exact node type is not known or not important. The nodeClass attribute is used to ensure the correctness of casting from [UANode](@ref) to a specific node type. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReferenceTypeAttributes","page":"Home","title":"open62541.UA_ReferenceTypeAttributes","text":"UA_ReferenceTypeAttributes\n\nReferenceTypeAttributes ^^^^^^^^^^^^^^^^^^^^^^^ The attributes for a reference type node. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ReferenceTypeNode","page":"Home","title":"open62541.UA_ReferenceTypeNode","text":"UA_ReferenceTypeNode\n\n.. _referencetypenode:\n\nReferenceTypeNode ––––––––-\n\nEach reference between two nodes is typed with a ReferenceType that gives meaning to the relation. The OPC UA standard defines a set of ReferenceTypes as a mandatory part of OPC UA information models.\n\nAbstract ReferenceTypes cannot be used in actual references and are only used to structure the ReferenceTypes hierarchy - Symmetric references have the same meaning from the perspective of the source and target node\n\nThe figure below shows the hierarchy of the standard ReferenceTypes (arrows indicate a hasSubType relation). Refer to Part 3 of the OPC UA specification for the full semantics of each ReferenceType.\n\n.. graphviz::\n\ndigraph tree {\n\nnode [height=0, shape=box, fillcolor=\"#E5E5E5\", concentrate=true]\n\nreferences [label=\"References(Abstract, Symmetric)\"] hierarchical_references [label=\"HierarchicalReferences(Abstract)\"] references -> hierarchical_references\n\nnonhierarchical_references [label=\"NonHierarchicalReferences(Abstract, Symmetric)\"] references -> nonhierarchical_references\n\nhaschild [label=\"HasChild(Abstract)\"] hierarchical_references -> haschild\n\naggregates [label=\"Aggregates(Abstract)\"] haschild -> aggregates\n\norganizes [label=\"Organizes\"] hierarchical_references -> organizes\n\nhascomponent [label=\"HasComponent\"] aggregates -> hascomponent\n\nhasorderedcomponent [label=\"HasOrderedComponent\"] hascomponent -> hasorderedcomponent\n\nhasproperty [label=\"HasProperty\"] aggregates -> hasproperty\n\nhassubtype [label=\"HasSubtype\"] haschild -> hassubtype\n\nhasmodellingrule [label=\"HasModellingRule\"] nonhierarchical_references -> hasmodellingrule\n\nhastypedefinition [label=\"HasTypeDefinition\"] nonhierarchical_references -> hastypedefinition\n\nhasencoding [label=\"HasEncoding\"] nonhierarchical_references -> hasencoding\n\nhasdescription [label=\"HasDescription\"] nonhierarchical_references -> hasdescription\n\nhaseventsource [label=\"HasEventSource\"] hierarchical_references -> haseventsource\n\nhasnotifier [label=\"HasNotifier\"] hierarchical_references -> hasnotifier\n\ngeneratesevent [label=\"GeneratesEvent\"] nonhierarchical_references -> generatesevent\n\nalwaysgeneratesevent [label=\"AlwaysGeneratesEvent\"] generatesevent -> alwaysgeneratesevent\n\n{rank=same hierarchical_references nonhierarchical_references} {rank=same generatesevent haseventsource hasmodellingrule hasencoding hassubtype} {rank=same alwaysgeneratesevent hasproperty}\n\n}\n\nThe ReferenceType hierarchy can be extended with user-defined ReferenceTypes. Many Companion Specifications for OPC UA define new ReferenceTypes to be used in their domain of interest.\n\nFor the following example of custom ReferenceTypes, we attempt to model the structure of a technical system. For this, we introduce two custom ReferenceTypes. First, the hierarchical contains ReferenceType indicates that a system (represented by an OPC UA object) contains a component (or subsystem). This gives rise to a tree-structure of containment relations. For example, the motor (object) is contained in the car and the crankshaft is contained in the motor. Second, the symmetric connectedTo ReferenceType indicates that two components are connected. For example, the motor's crankshaft is connected to the gear box. Connections are independent of the containment hierarchy and can induce a general graph-structure. Further subtypes of connectedTo could be used to differentiate between physical, electrical and information related connections. A client can then learn the layout of a (physical) system represented in an OPC UA information model based on a common understanding of just two custom reference types. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RegisterNodesRequest","page":"Home","title":"open62541.UA_RegisterNodesRequest","text":"UA_RegisterNodesRequest\n\nRegisterNodesRequest ^^^^^^^^^^^^^^^^^^^^ Registers one or more nodes for repeated use within a session. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RegisterNodesResponse","page":"Home","title":"open62541.UA_RegisterNodesResponse","text":"UA_RegisterNodesResponse\n\nRegisterNodesResponse ^^^^^^^^^^^^^^^^^^^^^ Registers one or more nodes for repeated use within a session. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RelativePath","page":"Home","title":"open62541.UA_RelativePath","text":"UA_RelativePath\n\nRelativePath ^^^^^^^^^^^^ A relative path constructed from reference types and browse names. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RelativePathElement","page":"Home","title":"open62541.UA_RelativePathElement","text":"UA_RelativePathElement\n\nRelativePathElement ^^^^^^^^^^^^^^^^^^^ An element in a relative path. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RepublishRequest","page":"Home","title":"open62541.UA_RepublishRequest","text":"UA_RepublishRequest\n\nRepublishRequest ^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RepublishResponse","page":"Home","title":"open62541.UA_RepublishResponse","text":"UA_RepublishResponse\n\nRepublishResponse ^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RequestHeader","page":"Home","title":"open62541.UA_RequestHeader","text":"UA_RequestHeader\n\nRequestHeader ^^^^^^^^^^^^^ The header passed with every server request. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ResponseHeader","page":"Home","title":"open62541.UA_ResponseHeader","text":"UA_ResponseHeader\n\nResponseHeader ^^^^^^^^^^^^^^ The header passed with every server response. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_RuleHandling","page":"Home","title":"open62541.UA_RuleHandling","text":"UA_RuleHandling\n\nRule Handling ––––––-\n\nThe RuleHanding settings define how error cases that result from rules in the OPC UA specification shall be handled. The rule handling can be softened, e.g. to workaround misbehaving implementations or to mitigate the impact of additional rules that are introduced in later versions of the OPC UA specification. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SByte","page":"Home","title":"open62541.UA_SByte","text":"SByte ^^^^^ An integer value between -128 and 127. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SecureChannelState","page":"Home","title":"open62541.UA_SecureChannelState","text":"UA_SecureChannelState\n\nConnection State –––––––– \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SecurityPolicySignatureAlgorithm","page":"Home","title":"open62541.UA_SecurityPolicySignatureAlgorithm","text":"UA_SecurityPolicySignatureAlgorithm\n\nSecurityPolicy Interface Definition –––––––––––––––––- \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SecurityTokenRequestType","page":"Home","title":"open62541.UA_SecurityTokenRequestType","text":"UA_SecurityTokenRequestType\n\nSecurityTokenRequestType ^^^^^^^^^^^^^^^^^^^^^^^^ Indicates whether a token if being created or renewed. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_Server","page":"Home","title":"open62541.UA_Server","text":"Forward Declarations –––––––––– Opaque oointers used by the plugins. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ServerCallback","page":"Home","title":"open62541.UA_ServerCallback","text":"Timed Callbacks –––––––- \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ServerConfig","page":"Home","title":"open62541.UA_ServerConfig","text":"UA_ServerConfig\n\nField Note\nnetworkLayersSize .. note:: See the section on :ref:generic-types. Examples for working with custom data types are provided in examplescustom_datatype.\naccessControl .. note:: See the section for :ref:node lifecycle handling<node-lifecycle>.\nnodestore .. note:: See the section for :ref:async operations<async-operations>.\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ServerDiagnosticsSummaryDataType","page":"Home","title":"open62541.UA_ServerDiagnosticsSummaryDataType","text":"UA_ServerDiagnosticsSummaryDataType\n\nServerDiagnosticsSummaryDataType ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ServerState","page":"Home","title":"open62541.UA_ServerState","text":"UA_ServerState\n\nServerState ^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ServerStatistics","page":"Home","title":"open62541.UA_ServerStatistics","text":"UA_ServerStatistics\n\nStatistics –––––\n\nStatistic counters keeping track of the current state of the stack. Counters are structured per OPC UA communication layer. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ServerStatusDataType","page":"Home","title":"open62541.UA_ServerStatusDataType","text":"UA_ServerStatusDataType\n\nServerStatusDataType ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ServiceFault","page":"Home","title":"open62541.UA_ServiceFault","text":"UA_ServiceFault\n\nServiceFault ^^^^^^^^^^^^ The response returned by all services when there is a service level error. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SetMonitoringModeRequest","page":"Home","title":"open62541.UA_SetMonitoringModeRequest","text":"UA_SetMonitoringModeRequest\n\nSetMonitoringModeRequest ^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SetMonitoringModeResponse","page":"Home","title":"open62541.UA_SetMonitoringModeResponse","text":"UA_SetMonitoringModeResponse\n\nSetMonitoringModeResponse ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SetPublishingModeRequest","page":"Home","title":"open62541.UA_SetPublishingModeRequest","text":"UA_SetPublishingModeRequest\n\nSetPublishingModeRequest ^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SetPublishingModeResponse","page":"Home","title":"open62541.UA_SetPublishingModeResponse","text":"UA_SetPublishingModeResponse\n\nSetPublishingModeResponse ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SetTriggeringRequest","page":"Home","title":"open62541.UA_SetTriggeringRequest","text":"UA_SetTriggeringRequest\n\nSetTriggeringRequest ^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SetTriggeringResponse","page":"Home","title":"open62541.UA_SetTriggeringResponse","text":"UA_SetTriggeringResponse\n\nSetTriggeringResponse ^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SignatureData","page":"Home","title":"open62541.UA_SignatureData","text":"UA_SignatureData\n\nSignatureData ^^^^^^^^^^^^^ A digital signature. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SignedSoftwareCertificate","page":"Home","title":"open62541.UA_SignedSoftwareCertificate","text":"UA_SignedSoftwareCertificate\n\nSignedSoftwareCertificate ^^^^^^^^^^^^^^^^^^^^^^^^^ A software certificate with a digital signature. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SimpleAttributeOperand","page":"Home","title":"open62541.UA_SimpleAttributeOperand","text":"UA_SimpleAttributeOperand\n\nSimpleAttributeOperand ^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_StatusChangeNotification","page":"Home","title":"open62541.UA_StatusChangeNotification","text":"UA_StatusChangeNotification\n\nStatusChangeNotification ^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_StatusCode","page":"Home","title":"open62541.UA_StatusCode","text":".. _statuscode:\n\nStatusCode ^^^^^^^^^^ A numeric identifier for a error or condition that is associated with a value or an operation. See the section :ref:statuscodes for the meaning of a specific code. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_String","page":"Home","title":"open62541.UA_String","text":"UA_String\n\nString ^^^^^^ A sequence of Unicode characters. Strings are just an array of UA_Byte. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_StructureDefinition","page":"Home","title":"open62541.UA_StructureDefinition","text":"UA_StructureDefinition\n\nStructureDefinition ^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_StructureField","page":"Home","title":"open62541.UA_StructureField","text":"UA_StructureField\n\nStructureField ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_StructureType","page":"Home","title":"open62541.UA_StructureType","text":"UA_StructureType\n\nStructureType ^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_SubscriptionAcknowledgement","page":"Home","title":"open62541.UA_SubscriptionAcknowledgement","text":"UA_SubscriptionAcknowledgement\n\nSubscriptionAcknowledgement ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_TimestampsToReturn","page":"Home","title":"open62541.UA_TimestampsToReturn","text":"UA_TimestampsToReturn\n\nTimestampsToReturn ^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_TransferResult","page":"Home","title":"open62541.UA_TransferResult","text":"UA_TransferResult\n\nTransferResult ^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_TransferSubscriptionsRequest","page":"Home","title":"open62541.UA_TransferSubscriptionsRequest","text":"UA_TransferSubscriptionsRequest\n\nTransferSubscriptionsRequest ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_TransferSubscriptionsResponse","page":"Home","title":"open62541.UA_TransferSubscriptionsResponse","text":"UA_TransferSubscriptionsResponse\n\nTransferSubscriptionsResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_TranslateBrowsePathsToNodeIdsRequest","page":"Home","title":"open62541.UA_TranslateBrowsePathsToNodeIdsRequest","text":"UA_TranslateBrowsePathsToNodeIdsRequest\n\nTranslateBrowsePathsToNodeIdsRequest ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Translates one or more paths in the server address space. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_TranslateBrowsePathsToNodeIdsResponse","page":"Home","title":"open62541.UA_TranslateBrowsePathsToNodeIdsResponse","text":"UA_TranslateBrowsePathsToNodeIdsResponse\n\nTranslateBrowsePathsToNodeIdsResponse ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Translates one or more paths in the server address space. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UInt16","page":"Home","title":"open62541.UA_UInt16","text":"UInt16 ^^^^^^ An integer value between 0 and 65 535. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UInt32","page":"Home","title":"open62541.UA_UInt32","text":"UInt32 ^^^^^^ An integer value between 0 and 4 294 967 295. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UInt64","page":"Home","title":"open62541.UA_UInt64","text":"UInt64 ^^^^^^ An integer value between 0 and 18 446 744 073 709 551 615. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UnregisterNodesRequest","page":"Home","title":"open62541.UA_UnregisterNodesRequest","text":"UA_UnregisterNodesRequest\n\nUnregisterNodesRequest ^^^^^^^^^^^^^^^^^^^^^^ Unregisters one or more previously registered nodes. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UnregisterNodesResponse","page":"Home","title":"open62541.UA_UnregisterNodesResponse","text":"UA_UnregisterNodesResponse\n\nUnregisterNodesResponse ^^^^^^^^^^^^^^^^^^^^^^^ Unregisters one or more previously registered nodes. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UserIdentityToken","page":"Home","title":"open62541.UA_UserIdentityToken","text":"UA_UserIdentityToken\n\nUserIdentityToken ^^^^^^^^^^^^^^^^^ A base type for a user identity token. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UserNameIdentityToken","page":"Home","title":"open62541.UA_UserNameIdentityToken","text":"UA_UserNameIdentityToken\n\nUserNameIdentityToken ^^^^^^^^^^^^^^^^^^^^^ A token representing a user identified by a user name and password. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UserTokenPolicy","page":"Home","title":"open62541.UA_UserTokenPolicy","text":"UA_UserTokenPolicy\n\nUserTokenPolicy ^^^^^^^^^^^^^^^ Describes a user token that can be used with a server. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UserTokenType","page":"Home","title":"open62541.UA_UserTokenType","text":"UA_UserTokenType\n\nUserTokenType ^^^^^^^^^^^^^ The possible user token types. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UsernamePasswordLogin","page":"Home","title":"open62541.UA_UsernamePasswordLogin","text":"UA_UsernamePasswordLogin\n\n********************************* amalgamated original file \"/workspace/srcdir/open62541/plugins/include/open62541/plugin/accesscontrol_default.h\" **********************************\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_UtcTime","page":"Home","title":"open62541.UA_UtcTime","text":"UtcTime ^^^^^^^ A date/time value specified in Universal Coordinated Time (UTC). \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ValueSource","page":"Home","title":"open62541.UA_ValueSource","text":"UA_ValueSource\n\nVariableNode ––––––\n\nVariables store values in a :ref:datavalue together with metadata for introspection. Most notably, the attributes data type, value rank and array dimensions constrain the possible values the variable can take on.\n\nVariables come in two flavours: properties and datavariables. Properties are related to a parent with a hasProperty reference and may not have child nodes themselves. Datavariables may contain properties (hasProperty) and also datavariables (hasComponents).\n\nAll variables are instances of some :ref:variabletypenode in return constraining the possible data type, value rank and array dimensions attributes.\n\nData Type ~~~~~~~~~\n\nThe (scalar) data type of the variable is constrained to be of a specific type or one of its children in the type hierarchy. The data type is given as a NodeId pointing to a :ref:datatypenode in the type hierarchy. See the Section :ref:datatypenode for more details.\n\nIf the data type attribute points to UInt32, then the value attribute must be of that exact type since UInt32 does not have children in the type hierarchy. If the data type attribute points Number, then the type of the value attribute may still be UInt32, but also Float or Byte.\n\nConsistency between the data type attribute in the variable and its :ref:VariableTypeNode is ensured.\n\nValue Rank ~~~~~~~~~~\n\nThis attribute indicates whether the value attribute of the variable is an array and how many dimensions the array has. It may have the following values:\n\nn = 1: the value is an array with the specified number of dimensions - n = 0: the value is an array with one or more dimensions - n = -1: the value is a scalar - n = -2: the value can be a scalar or an array with any number of dimensions - n = -3: the value can be a scalar or a one dimensional array\n\nConsistency between the value rank attribute in the variable and its :ref:variabletypenode is ensured.\n\nArray Dimensions ~~~~~~~~~~~~~~~~\n\nIf the value rank permits the value to be a (multi-dimensional) array, the exact length in each dimensions can be further constrained with this attribute.\n\nFor positive lengths, the variable value is guaranteed to be of the same length in this dimension. - The dimension length zero is a wildcard and the actual value may have any length in this dimension.\n\nConsistency between the array dimensions attribute in the variable and its :ref:variabletypenode is ensured. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_VariableAttributes","page":"Home","title":"open62541.UA_VariableAttributes","text":"UA_VariableAttributes\n\nVariableAttributes ^^^^^^^^^^^^^^^^^^ The attributes for a variable node. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_VariableTypeAttributes","page":"Home","title":"open62541.UA_VariableTypeAttributes","text":"UA_VariableTypeAttributes\n\nVariableTypeAttributes ^^^^^^^^^^^^^^^^^^^^^^ The attributes for a variable type node. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_VariableTypeNode","page":"Home","title":"open62541.UA_VariableTypeNode","text":"UA_VariableTypeNode\n\n.. _variabletypenode:\n\nVariableTypeNode ––––––––\n\nVariableTypes are used to provide type definitions for variables. VariableTypes constrain the data type, value rank and array dimensions attributes of variable instances. Furthermore, instantiating from a specific variable type may provide semantic information. For example, an instance from MotorTemperatureVariableType is more meaningful than a float variable instantiated from BaseDataVariable. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ViewAttributes","page":"Home","title":"open62541.UA_ViewAttributes","text":"UA_ViewAttributes\n\nViewAttributes ^^^^^^^^^^^^^^ The attributes for a view node. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ViewDescription","page":"Home","title":"open62541.UA_ViewDescription","text":"UA_ViewDescription\n\nViewDescription ^^^^^^^^^^^^^^^ The view to browse. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_ViewNode","page":"Home","title":"open62541.UA_ViewNode","text":"UA_ViewNode\n\nViewNode ––––\n\nEach View defines a subset of the Nodes in the AddressSpace. Views can be used when browsing an information model to focus on a subset of nodes and references only. ViewNodes can be created and be interacted with. But their use in the :ref:Browse<view-services> service is currently unsupported in open62541. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_WriteRequest","page":"Home","title":"open62541.UA_WriteRequest","text":"UA_WriteRequest\n\nWriteRequest ^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_WriteResponse","page":"Home","title":"open62541.UA_WriteResponse","text":"UA_WriteResponse\n\nWriteResponse ^^^^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_WriteValue","page":"Home","title":"open62541.UA_WriteValue","text":"UA_WriteValue\n\nWriteValue ^^^^^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_X509IdentityToken","page":"Home","title":"open62541.UA_X509IdentityToken","text":"UA_X509IdentityToken\n\nX509IdentityToken ^^^^^^^^^^^^^^^^^ A token representing a user identified by an X509 certificate. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_XVType","page":"Home","title":"open62541.UA_XVType","text":"UA_XVType\n\nXVType ^^^^^^\n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_XmlElement","page":"Home","title":"open62541.UA_XmlElement","text":"XmlElement ^^^^^^^^^^ An XML element. \n\n\n\n\n\n","category":"type"},{"location":"#open62541.UA_CertificateVerification_AcceptAll-Tuple{Any}","page":"Home","title":"open62541.UA_CertificateVerification_AcceptAll","text":"UA_CertificateVerification_AcceptAll(cv)\n\n********************************* amalgamated original file \"/workspace/srcdir/open62541/plugins/include/open62541/plugin/pki_default.h\" **********************************\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_addReference-NTuple{7, Any}","page":"Home","title":"open62541.UA_Client_addReference","text":"UA_Client_addReference(client, sourceNodeId, referenceTypeId, isForward, targetServerUri, targetNodeId, targetNodeClass)\n\nNode Management ^^^^^^^^^^^^^^^ See the section on :ref:server-side node management <addnodes>. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_findDataType-Tuple{Any, Any}","page":"Home","title":"open62541.UA_Client_findDataType","text":"UA_Client_findDataType(client, typeId)\n\nClient Utility Functions –––––––––––– \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Client_new-Tuple{}","page":"Home","title":"open62541.UA_Client_new","text":"UA_Client_new()\n\n********************************* amalgamated original file \"/workspace/srcdir/open62541/plugins/include/open62541/client_config_default.h\" **********************************\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Nodestore_HashMap-Tuple{Any}","page":"Home","title":"open62541.UA_Nodestore_HashMap","text":"UA_Nodestore_HashMap(ns)\n\n********************************* amalgamated original file \"/workspace/srcdir/open62541/plugins/include/open62541/plugin/nodestore_default.h\" **********************************\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_SecurityPolicy_None-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_SecurityPolicy_None","text":"UA_SecurityPolicy_None(policy, localCertificate, logger)\n\n********************************* amalgamated original file \"/workspace/srcdir/open62541/plugins/include/open62541/plugin/securitypolicy_default.h\" **********************************\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_addNode_begin-NTuple{11, Any}","page":"Home","title":"open62541.UA_Server_addNode_begin","text":"UA_Server_addNode_begin(server, nodeClass, requestedNewNodeId, parentNodeId, referenceTypeId, browseName, typeDefinition, attr, attributeType, nodeContext, outNewNodeId)\n\nThe method pair UA_Server_addNode_begin and _finish splits the AddNodes service in two parts. This is useful if the node shall be modified before finish the instantiation. For example to add children with specific NodeIds. Otherwise, mandatory children (e.g. of an ObjectType) are added with pseudo-random unique NodeIds. Existing children are detected during the _finish part via their matching BrowseName.\n\nThe _begin method: - prepares the node and adds it to the nodestore - copies some unassigned attributes from the TypeDefinition node internally - adds the references to the parent (and the TypeDefinition if applicable) - performs type-checking of variables.\n\nYou can add an object node without a parent if you set the parentNodeId and referenceTypeId to UA_NODE_ID_NULL. Then you need to add the parent reference and hasTypeDef reference yourself before calling the _finish method. Not that this is only allowed for object nodes.\n\nThe _finish method: - copies mandatory children - calls the node constructor(s) at the end - may remove the node if it encounters an error.\n\nThe special UA_Server_addMethodNode_finish method needs to be used for method nodes, since there you need to explicitly specifiy the input and output arguments which are added in the finish step (if not yet already there) \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_addReference-NTuple{5, Any}","page":"Home","title":"open62541.UA_Server_addReference","text":"UA_Server_addReference(server, sourceId, refTypeId, targetId, isForward)\n\nReference Management –––––––––– \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_browse-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_browse","text":"UA_Server_browse(server, maxReferences, bd)\n\nBrowsing –––– \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_findDataType-Tuple{Any, Any}","page":"Home","title":"open62541.UA_Server_findDataType","text":"UA_Server_findDataType(server, typeId)\n\nUtility Functions ––––––––- \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_new-Tuple{}","page":"Home","title":"open62541.UA_Server_new","text":"UA_Server_new()\n\n********************************* amalgamated original file \"/workspace/srcdir/open62541/plugins/include/open62541/server_config_default.h\" **********************************\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_processBinaryMessage-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_processBinaryMessage","text":"UA_Server_processBinaryMessage(server, connection, message)\n\nServer Network Layer –––––––––– The server exposes two functions to interact with remote clients: processBinaryMessage and removeConnection. These functions are called by the server network layer.\n\nIt is the job of the server network layer to listen on a TCP socket, to accept new connections, to call the server with received messages and to signal closed connections to the server.\n\nThe network layer is part of the server config. So users can provide a custom implementation if the provided example does not fit their architecture. The network layer is invoked only from the server's main loop. So the network layer does not need to be thread-safe. If the networklayer receives a positive duration for blocking listening, the server's main loop will block until a message is received or the duration times out. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_setAdminSessionContext-Tuple{Any, Any}","page":"Home","title":"open62541.UA_Server_setAdminSessionContext","text":"UA_Server_setAdminSessionContext(server, context)\n\nInformation Model Callbacks –––––––––––––-\n\nThere are three places where a callback from an information model to user-defined code can happen.\n\nCustom node constructors and destructors - Linking VariableNodes with an external data source - MethodNode callbacks\n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_Server_setVariableNode_dataSource-Tuple{Any, Any, Any}","page":"Home","title":"open62541.UA_Server_setVariableNode_dataSource","text":"UA_Server_setVariableNode_dataSource(server, nodeId, dataSource)\n\n.. _datasource:\n\nData Source Callback ^^^^^^^^^^^^^^^^^^^^\n\nThe server has a unique way of dealing with the content of variables. Instead of storing a variant attached to the variable node, the node can point to a function with a local data provider. Whenever the value attribute is read, the function will be called and asked to provide a UA_DataValue return value that contains the value content and additional timestamps.\n\nIt is expected that the read callback is implemented. The write callback can be set to a null-pointer. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_findDataType-Tuple{Any}","page":"Home","title":"open62541.UA_findDataType","text":"UA_findDataType(typeId)\n\nBuiltin data types can be accessed as UA_TYPES[UA_TYPES_XXX], where XXX is the name of the data type. If only the NodeId of a type is known, use the following method to retrieve the data type description. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.UA_random_seed-Tuple{Any}","page":"Home","title":"open62541.UA_random_seed","text":"UA_random_seed(seed)\n\nRandom Number Generator –––––––––––- If UA_MULTITHREADING is defined, then the seed is stored in thread local storage. The seed is initialized for every thread in the server/client. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.__UA_Client_Service-NTuple{5, Any}","page":"Home","title":"open62541.__UA_Client_Service","text":"__UA_Client_Service(client, request, requestType, response, responseType)\n\n.. _client-services:\n\nServices ––––\n\nThe raw OPC UA services are exposed to the client. But most of them time, it is better to use the convenience functions from ua_client_highlevelh that wrap the raw services. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.__UA_Client_readAttribute-NTuple{5, Any}","page":"Home","title":"open62541.__UA_Client_readAttribute","text":"__UA_Client_readAttribute(client, nodeId, attributeId, out, outDataType)\n\n.. _client-highlevel:\n\nHighlevel Client Functionality –––––––––––––––\n\nThe following definitions are convenience functions making use of the standard OPC UA services in the background. This is a less flexible way of handling the stack, because at many places sensible defaults are presumed; at the same time using these functions is the easiest way of implementing an OPC UA application, as you will not have to consider all the details that go into the OPC UA services. If more flexibility is needed, you can always achieve the same functionality using the raw :ref:OPC UA services <client-services>.\n\nRead Attributes ^^^^^^^^^^^^^^^ The following functions can be used to retrieve a single node attribute. Use the regular service to read several attributes at once. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.__UA_Client_readAttribute_async-NTuple{7, Any}","page":"Home","title":"open62541.__UA_Client_readAttribute_async","text":"__UA_Client_readAttribute_async(client, nodeId, attributeId, outDataType, callback, userdata, reqId)\n\nRead Attribute ^^^^^^^^^^^^^^ \n\n\n\n\n\n","category":"method"},{"location":"#open62541.__UA_Client_translateBrowsePathsToNodeIds_async-NTuple{7, Any}","page":"Home","title":"open62541.__UA_Client_translateBrowsePathsToNodeIds_async","text":"__UA_Client_translateBrowsePathsToNodeIds_async(client, paths, ids, pathSize, callback, userdata, reqId)\n\nMisc Functionalities ^^^^^^^^^^^^^^^^^^^^ \n\n\n\n\n\n","category":"method"},{"location":"#open62541.__UA_Client_writeAttribute-NTuple{5, Any}","page":"Home","title":"open62541.__UA_Client_writeAttribute","text":"__UA_Client_writeAttribute(client, nodeId, attributeId, in, inDataType)\n\nWrite Attributes ^^^^^^^^^^^^^^^^\n\nThe following functions can be use to write a single node attribute at a time. Use the regular write service to write several attributes at once. \n\n\n\n\n\n","category":"method"},{"location":"#open62541.__UA_Client_writeAttribute_async-NTuple{8, Any}","page":"Home","title":"open62541.__UA_Client_writeAttribute_async","text":"__UA_Client_writeAttribute_async(client, nodeId, attributeId, in, inDataType, callback, userdata, reqId)\n\nWrite Attribute ^^^^^^^^^^^^^^ \n\n\n\n\n\n","category":"method"}]
}
